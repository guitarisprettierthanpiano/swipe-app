/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={679:(e,t,n)=>{"use strict";var r=n(864),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=a;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var o=p(n);o&&o!==m&&e(t,o,r)}var a=s(n);f&&(a=a.concat(f(n)));for(var l=u(t),h=u(n),v=0;v<a.length;++v){var y=a[v];if(!(i[y]||r&&r[y]||h&&h[y]||l&&l[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},826:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,i){for(var a,l,u=o(e),c=1;c<arguments.length;c++){for(var s in a=Object(arguments[c]))n.call(a,s)&&(u[s]=a[s]);if(t){l=t(a);for(var f=0;f<l.length;f++)r.call(a,l[f])&&(u[l[f]]=a[l[f]])}}return u}},779:(e,t,n)=>{var r=n(826);e.exports=function e(t,n,o){return r(n)||(o=n||o,n=[]),o=o||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(t,n):r(t)?function(t,n,r){for(var o=[],i=0;i<t.length;i++)o.push(e(t[i],n,r).source);return s(new RegExp("(?:"+o.join("|")+")",f(r)),n)}(t,n,o):function(e,t,n){return d(i(e,n),t,n)}(t,n,o)},e.exports.parse=i,e.exports.compile=function(e,t){return l(i(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],d=n[1],p=n.index;if(l+=e.slice(a,p),a=p+f.length,d)l+=d[1];else{var m=e[a],h=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var x=null!=h&&null!=m&&m!==h,k="+"===b||"*"===b,T="?"===b||"*"===b,E=n[2]||s,S=y||g;r.push({name:v||i++,prefix:h||"",delimiter:E,optional:T,repeat:k,partial:x,asterisk:!!w,pattern:S?c(S):w?".*":"[^"+u(E)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(n[o]=new RegExp("^(?:"+e[o].pattern+")$",f(t)));return function(t,o){for(var i="",l=t||{},u=(o||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=l[s.name];if(null==d){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)a+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),a+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var m=u(n.delimiter||"/"),h=a.slice(-m.length)===m;return o||(a=(h?a.slice(0,-m.length):a)+"(?:"+m+"(?=$))?"),a+=i?"$":o&&h?"":"(?="+m+"|$)",s(new RegExp("^"+a,f(n)),t)}},703:(e,t,n)=>{"use strict";var r=n(414);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),o=n(418),i=n(840);function a(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,(function(){return u[c++]})))).name="Invariant Violation"}throw e.framesToPop=1,e}}function l(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);a(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}function u(e,t,n,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}r||l("227");var c=!1,s=null,f=!1,d=null,p={onError:function(e){c=!0,s=e}};function m(e,t,n,r,o,i,a,l,f){c=!1,s=null,u.apply(p,arguments)}var h=null,v={};function y(){if(h)for(var e in v){var t=v[e],n=h.indexOf(e);if(-1<n||l("96",e),!b[n])for(var r in t.extractEvents||l("97",e),b[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,u=r;w.hasOwnProperty(u)&&l("99",u),w[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&g(c[o],a,u);o=!0}else i.registrationName?(g(i.registrationName,a,u),o=!0):o=!1;o||l("98",r,e)}}}function g(e,t,n){x[e]&&l("100",e),x[e]=t,k[e]=t.eventTypes[n].dependencies}var b=[],w={},x={},k={},T=null,E=null,S=null;function _(e,t,n){var r=e.type||"unknown-event";e.currentTarget=S(n),function(e,t,n,r,o,i,a,u,p){if(m.apply(this,arguments),c){if(c){var h=s;c=!1,s=null}else l("198"),h=void 0;f||(f=!0,d=h)}}(r,t,void 0,e),e.currentTarget=null}function C(e,t){return null==t&&l("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function P(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var O=null;function N(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)_(e,t[r],n[r]);else t&&_(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var R={injectEventPluginOrder:function(e){h&&l("101"),h=Array.prototype.slice.call(e),y()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];v.hasOwnProperty(t)&&v[t]===r||(v[t]&&l("102",t),v[t]=r,n=!0)}n&&y()}};function M(e,t){var n=e.stateNode;if(!n)return null;var r=T(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&l("231",t,typeof n),n)}function U(e){if(null!==e&&(O=C(O,e)),e=O,O=null,e&&(P(e,N),O&&l("95"),f))throw e=d,f=!1,d=null,e}var D=Math.random().toString(36).slice(2),I="__reactInternalInstance$"+D,A="__reactEventHandlers$"+D;function L(e){if(e[I])return e[I];for(;!e[I];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[I]).tag||6===e.tag?e:null}function z(e){return!(e=e[I])||5!==e.tag&&6!==e.tag?null:e}function F(e){if(5===e.tag||6===e.tag)return e.stateNode;l("33")}function j(e){return e[A]||null}function $(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function W(e,t,n){(t=M(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=C(n._dispatchListeners,t),n._dispatchInstances=C(n._dispatchInstances,e))}function V(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=$(t);for(t=n.length;0<t--;)W(n[t],"captured",e);for(t=0;t<n.length;t++)W(n[t],"bubbled",e)}}function H(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=M(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=C(n._dispatchListeners,t),n._dispatchInstances=C(n._dispatchInstances,e))}function B(e){e&&e.dispatchConfig.registrationName&&H(e._targetInst,null,e)}function Q(e){P(e,V)}var q=!("undefined"==typeof window||!window.document||!window.document.createElement);function K(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Y={animationend:K("Animation","AnimationEnd"),animationiteration:K("Animation","AnimationIteration"),animationstart:K("Animation","AnimationStart"),transitionend:K("Transition","TransitionEnd")},X={},G={};function J(e){if(X[e])return X[e];if(!Y[e])return e;var t,n=Y[e];for(t in n)if(n.hasOwnProperty(t)&&t in G)return X[e]=n[t];return e}q&&(G=document.createElement("div").style,"AnimationEvent"in window||(delete Y.animationend.animation,delete Y.animationiteration.animation,delete Y.animationstart.animation),"TransitionEvent"in window||delete Y.transitionend.transition);var Z=J("animationend"),ee=J("animationiteration"),te=J("animationstart"),ne=J("transitionend"),re="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),oe=null,ie=null,ae=null;function le(){if(ae)return ae;var e,t,n=ie,r=n.length,o="value"in oe?oe.value:oe.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return ae=o.slice(e,1<t?1-t:void 0)}function ue(){return!0}function ce(){return!1}function se(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ue:ce,this.isPropagationStopped=ce,this}function fe(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function de(e){e instanceof this||l("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function pe(e){e.eventPool=[],e.getPooled=fe,e.release=de}o(se.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ue)},persist:function(){this.isPersistent=ue},isPersistent:ce,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=ce,this._dispatchInstances=this._dispatchListeners=null}}),se.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},se.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,pe(n),n},pe(se);var me=se.extend({data:null}),he=se.extend({data:null}),ve=[9,13,27,32],ye=q&&"CompositionEvent"in window,ge=null;q&&"documentMode"in document&&(ge=document.documentMode);var be=q&&"TextEvent"in window&&!ge,we=q&&(!ye||ge&&8<ge&&11>=ge),xe=String.fromCharCode(32),ke={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Te=!1;function Ee(e,t){switch(e){case"keyup":return-1!==ve.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Se(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var _e=!1,Ce={eventTypes:ke,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(ye)e:{switch(e){case"compositionstart":o=ke.compositionStart;break e;case"compositionend":o=ke.compositionEnd;break e;case"compositionupdate":o=ke.compositionUpdate;break e}o=void 0}else _e?Ee(e,n)&&(o=ke.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=ke.compositionStart);return o?(we&&"ko"!==n.locale&&(_e||o!==ke.compositionStart?o===ke.compositionEnd&&_e&&(i=le()):(ie="value"in(oe=r)?oe.value:oe.textContent,_e=!0)),o=me.getPooled(o,t,n,r),(i||null!==(i=Se(n)))&&(o.data=i),Q(o),i=o):i=null,(e=be?function(e,t){switch(e){case"compositionend":return Se(t);case"keypress":return 32!==t.which?null:(Te=!0,xe);case"textInput":return(e=t.data)===xe&&Te?null:e;default:return null}}(e,n):function(e,t){if(_e)return"compositionend"===e||!ye&&Ee(e,t)?(e=le(),ae=ie=oe=null,_e=!1,e):null;switch(e){default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return we&&"ko"!==t.locale?null:t.data}}(e,n))?((t=he.getPooled(ke.beforeInput,t,n,r)).data=e,Q(t)):t=null,null===i?t:null===t?i:[i,t]}},Pe=null,Oe=null,Ne=null;function Re(e){if(e=E(e)){"function"!=typeof Pe&&l("280");var t=T(e.stateNode);Pe(e.stateNode,e.type,t)}}function Me(e){Oe?Ne?Ne.push(e):Ne=[e]:Oe=e}function Ue(){if(Oe){var e=Oe,t=Ne;if(Ne=Oe=null,Re(e),t)for(e=0;e<t.length;e++)Re(t[e])}}function De(e,t){return e(t)}function Ie(e,t,n){return e(t,n)}function Ae(){}var Le=!1;function ze(e,t){if(Le)return e(t);Le=!0;try{return De(e,t)}finally{Le=!1,(null!==Oe||null!==Ne)&&(Ae(),Ue())}}var Fe={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function je(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Fe[e.type]:"textarea"===t}function $e(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function We(e){if(!q)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function Ve(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function He(e){e._valueTracker||(e._valueTracker=function(e){var t=Ve(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Be(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Ve(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var Qe=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,qe=/^(.*)[\\\/]/,Ke="function"==typeof Symbol&&Symbol.for,Ye=Ke?Symbol.for("react.element"):60103,Xe=Ke?Symbol.for("react.portal"):60106,Ge=Ke?Symbol.for("react.fragment"):60107,Je=Ke?Symbol.for("react.strict_mode"):60108,Ze=Ke?Symbol.for("react.profiler"):60114,et=Ke?Symbol.for("react.provider"):60109,tt=Ke?Symbol.for("react.context"):60110,nt=Ke?Symbol.for("react.concurrent_mode"):60111,rt=Ke?Symbol.for("react.forward_ref"):60112,ot=Ke?Symbol.for("react.suspense"):60113,it=Ke?Symbol.for("react.memo"):60115,at=Ke?Symbol.for("react.lazy"):60116,lt="function"==typeof Symbol&&Symbol.iterator;function ut(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=lt&&e[lt]||e["@@iterator"])?e:null}function ct(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case nt:return"ConcurrentMode";case Ge:return"Fragment";case Xe:return"Portal";case Ze:return"Profiler";case Je:return"StrictMode";case ot:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case tt:return"Context.Consumer";case et:return"Context.Provider";case rt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case it:return ct(e.type);case at:if(e=1===e._status?e._result:null)return ct(e)}return null}function st(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ct(e.type);n=null,r&&(n=ct(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(qe,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var ft=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,dt=Object.prototype.hasOwnProperty,pt={},mt={};function ht(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var vt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){vt[e]=new ht(e,0,!1,e,null)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];vt[t]=new ht(t,1,!1,e[1],null)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){vt[e]=new ht(e,2,!1,e.toLowerCase(),null)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){vt[e]=new ht(e,2,!1,e,null)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){vt[e]=new ht(e,3,!1,e.toLowerCase(),null)})),["checked","multiple","muted","selected"].forEach((function(e){vt[e]=new ht(e,3,!0,e,null)})),["capture","download"].forEach((function(e){vt[e]=new ht(e,4,!1,e,null)})),["cols","rows","size","span"].forEach((function(e){vt[e]=new ht(e,6,!1,e,null)})),["rowSpan","start"].forEach((function(e){vt[e]=new ht(e,5,!1,e.toLowerCase(),null)}));var yt=/[\-:]([a-z])/g;function gt(e){return e[1].toUpperCase()}function bt(e,t,n,r){var o=vt.hasOwnProperty(t)?vt[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!dt.call(mt,e)||!dt.call(pt,e)&&(ft.test(e)?mt[e]=!0:(pt[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function wt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function xt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function kt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=wt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Tt(e,t){null!=(t=t.checked)&&bt(e,"checked",t,!1)}function Et(e,t){Tt(e,t);var n=wt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?_t(e,t.type,n):t.hasOwnProperty("defaultValue")&&_t(e,t.type,wt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function St(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function _t(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(yt,gt);vt[t]=new ht(t,1,!1,e,null)})),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(yt,gt);vt[t]=new ht(t,1,!1,e,"http://www.w3.org/1999/xlink")})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(yt,gt);vt[t]=new ht(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")})),vt.tabIndex=new ht("tabIndex",1,!1,"tabindex",null);var Ct={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Pt(e,t,n){return(e=se.getPooled(Ct.change,e,t,n)).type="change",Me(n),Q(e),e}var Ot=null,Nt=null;function Rt(e){U(e)}function Mt(e){if(Be(F(e)))return e}function Ut(e,t){if("change"===e)return t}var Dt=!1;function It(){Ot&&(Ot.detachEvent("onpropertychange",At),Nt=Ot=null)}function At(e){"value"===e.propertyName&&Mt(Nt)&&ze(Rt,e=Pt(Nt,e,$e(e)))}function Lt(e,t,n){"focus"===e?(It(),Nt=n,(Ot=t).attachEvent("onpropertychange",At)):"blur"===e&&It()}function zt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Mt(Nt)}function Ft(e,t){if("click"===e)return Mt(t)}function jt(e,t){if("input"===e||"change"===e)return Mt(t)}q&&(Dt=We("input")&&(!document.documentMode||9<document.documentMode));var $t={eventTypes:Ct,_isInputEventSupported:Dt,extractEvents:function(e,t,n,r){var o=t?F(t):window,i=void 0,a=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?i=Ut:je(o)?Dt?i=jt:(i=zt,a=Lt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Ft),i&&(i=i(e,t)))return Pt(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&_t(o,"number",o.value)}},Wt=se.extend({view:null,detail:null}),Vt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ht(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Vt[e])&&!!t[e]}function Bt(){return Ht}var Qt=0,qt=0,Kt=!1,Yt=!1,Xt=Wt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Bt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Qt;return Qt=e.screenX,Kt?"mousemove"===e.type?e.screenX-t:0:(Kt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=qt;return qt=e.screenY,Yt?"mousemove"===e.type?e.screenY-t:0:(Yt=!0,0)}}),Gt=Xt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Jt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Zt={eventTypes:Jt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?L(t):null):i=null,i===t)return null;var a=void 0,l=void 0,u=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(a=Xt,l=Jt.mouseLeave,u=Jt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Gt,l=Jt.pointerLeave,u=Jt.pointerEnter,c="pointer");var s=null==i?o:F(i);if(o=null==t?o:F(t),(e=a.getPooled(l,i,n,r)).type=c+"leave",e.target=s,e.relatedTarget=o,(n=a.getPooled(u,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=s,r=t,i&&r)e:{for(o=r,c=0,a=t=i;a;a=$(a))c++;for(a=0,u=o;u;u=$(u))a++;for(;0<c-a;)t=$(t),c--;for(;0<a-c;)o=$(o),a--;for(;c--;){if(t===o||t===o.alternate)break e;t=$(t),o=$(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(c=i.alternate)||c!==o);)t.push(i),i=$(i);for(i=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)i.push(r),r=$(r);for(r=0;r<t.length;r++)H(t[r],"bubbled",e);for(r=i.length;0<r--;)H(i[r],"captured",n);return[e,n]}};function en(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var tn=Object.prototype.hasOwnProperty;function nn(e,t){if(en(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!tn.call(t,n[r])||!en(e[n[r]],t[n[r]]))return!1;return!0}function rn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function on(e){2!==rn(e)&&l("188")}function an(e){if(e=function(e){var t=e.alternate;if(!t)return 3===(t=rn(e))&&l("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var a=o.child;a;){if(a===n)return on(o),e;if(a===r)return on(o),t;a=a.sibling}l("188")}if(n.return!==r.return)n=o,r=i;else{a=!1;for(var u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}a||l("189")}}n.alternate!==r&&l("190")}return 3!==n.tag&&l("188"),n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var ln=se.extend({animationName:null,elapsedTime:null,pseudoElement:null}),un=se.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),cn=Wt.extend({relatedTarget:null});function sn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var fn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},dn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},pn=Wt.extend({key:function(e){if(e.key){var t=fn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=sn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?dn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Bt,charCode:function(e){return"keypress"===e.type?sn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?sn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),mn=Xt.extend({dataTransfer:null}),hn=Wt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Bt}),vn=se.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yn=Xt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),gn=[["abort","abort"],[Z,"animationEnd"],[ee,"animationIteration"],[te,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ne,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],bn={},wn={};function xn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},bn[e]=t,wn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach((function(e){xn(e,!0)})),gn.forEach((function(e){xn(e,!1)}));var kn={eventTypes:bn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=wn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=wn[e];if(!o)return null;switch(e){case"keypress":if(0===sn(n))return null;case"keydown":case"keyup":e=pn;break;case"blur":case"focus":e=cn;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Xt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=hn;break;case Z:case ee:case te:e=ln;break;case ne:e=vn;break;case"scroll":e=Wt;break;case"wheel":e=yn;break;case"copy":case"cut":case"paste":e=un;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Gt;break;default:e=se}return Q(t=e.getPooled(o,t,n,r)),t}},Tn=kn.isInteractiveTopLevelEventType,En=[];function Sn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=L(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=$e(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,l=0;l<b.length;l++){var u=b[l];u&&(u=u.extractEvents(r,t,i,o))&&(a=C(a,u))}U(a)}}var _n=!0;function Cn(e,t){if(!t)return null;var n=(Tn(e)?On:Nn).bind(null,e);t.addEventListener(e,n,!1)}function Pn(e,t){if(!t)return null;var n=(Tn(e)?On:Nn).bind(null,e);t.addEventListener(e,n,!0)}function On(e,t){Ie(Nn,e,t)}function Nn(e,t){if(_n){var n=$e(t);if(null===(n=L(n))||"number"!=typeof n.tag||2===rn(n)||(n=null),En.length){var r=En.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{ze(Sn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>En.length&&En.push(e)}}}var Rn={},Mn=0,Un="_reactListenersID"+(""+Math.random()).slice(2);function Dn(e){return Object.prototype.hasOwnProperty.call(e,Un)||(e[Un]=Mn++,Rn[e[Un]]={}),Rn[e[Un]]}function In(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function An(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Ln(e,t){var n,r=An(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=An(r)}}function zn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?zn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function Fn(){for(var e=window,t=In();t instanceof e.HTMLIFrameElement;){try{e=t.contentDocument.defaultView}catch(e){break}t=In(e.document)}return t}function jn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var $n=q&&"documentMode"in document&&11>=document.documentMode,Wn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Vn=null,Hn=null,Bn=null,Qn=!1;function qn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Qn||null==Vn||Vn!==In(n)?null:(n="selectionStart"in(n=Vn)&&jn(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Bn&&nn(Bn,n)?null:(Bn=n,(e=se.getPooled(Wn.select,Hn,e,t)).type="select",e.target=Vn,Q(e),e))}var Kn={eventTypes:Wn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=Dn(i),o=k.onSelect;for(var a=0;a<o.length;a++){var l=o[a];if(!i.hasOwnProperty(l)||!i[l]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?F(t):window,e){case"focus":(je(i)||"true"===i.contentEditable)&&(Vn=i,Hn=t,Bn=null);break;case"blur":Bn=Hn=Vn=null;break;case"mousedown":Qn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Qn=!1,qn(n,r);case"selectionchange":if($n)break;case"keydown":case"keyup":return qn(n,r)}return null}};function Yn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Xn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+wt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Gn(e,t){return null!=t.dangerouslySetInnerHTML&&l("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Jn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&l("92"),Array.isArray(t)&&(1>=t.length||l("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:wt(n)}}function Zn(e,t){var n=wt(t.value),r=wt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function er(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}R.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),T=j,E=z,S=F,R.injectEventPluginsByName({SimpleEventPlugin:kn,EnterLeaveEventPlugin:Zt,ChangeEventPlugin:$t,SelectEventPlugin:Kn,BeforeInputEventPlugin:Ce});var tr="http://www.w3.org/1999/xhtml";function nr(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function rr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?nr(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var or,ir=void 0,ar=(or=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ir=ir||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=ir.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return or(e,t)}))}:or);function lr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ur={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},cr=["Webkit","ms","Moz","O"];function sr(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ur.hasOwnProperty(e)&&ur[e]?(""+t).trim():t+"px"}function fr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=sr(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ur).forEach((function(e){cr.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ur[t]=ur[e]}))}));var dr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function pr(e,t){t&&(dr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&l("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&l("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||l("61")),null!=t.style&&"object"!=typeof t.style&&l("62",""))}function mr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function hr(e,t){var n=Dn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=k[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Pn("scroll",e);break;case"focus":case"blur":Pn("focus",e),Pn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":We(o)&&Pn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===re.indexOf(o)&&Cn(o,e)}n[o]=!0}}}function vr(){}var yr=null,gr=null;function br(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function wr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var xr="function"==typeof setTimeout?setTimeout:void 0,kr="function"==typeof clearTimeout?clearTimeout:void 0,Tr=i.unstable_scheduleCallback,Er=i.unstable_cancelCallback;function Sr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function _r(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var Cr=[],Pr=-1;function Or(e){0>Pr||(e.current=Cr[Pr],Cr[Pr]=null,Pr--)}function Nr(e,t){Pr++,Cr[Pr]=e.current,e.current=t}var Rr={},Mr={current:Rr},Ur={current:!1},Dr=Rr;function Ir(e,t){var n=e.type.contextTypes;if(!n)return Rr;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Ar(e){return null!=e.childContextTypes}function Lr(e){Or(Ur),Or(Mr)}function zr(e){Or(Ur),Or(Mr)}function Fr(e,t,n){Mr.current!==Rr&&l("168"),Nr(Mr,t),Nr(Ur,n)}function jr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||l("108",ct(t)||"Unknown",i);return o({},n,r)}function $r(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Rr,Dr=Mr.current,Nr(Mr,t),Nr(Ur,Ur.current),!0}function Wr(e,t,n){var r=e.stateNode;r||l("169"),n?(t=jr(e,t,Dr),r.__reactInternalMemoizedMergedChildContext=t,Or(Ur),Or(Mr),Nr(Mr,t)):Or(Ur),Nr(Ur,n)}var Vr=null,Hr=null;function Br(e){return function(t){try{return e(t)}catch(e){}}}function Qr(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function qr(e,t,n,r){return new Qr(e,t,n,r)}function Kr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Yr(e,t){var n=e.alternate;return null===n?((n=qr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Xr(e,t,n,r,o,i){var a=2;if(r=e,"function"==typeof e)Kr(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case Ge:return Gr(n.children,o,i,t);case nt:return Jr(n,3|o,i,t);case Je:return Jr(n,2|o,i,t);case Ze:return(e=qr(12,n,t,4|o)).elementType=Ze,e.type=Ze,e.expirationTime=i,e;case ot:return(e=qr(13,n,t,o)).elementType=ot,e.type=ot,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case et:a=10;break e;case tt:a=9;break e;case rt:a=11;break e;case it:a=14;break e;case at:a=16,r=null;break e}l("130",null==e?e:typeof e,"")}return(t=qr(a,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Gr(e,t,n,r){return(e=qr(7,e,r,t)).expirationTime=n,e}function Jr(e,t,n,r){return e=qr(8,e,r,t),t=0==(1&t)?Je:nt,e.elementType=t,e.type=t,e.expirationTime=n,e}function Zr(e,t,n){return(e=qr(6,e,null,t)).expirationTime=n,e}function eo(e,t,n){return(t=qr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function to(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),oo(t,e)}function no(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),oo(t,e)}function ro(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function oo(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function io(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ao=(new r.Component).refs;function lo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var uo={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===rn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=pl(),o=Hi(r=La(r,e));o.payload=t,null!=n&&(o.callback=n),Ma(),Qi(e,o),$a(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=pl(),o=Hi(r=La(r,e));o.tag=Fi,o.payload=t,null!=n&&(o.callback=n),Ma(),Qi(e,o),$a(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=pl(),r=Hi(n=La(n,e));r.tag=ji,null!=t&&(r.callback=t),Ma(),Qi(e,r),$a(e,n)}};function co(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!(t.prototype&&t.prototype.isPureReactComponent&&nn(n,r)&&nn(o,i))}function so(e,t,n){var r=!1,o=Rr,i=t.contextType;return"object"==typeof i&&null!==i?i=Ii(i):(o=Ar(t)?Dr:Mr.current,i=(r=null!=(r=t.contextTypes))?Ir(e,o):Rr),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=uo,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function fo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&uo.enqueueReplaceState(t,t.state,null)}function po(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=ao;var i=t.contextType;"object"==typeof i&&null!==i?o.context=Ii(i):(i=Ar(t)?Dr:Mr.current,o.context=Ir(e,i)),null!==(i=e.updateQueue)&&(Xi(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(lo(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&uo.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(Xi(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var mo=Array.isArray;function ho(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&l("309"),r=n.stateNode),r||l("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;t===ao&&(t=r.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}"string"!=typeof e&&l("284"),n._owner||l("290",e)}return e}function vo(e,t){"textarea"!==e.type&&l("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function yo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Yr(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Zr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=ho(e,t,n),r.return=e,r):((r=Xr(n.type,n.key,n.props,null,e.mode,r)).ref=ho(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=eo(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Gr(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Zr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Ye:return(n=Xr(t.type,t.key,t.props,null,e.mode,n)).ref=ho(e,null,t),n.return=e,n;case Xe:return(t=eo(t,e.mode,n)).return=e,t}if(mo(t)||ut(t))return(t=Gr(t,e.mode,n,null)).return=e,t;vo(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Ye:return n.key===o?n.type===Ge?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case Xe:return n.key===o?s(e,t,n,r):null}if(mo(n)||ut(n))return null!==o?null:f(e,t,n,r,null);vo(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Ye:return e=e.get(null===r.key?n:r.key)||null,r.type===Ge?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case Xe:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(mo(r)||ut(r))return f(t,e=e.get(n)||null,r,o,null);vo(t,r)}return null}function h(o,a,l,u){for(var c=null,s=null,f=a,h=a=0,v=null;null!==f&&h<l.length;h++){f.index>h?(v=f,f=null):v=f.sibling;var y=p(o,f,l[h],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),a=i(y,a,h),null===s?c=y:s.sibling=y,s=y,f=v}if(h===l.length)return n(o,f),c;if(null===f){for(;h<l.length;h++)(f=d(o,l[h],u))&&(a=i(f,a,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);h<l.length;h++)(v=m(f,o,h,l[h],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?h:v.key),a=i(v,a,h),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(o,e)})),c}function v(o,a,u,c){var s=ut(u);"function"!=typeof s&&l("150"),null==(u=s.call(u))&&l("151");for(var f=s=null,h=a,v=a=0,y=null,g=u.next();null!==h&&!g.done;v++,g=u.next()){h.index>v?(y=h,h=null):y=h.sibling;var b=p(o,h,g.value,c);if(null===b){h||(h=y);break}e&&h&&null===b.alternate&&t(o,h),a=i(b,a,v),null===f?s=b:f.sibling=b,f=b,h=y}if(g.done)return n(o,h),s;if(null===h){for(;!g.done;v++,g=u.next())null!==(g=d(o,g.value,c))&&(a=i(g,a,v),null===f?s=g:f.sibling=g,f=g);return s}for(h=r(o,h);!g.done;v++,g=u.next())null!==(g=m(h,o,v,g.value,c))&&(e&&null!==g.alternate&&h.delete(null===g.key?v:g.key),a=i(g,a,v),null===f?s=g:f.sibling=g,f=g);return e&&h.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===Ge&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case Ye:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?i.type===Ge:c.elementType===i.type){n(e,c.sibling),(r=o(c,i.type===Ge?i.props.children:i.props)).ref=ho(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===Ge?((r=Gr(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Xr(i.type,i.key,i.props,null,e.mode,u)).ref=ho(e,r,i),u.return=e,e=u)}return a(e);case Xe:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=eo(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Zr(i,e.mode,u)).return=e,e=r),a(e);if(mo(i))return h(e,r,i,u);if(ut(i))return v(e,r,i,u);if(s&&vo(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:l("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var go=yo(!0),bo=yo(!1),wo={},xo={current:wo},ko={current:wo},To={current:wo};function Eo(e){return e===wo&&l("174"),e}function So(e,t){Nr(To,t),Nr(ko,e),Nr(xo,wo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:rr(null,"");break;default:t=rr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Or(xo),Nr(xo,t)}function _o(e){Or(xo),Or(ko),Or(To)}function Co(e){Eo(To.current);var t=Eo(xo.current),n=rr(t,e.type);t!==n&&(Nr(ko,e),Nr(xo,n))}function Po(e){ko.current===e&&(Or(xo),Or(ko))}var Oo=Qe.ReactCurrentDispatcher,No=0,Ro=null,Mo=null,Uo=null,Do=null,Io=null,Ao=null,Lo=0,zo=null,Fo=0,jo=!1,$o=null,Wo=0;function Vo(){l("307")}function Ho(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!en(e[n],t[n]))return!1;return!0}function Bo(e,t,n,r,o,i){if(No=i,Ro=t,Uo=null!==e?e.memoizedState:null,Oo.current=null===Uo?oi:ii,t=n(r,o),jo){do{jo=!1,Wo+=1,Uo=null!==e?e.memoizedState:null,Ao=Do,zo=Io=Mo=null,Oo.current=ii,t=n(r,o)}while(jo);$o=null,Wo=0}return Oo.current=ri,(e=Ro).memoizedState=Do,e.expirationTime=Lo,e.updateQueue=zo,e.effectTag|=Fo,e=null!==Mo&&null!==Mo.next,No=0,Ao=Io=Do=Uo=Mo=Ro=null,Lo=0,zo=null,Fo=0,e&&l("300"),t}function Qo(){Oo.current=ri,No=0,Ao=Io=Do=Uo=Mo=Ro=null,Lo=0,zo=null,Fo=0,jo=!1,$o=null,Wo=0}function qo(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===Io?Do=Io=e:Io=Io.next=e,Io}function Ko(){if(null!==Ao)Ao=(Io=Ao).next,Uo=null!==(Mo=Uo)?Mo.next:null;else{null===Uo&&l("310");var e={memoizedState:(Mo=Uo).memoizedState,baseState:Mo.baseState,queue:Mo.queue,baseUpdate:Mo.baseUpdate,next:null};Io=null===Io?Do=e:Io.next=e,Uo=Mo.next}return Io}function Yo(e,t){return"function"==typeof t?t(e):t}function Xo(e){var t=Ko(),n=t.queue;if(null===n&&l("311"),0<Wo){var r=n.dispatch;if(null!==$o){var o=$o.get(n);if(void 0!==o){$o.delete(n);var i=t.memoizedState;do{i=e(i,o.action),o=o.next}while(null!==o);return en(i,t.memoizedState)||(vi=!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),[i,r]}}return[t.memoizedState,r]}r=n.last;var a=t.baseUpdate;if(i=t.baseState,null!==a?(null!==r&&(r.next=null),r=a.next):r=null!==r?r.next:null,null!==r){var u=o=null,c=r,s=!1;do{var f=c.expirationTime;f<No?(s||(s=!0,u=a,o=i),f>Lo&&(Lo=f)):i=c.eagerReducer===e?c.eagerState:e(i,c.action),a=c,c=c.next}while(null!==c&&c!==r);s||(u=a,o=i),en(i,t.memoizedState)||(vi=!0),t.memoizedState=i,t.baseUpdate=u,t.baseState=o,n.eagerReducer=e,n.eagerState=i}return[t.memoizedState,n.dispatch]}function Go(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===zo?(zo={lastEffect:null}).lastEffect=e.next=e:null===(t=zo.lastEffect)?zo.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,zo.lastEffect=e),e}function Jo(e,t,n,r){var o=qo();Fo|=e,o.memoizedState=Go(t,n,void 0,void 0===r?null:r)}function Zo(e,t,n,r){var o=Ko();r=void 0===r?null:r;var i=void 0;if(null!==Mo){var a=Mo.memoizedState;if(i=a.destroy,null!==r&&Ho(r,a.deps))return void Go(0,n,i,r)}Fo|=e,o.memoizedState=Go(t,n,i,r)}function ei(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ti(){}function ni(e,t,n){25>Wo||l("301");var r=e.alternate;if(e===Ro||null!==r&&r===Ro)if(jo=!0,e={expirationTime:No,action:n,eagerReducer:null,eagerState:null,next:null},null===$o&&($o=new Map),void 0===(n=$o.get(t)))$o.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{Ma();var o=pl(),i={expirationTime:o=La(o,e),action:n,eagerReducer:null,eagerState:null,next:null},a=t.last;if(null===a)i.next=i;else{var u=a.next;null!==u&&(i.next=u),a.next=i}if(t.last=i,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.eagerReducer))try{var c=t.eagerState,s=r(c,n);if(i.eagerReducer=r,i.eagerState=s,en(s,c))return}catch(e){}$a(e,o)}}var ri={readContext:Ii,useCallback:Vo,useContext:Vo,useEffect:Vo,useImperativeHandle:Vo,useLayoutEffect:Vo,useMemo:Vo,useReducer:Vo,useRef:Vo,useState:Vo,useDebugValue:Vo},oi={readContext:Ii,useCallback:function(e,t){return qo().memoizedState=[e,void 0===t?null:t],e},useContext:Ii,useEffect:function(e,t){return Jo(516,192,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):[e],Jo(4,36,ei.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Jo(4,36,e,t)},useMemo:function(e,t){var n=qo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=qo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,eagerReducer:e,eagerState:t}).dispatch=ni.bind(null,Ro,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},qo().memoizedState=e},useState:function(e){var t=qo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,eagerReducer:Yo,eagerState:e}).dispatch=ni.bind(null,Ro,e),[t.memoizedState,e]},useDebugValue:ti},ii={readContext:Ii,useCallback:function(e,t){var n=Ko();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ho(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Ii,useEffect:function(e,t){return Zo(516,192,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):[e],Zo(4,36,ei.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Zo(4,36,e,t)},useMemo:function(e,t){var n=Ko();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ho(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:Xo,useRef:function(){return Ko().memoizedState},useState:function(e){return Xo(Yo)},useDebugValue:ti},ai=null,li=null,ui=!1;function ci(e,t){var n=qr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function si(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function fi(e){if(ui){var t=li;if(t){var n=t;if(!si(e,t)){if(!(t=Sr(n))||!si(e,t))return e.effectTag|=2,ui=!1,void(ai=e);ci(ai,n)}ai=e,li=_r(t)}else e.effectTag|=2,ui=!1,ai=e}}function di(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;ai=e}function pi(e){if(e!==ai)return!1;if(!ui)return di(e),ui=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!wr(t,e.memoizedProps))for(t=li;t;)ci(e,t),t=Sr(t);return di(e),li=ai?Sr(e.stateNode):null,!0}function mi(){li=ai=null,ui=!1}var hi=Qe.ReactCurrentOwner,vi=!1;function yi(e,t,n,r){t.child=null===e?bo(t,null,n,r):go(t,e.child,n,r)}function gi(e,t,n,r,o){n=n.render;var i=t.ref;return Di(t,o),r=Bo(e,t,n,r,i,o),null===e||vi?(t.effectTag|=1,yi(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ci(e,t,o))}function bi(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Kr(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Xr(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,wi(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:nn)(o,r)&&e.ref===t.ref)?Ci(e,t,i):(t.effectTag|=1,(e=Yr(a,r)).ref=t.ref,e.return=t,t.child=e)}function wi(e,t,n,r,o,i){return null!==e&&nn(e.memoizedProps,r)&&e.ref===t.ref&&(vi=!1,o<i)?Ci(e,t,i):ki(e,t,n,r,i)}function xi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function ki(e,t,n,r,o){var i=Ar(n)?Dr:Mr.current;return i=Ir(t,i),Di(t,o),n=Bo(e,t,n,r,i,o),null===e||vi?(t.effectTag|=1,yi(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ci(e,t,o))}function Ti(e,t,n,r,o){if(Ar(n)){var i=!0;$r(t)}else i=!1;if(Di(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),so(t,n,r),po(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,c=n.contextType;c="object"==typeof c&&null!==c?Ii(c):Ir(t,c=Ar(n)?Dr:Mr.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&fo(t,a,r,c),$i=!1;var d=t.memoizedState;u=a.state=d;var p=t.updateQueue;null!==p&&(Xi(t,p,r,a,o),u=t.memoizedState),l!==r||d!==u||Ur.current||$i?("function"==typeof s&&(lo(t,n,s,r),u=t.memoizedState),(l=$i||co(t,n,l,r,d,u,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=c,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,l=t.memoizedProps,a.props=t.type===t.elementType?l:io(t.type,l),u=a.context,c="object"==typeof(c=n.contextType)&&null!==c?Ii(c):Ir(t,c=Ar(n)?Dr:Mr.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&fo(t,a,r,c),$i=!1,u=t.memoizedState,d=a.state=u,null!==(p=t.updateQueue)&&(Xi(t,p,r,a,o),d=t.memoizedState),l!==r||u!==d||Ur.current||$i?("function"==typeof s&&(lo(t,n,s,r),d=t.memoizedState),(s=$i||co(t,n,l,r,u,d,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),a.props=r,a.state=d,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Ei(e,t,n,r,i,o)}function Ei(e,t,n,r,o,i){xi(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&Wr(t,n,!1),Ci(e,t,i);r=t.stateNode,hi.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=go(t,e.child,null,i),t.child=go(t,null,l,i)):yi(e,t,l,i),t.memoizedState=r.state,o&&Wr(t,n,!0),t.child}function Si(e){var t=e.stateNode;t.pendingContext?Fr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Fr(0,t.context,!1),So(e,t.containerInfo)}function _i(e,t,n){var r=t.mode,o=t.pendingProps,i=t.memoizedState;if(0==(64&t.effectTag)){i=null;var a=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},a=!0,t.effectTag&=-65;if(null===e)if(a){var l=o.fallback;e=Gr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Gr(l,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=bo(t,null,o.children,n);else null!==e.memoizedState?(l=(r=e.child).sibling,a?(n=o.fallback,o=Yr(r,r.pendingProps),0==(1&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=a),r=o.sibling=Yr(l,n,l.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=go(t,r.child,o.children,n)):(l=e.child,a?(a=o.fallback,(o=Gr(null,r,0,null)).child=l,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=Gr(a,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=go(t,l,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=i,t.child=n,r}function Ci(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&l("153"),null!==t.child){for(n=Yr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Yr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}var Pi={current:null},Oi=null,Ni=null,Ri=null;function Mi(e,t){var n=e.type._context;Nr(Pi,n._currentValue),n._currentValue=t}function Ui(e){var t=Pi.current;Or(Pi),e.type._context._currentValue=t}function Di(e,t){Oi=e,Ri=Ni=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(vi=!0),e.contextDependencies=null}function Ii(e,t){return Ri!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(Ri=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ni?(null===Oi&&l("308"),Ni=t,Oi.contextDependencies={first:t,expirationTime:0}):Ni=Ni.next=t),e._currentValue}var Ai,Li,zi,Fi=1,ji=2,$i=!1;function Wi(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Vi(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Hi(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Bi(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Qi(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=Wi(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=Wi(e.memoizedState),o=n.updateQueue=Wi(n.memoizedState)):r=e.updateQueue=Vi(o):null===o&&(o=n.updateQueue=Vi(r));null===o||r===o?Bi(r,t):null===r.lastUpdate||null===o.lastUpdate?(Bi(r,t),Bi(o,t)):(Bi(r,t),o.lastUpdate=t)}function qi(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=Wi(e.memoizedState):Ki(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function Ki(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Vi(t)),t}function Yi(e,t,n,r,i,a){switch(n.tag){case Fi:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case 3:e.effectTag=-2049&e.effectTag|64;case 0:if(null==(i="function"==typeof(e=n.payload)?e.call(a,r,i):e))break;return o({},r,i);case ji:$i=!0}return r}function Xi(e,t,n,r,o){$i=!1;for(var i=(t=Ki(e,t)).baseState,a=null,l=0,u=t.firstUpdate,c=i;null!==u;){var s=u.expirationTime;s<o?(null===a&&(a=u,i=c),l<s&&(l=s)):(c=Yi(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===s&&(s=u,null===a&&(i=c)),l<f&&(l=f)):(c=Yi(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,e.expirationTime=l,e.memoizedState=c}function Gi(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),Ji(t.firstEffect,n),t.firstEffect=t.lastEffect=null,Ji(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function Ji(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&l("191",n),n.call(r)}e=e.nextEffect}}function Zi(e,t){return{value:e,source:t,stack:st(t)}}function ea(e){e.effectTag|=4}Ai=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Li=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l=t.stateNode;switch(Eo(xo.current),e=null,n){case"input":a=xt(l,a),r=xt(l,r),e=[];break;case"option":a=Yn(l,a),r=Yn(l,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Gn(l,a),r=Gn(l,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(l.onclick=vr)}pr(n,r),l=n=void 0;var u=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var c=a[n];for(l in c)c.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(x.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(u||(u={}),u[l]=s[l])}else u||(e||(e=[]),e.push(n,u)),u=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(x.hasOwnProperty(n)?(null!=s&&hr(i,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}u&&(e=e||[]).push("style",u),i=e,(t.updateQueue=i)&&ea(t)}},zi=function(e,t,n,r){n!==r&&ea(t)};var ta="function"==typeof WeakSet?WeakSet:Set;function na(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=st(n)),null!==n&&ct(n.type),t=t.value,null!==e&&1===e.tag&&ct(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function ra(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Aa(e,t)}else t.current=null}function oa(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if(0!=(r.tag&e)){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}0!=(r.tag&t)&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function ia(e){switch("function"==typeof Hr&&Hr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var o=e;try{r()}catch(e){Aa(o,e)}}n=n.next}while(n!==t)}break;case 1:if(ra(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Aa(e,t)}break;case 5:ra(e);break;case 4:ua(e)}}function aa(e){return 5===e.tag||3===e.tag||4===e.tag}function la(e){e:{for(var t=e.return;null!==t;){if(aa(t)){var n=t;break e}t=t.return}l("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:l("161")}16&n.effectTag&&(lr(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||aa(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,a=o.stateNode,u=n;8===i.nodeType?i.parentNode.insertBefore(a,u):i.insertBefore(a,u)}else t.insertBefore(o.stateNode,n);else r?(a=t,u=o.stateNode,8===a.nodeType?(i=a.parentNode).insertBefore(u,a):(i=a).appendChild(u),null!=(a=a._reactRootContainer)||null!==i.onclick||(i.onclick=vr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function ua(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&l("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,a=i;;)if(ia(a),null!==a.child&&4!==a.tag)a.child.return=a,a=a.child;else{if(a===i)break;for(;null===a.sibling;){if(null===a.return||a.return===i)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}o?(i=r,a=t.stateNode,8===i.nodeType?i.parentNode.removeChild(a):i.removeChild(a)):r.removeChild(t.stateNode)}else if(4===t.tag?(r=t.stateNode.containerInfo,o=!0):ia(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function ca(e,t){switch(t.tag){case 0:case 11:case 14:case 15:oa(4,8,t);break;case 1:case 3:case 12:case 17:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&function(e,t,n,r,o){e[A]=o,"input"===n&&"radio"===o.type&&null!=o.name&&Tt(e,o),mr(n,r),r=mr(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],l=t[i+1];"style"===a?fr(e,l):"dangerouslySetInnerHTML"===a?ar(e,l):"children"===a?lr(e,l):bt(e,a,l,r)}switch(n){case"input":Et(e,o);break;case"textarea":Zn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Xn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Xn(e,!!o.multiple,o.defaultValue,!0):Xn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,i,o,e,r)}break;case 6:null===t.stateNode&&l("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=pl())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=sr("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var a=t.stateNode;null===a&&(a=t.stateNode=new ta),n.forEach((function(e){var n=Fa.bind(null,t,e);a.has(e)||(a.add(e),e.then(n,n))}))}break;default:l("163")}}var sa="function"==typeof WeakMap?WeakMap:Map;function fa(e,t,n){(n=Hi(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Tl(r),na(e,t)},n}function da(e,t,n){(n=Hi(n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Oa?Oa=new Set([this]):Oa.add(this));var n=t.value,o=t.stack;na(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function pa(e){switch(e.tag){case 1:Ar(e.type)&&Lr();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return _o(),zr(),0!=(64&(t=e.effectTag))&&l("285"),e.effectTag=-2049&t|64,e;case 5:return Po(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 4:return _o(),null;case 10:return Ui(e),null;default:return null}}var ma=Qe.ReactCurrentDispatcher,ha=Qe.ReactCurrentOwner,va=1073741822,ya=0,ga=!1,ba=null,wa=null,xa=0,ka=-1,Ta=!1,Ea=null,Sa=!1,_a=null,Ca=null,Pa=null,Oa=null;function Na(){if(null!==ba)for(var e=ba.return;null!==e;){var t=e;switch(t.tag){case 1:null!=t.type.childContextTypes&&Lr();break;case 3:_o(),zr();break;case 5:Po(t);break;case 4:_o();break;case 10:Ui(t)}e=e.return}wa=null,xa=0,ka=-1,Ta=!1,ba=null}function Ra(e,t){Pa=Ca=_a=null;var n=qa;qa=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var i=t;oa(128,0,i),oa(0,64,i)}catch(e){r=!0,o=e}r&&Aa(t,o)}t=t.nextEffect}while(null!==t);qa=n,0!==(n=e.expirationTime)&&ml(e,n)}function Ma(){null!==Ca&&Er(Ca),null!==Pa&&Pa()}function Ua(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){ba=e;e:{var i=t,a=xa,u=(t=e).pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:break;case 1:case 17:Ar(t.type)&&Lr();break;case 3:_o(),zr(),(u=t.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==i&&null!==i.child||(pi(t),t.effectTag&=-3);break;case 5:Po(t);var c=Eo(To.current);if(a=t.type,null!==i&&null!=t.stateNode)Li(i,t,a,u,c),i.ref!==t.ref&&(t.effectTag|=128);else if(u){var s=Eo(xo.current);if(pi(t)){i=(u=t).stateNode;var f=u.type,d=u.memoizedProps,p=c;switch(i[I]=u,i[A]=d,a=void 0,c=f){case"iframe":case"object":Cn("load",i);break;case"video":case"audio":for(f=0;f<re.length;f++)Cn(re[f],i);break;case"source":Cn("error",i);break;case"img":case"image":case"link":Cn("error",i),Cn("load",i);break;case"form":Cn("reset",i),Cn("submit",i);break;case"details":Cn("toggle",i);break;case"input":kt(i,d),Cn("invalid",i),hr(p,"onChange");break;case"select":i._wrapperState={wasMultiple:!!d.multiple},Cn("invalid",i),hr(p,"onChange");break;case"textarea":Jn(i,d),Cn("invalid",i),hr(p,"onChange")}for(a in pr(c,d),f=null,d)d.hasOwnProperty(a)&&(s=d[a],"children"===a?"string"==typeof s?i.textContent!==s&&(f=["children",s]):"number"==typeof s&&i.textContent!==""+s&&(f=["children",""+s]):x.hasOwnProperty(a)&&null!=s&&hr(p,a));switch(c){case"input":He(i),St(i,d,!0);break;case"textarea":He(i),er(i);break;case"select":case"option":break;default:"function"==typeof d.onClick&&(i.onclick=vr)}a=f,u.updateQueue=a,(u=null!==a)&&ea(t)}else{d=t,i=a,p=u,f=9===c.nodeType?c:c.ownerDocument,s===tr&&(s=nr(i)),s===tr?"script"===i?((i=f.createElement("div")).innerHTML="<script><\/script>",f=i.removeChild(i.firstChild)):"string"==typeof p.is?f=f.createElement(i,{is:p.is}):(f=f.createElement(i),"select"===i&&p.multiple&&(f.multiple=!0)):f=f.createElementNS(s,i),(i=f)[I]=d,i[A]=u,Ai(i,t),p=i;var m=c,h=mr(f=a,d=u);switch(f){case"iframe":case"object":Cn("load",p),c=d;break;case"video":case"audio":for(c=0;c<re.length;c++)Cn(re[c],p);c=d;break;case"source":Cn("error",p),c=d;break;case"img":case"image":case"link":Cn("error",p),Cn("load",p),c=d;break;case"form":Cn("reset",p),Cn("submit",p),c=d;break;case"details":Cn("toggle",p),c=d;break;case"input":kt(p,d),c=xt(p,d),Cn("invalid",p),hr(m,"onChange");break;case"option":c=Yn(p,d);break;case"select":p._wrapperState={wasMultiple:!!d.multiple},c=o({},d,{value:void 0}),Cn("invalid",p),hr(m,"onChange");break;case"textarea":Jn(p,d),c=Gn(p,d),Cn("invalid",p),hr(m,"onChange");break;default:c=d}pr(f,c),s=void 0;var v=f,y=p,g=c;for(s in g)if(g.hasOwnProperty(s)){var b=g[s];"style"===s?fr(y,b):"dangerouslySetInnerHTML"===s?null!=(b=b?b.__html:void 0)&&ar(y,b):"children"===s?"string"==typeof b?("textarea"!==v||""!==b)&&lr(y,b):"number"==typeof b&&lr(y,""+b):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(x.hasOwnProperty(s)?null!=b&&hr(m,s):null!=b&&bt(y,s,b,h))}switch(f){case"input":He(p),St(p,d,!1);break;case"textarea":He(p),er(p);break;case"option":null!=d.value&&p.setAttribute("value",""+wt(d.value));break;case"select":(c=p).multiple=!!d.multiple,null!=(p=d.value)?Xn(c,!!d.multiple,p,!1):null!=d.defaultValue&&Xn(c,!!d.multiple,d.defaultValue,!0);break;default:"function"==typeof c.onClick&&(p.onclick=vr)}(u=br(a,u))&&ea(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&l("166");break;case 6:i&&null!=t.stateNode?zi(0,t,i.memoizedProps,u):("string"!=typeof u&&null===t.stateNode&&l("166"),i=Eo(To.current),Eo(xo.current),pi(t)?(a=(u=t).stateNode,i=u.memoizedProps,a[I]=u,(u=a.nodeValue!==i)&&ea(t)):(a=t,(u=(9===i.nodeType?i:i.ownerDocument).createTextNode(u))[I]=t,a.stateNode=u));break;case 13:if(u=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=a,ba=t;break e}u=null!==u,a=null!==i&&null!==i.memoizedState,null!==i&&!u&&a&&null!==(i=i.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=i,i.nextEffect=c):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8),(u||a)&&(t.effectTag|=4);break;case 4:_o();break;case 10:Ui(t);break;default:l("156")}ba=null}if(t=e,1===xa||1!==t.childExpirationTime){for(u=0,a=t.child;null!==a;)(i=a.expirationTime)>u&&(u=i),(c=a.childExpirationTime)>u&&(u=c),a=a.sibling;t.childExpirationTime=u}if(null!==ba)return ba;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=pa(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function Da(e){var t=function(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||Ur.current)vi=!0;else if(r<n){switch(vi=!1,t.tag){case 3:Si(t),mi();break;case 5:Co(t);break;case 1:Ar(t.type)&&$r(t);break;case 4:So(t,t.stateNode.containerInfo);break;case 10:Mi(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?_i(e,t,n):null!==(t=Ci(e,t,n))?t.sibling:null}return Ci(e,t,n)}}else vi=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Ir(t,Mr.current);if(Di(t,n),o=Bo(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Qo(),Ar(r)){var i=!0;$r(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var a=r.getDerivedStateFromProps;"function"==typeof a&&lo(t,r,a,e),o.updater=uo,t.stateNode=o,o._reactInternalFiber=t,po(t,r,e,n),t=Ei(null,t,r,!0,i,n)}else t.tag=0,yi(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)})),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return Kr(e)?1:0;if(null!=e){if((e=e.$$typeof)===rt)return 11;if(e===it)return 14}return 2}(e),i=io(e,i),a=void 0,o){case 0:a=ki(null,t,e,i,n);break;case 1:a=Ti(null,t,e,i,n);break;case 11:a=gi(null,t,e,i,n);break;case 14:a=bi(null,t,e,io(e.type,i),r,n);break;default:l("306",e,"")}return a;case 0:return r=t.type,o=t.pendingProps,ki(e,t,r,o=t.elementType===r?o:io(r,o),n);case 1:return r=t.type,o=t.pendingProps,Ti(e,t,r,o=t.elementType===r?o:io(r,o),n);case 3:return Si(t),null===(r=t.updateQueue)&&l("282"),o=null!==(o=t.memoizedState)?o.element:null,Xi(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(mi(),t=Ci(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(li=_r(t.stateNode.containerInfo),ai=t,o=ui=!0),o?(t.effectTag|=2,t.child=bo(t,null,r,n)):(yi(e,t,r,n),mi()),t=t.child),t;case 5:return Co(t),null===e&&fi(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,a=o.children,wr(r,o)?a=null:null!==i&&wr(r,i)&&(t.effectTag|=16),xi(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(yi(e,t,a,n),t=t.child),t;case 6:return null===e&&fi(t),null;case 13:return _i(e,t,n);case 4:return So(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=go(t,null,r,n):yi(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,gi(e,t,r,o=t.elementType===r?o:io(r,o),n);case 7:return yi(e,t,t.pendingProps,n),t.child;case 8:case 12:return yi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,a=t.memoizedProps,Mi(t,i=o.value),null!==a){var u=a.value;if(0==(i=en(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(a.children===o.children&&!Ur.current){t=Ci(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.contextDependencies;if(null!==c){a=u.child;for(var s=c.first;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=Hi(n)).tag=ji,Qi(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n);for(var f=u.return;null!==f;){if(s=f.alternate,f.childExpirationTime<n)f.childExpirationTime=n,null!==s&&s.childExpirationTime<n&&(s.childExpirationTime=n);else{if(!(null!==s&&s.childExpirationTime<n))break;s.childExpirationTime=n}f=f.return}c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else a=10===u.tag&&u.type===t.type?null:u.child;if(null!==a)a.return=u;else for(a=u;null!==a;){if(a===t){a=null;break}if(null!==(u=a.sibling)){u.return=a.return,a=u;break}a=a.return}u=a}}yi(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,Di(t,n),r=r(o=Ii(o,i.unstable_observedBits)),t.effectTag|=1,yi(e,t,r,n),t.child;case 14:return i=io(o=t.type,t.pendingProps),bi(e,t,o,i=io(o.type,i),r,n);case 15:return wi(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:io(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Ar(r)?(e=!0,$r(t)):e=!1,Di(t,n),so(t,r,o),po(t,r,o,n),Ei(null,t,r,!0,e,n);default:l("156")}}(e.alternate,e,xa);return e.memoizedProps=e.pendingProps,null===t&&(t=Ua(e)),ha.current=null,t}function Ia(e,t){ga&&l("243"),Ma(),ga=!0;var n=ma.current;ma.current=ri;var r=e.nextExpirationTimeToWorkOn;r===xa&&e===wa&&null!==ba||(Na(),xa=r,ba=Yr((wa=e).current,null),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==ba&&!yl();)ba=Da(ba);else for(;null!==ba;)ba=Da(ba)}catch(t){if(Ri=Ni=Oi=null,Qo(),null===ba)o=!0,Tl(t);else{null===ba&&l("271");var i=ba,a=i.return;if(null!==a){e:{var u=e,c=a,s=i,f=t;if(a=xa,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==f&&"object"==typeof f&&"function"==typeof f.then){var d=f;f=c;var p=-1,m=-1;do{if(13===f.tag){var h=f.alternate;if(null!==h&&null!==(h=h.memoizedState)){m=10*(1073741822-h.timedOutAt);break}"number"==typeof(h=f.pendingProps.maxDuration)&&(0>=h?p=0:(-1===p||h<p)&&(p=h))}f=f.return}while(null!==f);f=c;do{if((h=13===f.tag)&&(h=void 0!==f.memoizedProps.fallback&&null===f.memoizedState),h){if(null===(c=f.updateQueue)?((c=new Set).add(d),f.updateQueue=c):c.add(d),0==(1&f.mode)){f.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((a=Hi(1073741823)).tag=ji,Qi(s,a))),s.expirationTime=1073741823;break e}null===(s=u.pingCache)?(s=u.pingCache=new sa,c=new Set,s.set(d,c)):void 0===(c=s.get(d))&&(c=new Set,s.set(d,c)),c.has(a)||(c.add(a),s=za.bind(null,u,d,a),d.then(s,s)),-1===p?u=1073741823:(-1===m&&(m=10*(1073741822-ro(u,a))-5e3),u=m+p),0<=u&&ka<u&&(ka=u),f.effectTag|=2048,f.expirationTime=a;break e}f=f.return}while(null!==f);f=Error((ct(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+st(s))}Ta=!0,f=Zi(f,s),u=c;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=a,qi(u,a=fa(u,f,a));break e;case 1:if(d=f,p=u.type,m=u.stateNode,0==(64&u.effectTag)&&("function"==typeof p.getDerivedStateFromError||null!==m&&"function"==typeof m.componentDidCatch&&(null===Oa||!Oa.has(m)))){u.effectTag|=2048,u.expirationTime=a,qi(u,a=da(u,d,a));break e}}u=u.return}while(null!==u)}ba=Ua(i);continue}o=!0,Tl(t)}}break}if(ga=!1,ma.current=n,Ri=Ni=Oi=null,Qo(),o)wa=null,e.finishedWork=null;else if(null!==ba)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&l("281"),wa=null,Ta){if(o=e.latestPendingTime,i=e.latestSuspendedTime,a=e.latestPingedTime,0!==o&&o<r||0!==i&&i<r||0!==a&&a<r)return no(e,r),void fl(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void fl(e,n,r,t,-1)}t&&-1!==ka?(no(e,r),(t=10*(1073741822-ro(e,r)))<ka&&(ka=t),t=10*(1073741822-pl()),t=ka-t,fl(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function Aa(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Oa||!Oa.has(r)))return Qi(n,e=da(n,e=Zi(t,e),1073741823)),void $a(n,1073741823);break;case 3:return Qi(n,e=fa(n,e=Zi(t,e),1073741823)),void $a(n,1073741823)}n=n.return}3===e.tag&&(Qi(e,n=fa(e,n=Zi(t,e),1073741823)),$a(e,1073741823))}function La(e,t){return 0!==ya?e=ya:ga?e=Sa?1073741823:xa:1&t.mode?(e=tl?1073741822-10*(1+((1073741822-e+15)/10|0)):1073741822-25*(1+((1073741822-e+500)/25|0)),null!==wa&&e===xa&&--e):e=1073741823,tl&&(0===Xa||e<Xa)&&(Xa=e),e}function za(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==wa&&xa===n?wa=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),oo(n,e),0!==(n=e.expirationTime)&&ml(e,n)))}function Fa(e,t){var n=e.stateNode;null!==n&&n.delete(t),null!==(e=ja(e,t=La(t=pl(),e)))&&(to(e,t),0!==(t=e.expirationTime)&&ml(e,t))}function ja(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function $a(e,t){null!==(e=ja(e,t))&&(!ga&&0!==xa&&t>xa&&Na(),to(e,t),ga&&!Sa&&wa===e||ml(e,e.expirationTime),ll>al&&(ll=0,l("185")))}function Wa(e,t,n,r,o){var i=ya;ya=1073741823;try{return e(t,n,r,o)}finally{ya=i}}var Va=null,Ha=null,Ba=0,Qa=void 0,qa=!1,Ka=null,Ya=0,Xa=0,Ga=!1,Ja=null,Za=!1,el=!1,tl=!1,nl=null,rl=i.unstable_now(),ol=1073741822-(rl/10|0),il=ol,al=50,ll=0,ul=null;function cl(){ol=1073741822-((i.unstable_now()-rl)/10|0)}function sl(e,t){if(0!==Ba){if(t<Ba)return;null!==Qa&&i.unstable_cancelCallback(Qa)}Ba=t,e=i.unstable_now()-rl,Qa=i.unstable_scheduleCallback(gl,{timeout:10*(1073741822-t)-e})}function fl(e,t,n,r,o){e.expirationTime=r,0!==o||yl()?0<o&&(e.timeoutHandle=xr(dl.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function dl(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,cl(),il=ol,wl(e,n)}function pl(){return qa||(hl(),0!==Ya&&1!==Ya||(cl(),il=ol)),il}function ml(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===Ha?(Va=Ha=e,e.nextScheduledRoot=e):(Ha=Ha.nextScheduledRoot=e).nextScheduledRoot=Va):t>e.expirationTime&&(e.expirationTime=t),qa||(Za?el&&(Ka=e,Ya=1073741823,xl(e,1073741823,!1)):1073741823===t?bl(1073741823,!1):sl(e,t))}function hl(){var e=0,t=null;if(null!==Ha)for(var n=Ha,r=Va;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===Ha)&&l("244"),r===r.nextScheduledRoot){Va=Ha=r.nextScheduledRoot=null;break}if(r===Va)Va=o=r.nextScheduledRoot,Ha.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===Ha){(Ha=n).nextScheduledRoot=Va,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===Ha)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}Ka=t,Ya=e}var vl=!1;function yl(){return!!vl||!!i.unstable_shouldYield()&&(vl=!0)}function gl(){try{if(!yl()&&null!==Va){cl();var e=Va;do{var t=e.expirationTime;0!==t&&ol<=t&&(e.nextExpirationTimeToWorkOn=ol),e=e.nextScheduledRoot}while(e!==Va)}bl(0,!0)}finally{vl=!1}}function bl(e,t){if(hl(),t)for(cl(),il=ol;null!==Ka&&0!==Ya&&e<=Ya&&!(vl&&ol>Ya);)xl(Ka,Ya,ol>Ya),hl(),cl(),il=ol;else for(;null!==Ka&&0!==Ya&&e<=Ya;)xl(Ka,Ya,!1),hl();if(t&&(Ba=0,Qa=null),0!==Ya&&sl(Ka,Ya),ll=0,ul=null,null!==nl)for(e=nl,nl=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){Ga||(Ga=!0,Ja=e)}}if(Ga)throw e=Ja,Ja=null,Ga=!1,e}function wl(e,t){qa&&l("253"),Ka=e,Ya=t,xl(e,t,!1),bl(1073741823,!1)}function xl(e,t,n){if(qa&&l("245"),qa=!0,n){var r=e.finishedWork;null!==r?kl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,kr(r)),Ia(e,n),null!==(r=e.finishedWork)&&(yl()?e.finishedWork=r:kl(e,r,t)))}else null!==(r=e.finishedWork)?kl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,kr(r)),Ia(e,n),null!==(r=e.finishedWork)&&kl(e,r,t));qa=!1}function kl(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===nl?nl=[r]:nl.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===ul?ll++:(ul=e,ll=0),Sa=ga=!0,e.current===t&&l("177"),0===(n=e.pendingCommitExpirationTime)&&l("261"),e.pendingCommitExpirationTime=0,r=t.expirationTime;var o=t.childExpirationTime;if(r=o>r?o:r,e.didError=!1,0===r?(e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0):(r<e.latestPingedTime&&(e.latestPingedTime=0),0!==(o=e.latestPendingTime)&&(o>r?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>r&&(e.earliestPendingTime=e.latestPendingTime)),0===(o=e.earliestSuspendedTime)?to(e,r):r<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,to(e,r)):r>o&&to(e,r)),oo(0,e),ha.current=null,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,yr=_n,jn(o=Fn())){if("selectionStart"in o)var i={start:o.selectionStart,end:o.selectionEnd};else e:{var a=(i=(i=o.ownerDocument)&&i.defaultView||window).getSelection&&i.getSelection();if(a&&0!==a.rangeCount){i=a.anchorNode;var u=a.anchorOffset,c=a.focusNode;a=a.focusOffset;try{i.nodeType,c.nodeType}catch(e){i=null;break e}var s=0,f=-1,d=-1,p=0,m=0,h=o,v=null;t:for(;;){for(var y;h!==i||0!==u&&3!==h.nodeType||(f=s+u),h!==c||0!==a&&3!==h.nodeType||(d=s+a),3===h.nodeType&&(s+=h.nodeValue.length),null!==(y=h.firstChild);)v=h,h=y;for(;;){if(h===o)break t;if(v===i&&++p===u&&(f=s),v===c&&++m===a&&(d=s),null!==(y=h.nextSibling))break;v=(h=v).parentNode}h=y}i=-1===f||-1===d?null:{start:f,end:d}}else i=null}i=i||{start:0,end:0}}else i=null;for(gr={focusedElem:o,selectionRange:i},_n=!1,Ea=r;null!==Ea;){o=!1,i=void 0;try{for(;null!==Ea;){if(256&Ea.effectTag)e:{var g=Ea.alternate;switch((u=Ea).tag){case 0:case 11:case 15:oa(2,0,u);break e;case 1:if(256&u.effectTag&&null!==g){var b=g.memoizedProps,w=g.memoizedState,x=u.stateNode,k=x.getSnapshotBeforeUpdate(u.elementType===u.type?b:io(u.type,b),w);x.__reactInternalSnapshotBeforeUpdate=k}break e;case 3:case 5:case 6:case 4:case 17:break e;default:l("163")}}Ea=Ea.nextEffect}}catch(e){o=!0,i=e}o&&(null===Ea&&l("178"),Aa(Ea,i),null!==Ea&&(Ea=Ea.nextEffect))}for(Ea=r;null!==Ea;){g=!1,b=void 0;try{for(;null!==Ea;){var T=Ea.effectTag;if(16&T&&lr(Ea.stateNode,""),128&T){var E=Ea.alternate;if(null!==E){var S=E.ref;null!==S&&("function"==typeof S?S(null):S.current=null)}}switch(14&T){case 2:la(Ea),Ea.effectTag&=-3;break;case 6:la(Ea),Ea.effectTag&=-3,ca(Ea.alternate,Ea);break;case 4:ca(Ea.alternate,Ea);break;case 8:ua(w=Ea),w.return=null,w.child=null,w.memoizedState=null,w.updateQueue=null;var _=w.alternate;null!==_&&(_.return=null,_.child=null,_.memoizedState=null,_.updateQueue=null)}Ea=Ea.nextEffect}}catch(e){g=!0,b=e}g&&(null===Ea&&l("178"),Aa(Ea,b),null!==Ea&&(Ea=Ea.nextEffect))}if(S=gr,E=Fn(),T=S.focusedElem,g=S.selectionRange,E!==T&&T&&T.ownerDocument&&zn(T.ownerDocument.documentElement,T)){null!==g&&jn(T)&&(E=g.start,void 0===(S=g.end)&&(S=E),"selectionStart"in T?(T.selectionStart=E,T.selectionEnd=Math.min(S,T.value.length)):(S=(E=T.ownerDocument||document)&&E.defaultView||window).getSelection&&(S=S.getSelection(),b=T.textContent.length,_=Math.min(g.start,b),g=void 0===g.end?_:Math.min(g.end,b),!S.extend&&_>g&&(b=g,g=_,_=b),b=Ln(T,_),w=Ln(T,g),b&&w&&(1!==S.rangeCount||S.anchorNode!==b.node||S.anchorOffset!==b.offset||S.focusNode!==w.node||S.focusOffset!==w.offset)&&((E=E.createRange()).setStart(b.node,b.offset),S.removeAllRanges(),_>g?(S.addRange(E),S.extend(w.node,w.offset)):(E.setEnd(w.node,w.offset),S.addRange(E))))),E=[];for(S=T;S=S.parentNode;)1===S.nodeType&&E.push({element:S,left:S.scrollLeft,top:S.scrollTop});for("function"==typeof T.focus&&T.focus(),T=0;T<E.length;T++)(S=E[T]).element.scrollLeft=S.left,S.element.scrollTop=S.top}for(gr=null,_n=!!yr,yr=null,e.current=t,Ea=r;null!==Ea;){T=!1,E=void 0;try{for(S=e,_=n;null!==Ea;){var C=Ea.effectTag;if(36&C){var P=Ea.alternate;switch(b=_,(g=Ea).tag){case 0:case 11:case 15:oa(16,32,g);break;case 1:var O=g.stateNode;if(4&g.effectTag)if(null===P)O.componentDidMount();else{var N=g.elementType===g.type?P.memoizedProps:io(g.type,P.memoizedProps);O.componentDidUpdate(N,P.memoizedState,O.__reactInternalSnapshotBeforeUpdate)}var R=g.updateQueue;null!==R&&Gi(0,R,O);break;case 3:var M=g.updateQueue;if(null!==M){if(w=null,null!==g.child)switch(g.child.tag){case 5:case 1:w=g.child.stateNode}Gi(0,M,w)}break;case 5:var U=g.stateNode;null===P&&4&g.effectTag&&br(g.type,g.memoizedProps)&&U.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:l("163")}}if(128&C){var D=Ea.ref;if(null!==D){var I=Ea.stateNode;if(5===Ea.tag)var A=I;else A=I;"function"==typeof D?D(A):D.current=A}}512&C&&(_a=S),Ea=Ea.nextEffect}}catch(e){T=!0,E=e}T&&(null===Ea&&l("178"),Aa(Ea,E),null!==Ea&&(Ea=Ea.nextEffect))}null!==r&&null!==_a&&(C=Ra.bind(null,e,r),Ca=Tr(C),Pa=C),ga=Sa=!1,"function"==typeof Vr&&Vr(t.stateNode),C=t.expirationTime,0===(t=(t=t.childExpirationTime)>C?t:C)&&(Oa=null),e.expirationTime=t,e.finishedWork=null}function Tl(e){null===Ka&&l("246"),Ka.expirationTime=0,Ga||(Ga=!0,Ja=e)}function El(e,t){var n=Za;Za=!0;try{return e(t)}finally{(Za=n)||qa||bl(1073741823,!1)}}function Sl(e,t){if(Za&&!el){el=!0;try{return e(t)}finally{el=!1}}return e(t)}function _l(e,t,n){if(tl)return e(t,n);Za||qa||0===Xa||(bl(Xa,!1),Xa=0);var r=tl,o=Za;Za=tl=!0;try{return e(t,n)}finally{tl=r,(Za=o)||qa||bl(1073741823,!1)}}function Cl(e,t,n,r,o){var i=t.current;e:if(n){t:{2===rn(n=n._reactInternalFiber)&&1===n.tag||l("170");var a=n;do{switch(a.tag){case 3:a=a.stateNode.context;break t;case 1:if(Ar(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break t}}a=a.return}while(null!==a);l("171"),a=void 0}if(1===n.tag){var u=n.type;if(Ar(u)){n=jr(n,u,a);break e}}n=a}else n=Rr;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Hi(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Ma(),Qi(i,o),$a(i,r),r}function Pl(e,t,n,r){var o=t.current;return Cl(e,t,n,o=La(pl(),o),r)}function Ol(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Nl(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Xe,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Rl(e){var t=1073741822-25*(1+((1073741822-pl()+500)/25|0));t>=va&&(t=va-1),this._expirationTime=va=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Ml(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Ul(e,t,n){e={current:t=qr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Dl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Il(e,t,n,r,o){var i=n._reactRootContainer;if(i){if("function"==typeof o){var a=o;o=function(){var e=Ol(i._internalRoot);a.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ul(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=Ol(i._internalRoot);l.call(e)}}Sl((function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}))}return Ol(i._internalRoot)}function Al(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Dl(t)||l("200"),Nl(e,t,null,n)}Pe=function(e,t,n){switch(t){case"input":if(Et(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=j(r);o||l("90"),Be(r),Et(r,o)}}}break;case"textarea":Zn(e,n);break;case"select":null!=(t=n.value)&&Xn(e,!!n.multiple,t,!1)}},Rl.prototype.render=function(e){this._defer||l("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Ml;return Cl(e,t,null,n,r._onCommit),r},Rl.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Rl.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||l("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&l("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,wl(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Rl.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Ml.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Ml.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&l("191",n),n()}}},Ul.prototype.render=function(e,t){var n=this._internalRoot,r=new Ml;return null!==(t=void 0===t?null:t)&&r.then(t),Pl(e,n,null,r._onCommit),r},Ul.prototype.unmount=function(e){var t=this._internalRoot,n=new Ml;return null!==(e=void 0===e?null:e)&&n.then(e),Pl(null,t,null,n._onCommit),n},Ul.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Ml;return null!==(n=void 0===n?null:n)&&o.then(n),Pl(t,r,e,o._onCommit),o},Ul.prototype.createBatch=function(){var e=new Rl(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},De=El,Ie=_l,Ae=function(){qa||0===Xa||(bl(Xa,!1),Xa=0)};var Ll={createPortal:Al,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?l("188"):l("268",Object.keys(e))),null===(e=an(t))?null:e.stateNode},hydrate:function(e,t,n){return Dl(t)||l("200"),Il(null,e,t,!0,n)},render:function(e,t,n){return Dl(t)||l("200"),Il(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return Dl(n)||l("200"),(null==e||void 0===e._reactInternalFiber)&&l("38"),Il(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Dl(e)||l("40"),!!e._reactRootContainer&&(Sl((function(){Il(null,null,e,!1,(function(){e._reactRootContainer=null}))})),!0)},unstable_createPortal:function(){return Al.apply(void 0,arguments)},unstable_batchedUpdates:El,unstable_interactiveUpdates:_l,flushSync:function(e,t){qa&&l("187");var n=Za;Za=!0;try{return Wa(e,t)}finally{Za=n,bl(1073741823,!1)}},unstable_createRoot:function(e,t){return Dl(e)||l("299","unstable_createRoot"),new Ul(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=Za;Za=!0;try{Wa(e)}finally{(Za=t)||qa||bl(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[z,F,j,R.injectEventPluginsByName,w,Q,function(e){P(e,B)},Me,Ue,Nn,U]}};!function(e){var t=e.findFiberByHostInstance;!function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Vr=Br((function(e){return t.onCommitFiberRoot(n,e)})),Hr=Br((function(e){return t.onCommitFiberUnmount(n,e)}))}catch(e){}}(o({},e,{overrideProps:null,currentDispatcherRef:Qe.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=an(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:L,bundleType:0,version:"16.8.0",rendererPackageName:"react-dom"});var zl={default:Ll},Fl=zl&&Ll||zl;e.exports=Fl.default||Fl},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,o=n?Symbol.for("react.portal"):60106,i=n?Symbol.for("react.fragment"):60107,a=n?Symbol.for("react.strict_mode"):60108,l=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,s=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,m=n?Symbol.for("react.suspense_list"):60120,h=n?Symbol.for("react.memo"):60115,v=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,g=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function x(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case s:case f:case i:case l:case a:case p:return e;default:switch(e=e&&e.$$typeof){case c:case d:case v:case h:case u:return e;default:return t}}case o:return t}}}function k(e){return x(e)===f}t.AsyncMode=s,t.ConcurrentMode=f,t.ContextConsumer=c,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=i,t.Lazy=v,t.Memo=h,t.Portal=o,t.Profiler=l,t.StrictMode=a,t.Suspense=p,t.isAsyncMode=function(e){return k(e)||x(e)===s},t.isConcurrentMode=k,t.isContextConsumer=function(e){return x(e)===c},t.isContextProvider=function(e){return x(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return x(e)===d},t.isFragment=function(e){return x(e)===i},t.isLazy=function(e){return x(e)===v},t.isMemo=function(e){return x(e)===h},t.isPortal=function(e){return x(e)===o},t.isProfiler=function(e){return x(e)===l},t.isStrictMode=function(e){return x(e)===a},t.isSuspense=function(e){return x(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===f||e===l||e===a||e===p||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===h||e.$$typeof===u||e.$$typeof===c||e.$$typeof===d||e.$$typeof===g||e.$$typeof===b||e.$$typeof===w||e.$$typeof===y)},t.typeOf=x},864:(e,t,n)=>{"use strict";e.exports=n(921)},181:(e,t,n)=>{"use strict";function r(e,t){return r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},r(e,t)}function o(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,r(e,t)}n.r(t),n.d(t,{BrowserRouter:()=>be,HashRouter:()=>we,Link:()=>_e,MemoryRouter:()=>Y,NavLink:()=>Oe,Prompt:()=>G,Redirect:()=>te,Route:()=>ie,Router:()=>K,StaticRouter:()=>fe,Switch:()=>de,generatePath:()=>ee,matchPath:()=>oe,useHistory:()=>he,useLocation:()=>ve,useParams:()=>ye,useRouteMatch:()=>ge,withRouter:()=>pe});var i=n(294),a=n.n(i),l=n(697),u=n.n(l);function c(){return c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},c.apply(this,arguments)}function s(e){return"/"===e.charAt(0)}function f(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}function d(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}const p=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every((function(t,r){return e(t,n[r])}));if("object"==typeof t||"object"==typeof n){var r=d(t),o=d(n);return r!==t||o!==n?e(r,o):Object.keys(Object.assign({},t,n)).every((function(r){return e(t[r],n[r])}))}return!1};const m=function(e,t){if(!e)throw new Error("Invariant failed")};function h(e){return"/"===e.charAt(0)?e:"/"+e}function v(e){return"/"===e.charAt(0)?e.substr(1):e}function y(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function g(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function b(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function w(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e),o.state=t):(void 0===(o=c({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],i=e&&s(e),a=t&&s(t),l=i||a;if(e&&s(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];n="."===u||".."===u||""===u}else n=!1;for(var c=0,d=o.length;d>=0;d--){var p=o[d];"."===p?f(o,d):".."===p?(f(o,d),c++):c&&(f(o,d),c--)}if(!l)for(;c--;c)o.unshift("..");!l||""===o[0]||o[0]&&s(o[0])||o.unshift("");var m=o.join("/");return n&&"/"!==m.substr(-1)&&(m+="/"),m}(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function x(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var k=!("undefined"==typeof window||!window.document||!window.document.createElement);function T(e,t){t(window.confirm(e))}var E="popstate",S="hashchange";function _(){try{return window.history.state||{}}catch(e){return{}}}function C(e){void 0===e&&(e={}),k||m(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,a=i.forceRefresh,l=void 0!==a&&a,u=i.getUserConfirmation,s=void 0===u?T:u,f=i.keyLength,d=void 0===f?6:f,p=e.basename?g(h(e.basename)):"";function v(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return p&&(i=y(i,p)),w(i,r,n)}function C(){return Math.random().toString(36).substr(2,d)}var P=x();function O(e){c($,e),$.length=n.length,P.notifyListeners($.location,$.action)}function N(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||U(v(e.state))}function R(){U(v(_()))}var M=!1;function U(e){M?(M=!1,O()):P.confirmTransitionTo(e,"POP",s,(function(t){t?O({action:"POP",location:e}):function(e){var t=$.location,n=I.indexOf(t.key);-1===n&&(n=0);var r=I.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(M=!0,L(o))}(e)}))}var D=v(_()),I=[D.key];function A(e){return p+b(e)}function L(e){n.go(e)}var z=0;function F(e){1===(z+=e)&&1===e?(window.addEventListener(E,N),o&&window.addEventListener(S,R)):0===z&&(window.removeEventListener(E,N),o&&window.removeEventListener(S,R))}var j=!1,$={length:n.length,action:"POP",location:D,createHref:A,push:function(e,t){var o="PUSH",i=w(e,t,C(),$.location);P.confirmTransitionTo(i,o,s,(function(e){if(e){var t=A(i),a=i.key,u=i.state;if(r)if(n.pushState({key:a,state:u},null,t),l)window.location.href=t;else{var c=I.indexOf($.location.key),s=I.slice(0,c+1);s.push(i.key),I=s,O({action:o,location:i})}else window.location.href=t}}))},replace:function(e,t){var o="REPLACE",i=w(e,t,C(),$.location);P.confirmTransitionTo(i,o,s,(function(e){if(e){var t=A(i),a=i.key,u=i.state;if(r)if(n.replaceState({key:a,state:u},null,t),l)window.location.replace(t);else{var c=I.indexOf($.location.key);-1!==c&&(I[c]=i.key),O({action:o,location:i})}else window.location.replace(t)}}))},go:L,goBack:function(){L(-1)},goForward:function(){L(1)},block:function(e){void 0===e&&(e=!1);var t=P.setPrompt(e);return j||(F(1),j=!0),function(){return j&&(j=!1,F(-1)),t()}},listen:function(e){var t=P.appendListener(e);return F(1),function(){F(-1),t()}}};return $}var P="hashchange",O={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+v(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:v,decodePath:h},slash:{encodePath:h,decodePath:h}};function N(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function R(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function M(e){window.location.replace(N(window.location.href)+"#"+e)}function U(e){void 0===e&&(e={}),k||m(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,o=void 0===r?T:r,i=n.hashType,a=void 0===i?"slash":i,l=e.basename?g(h(e.basename)):"",u=O[a],s=u.encodePath,f=u.decodePath;function d(){var e=f(R());return l&&(e=y(e,l)),w(e)}var p=x();function v(e){c(j,e),j.length=t.length,p.notifyListeners(j.location,j.action)}var E=!1,S=null;function _(){var e,t,n=R(),r=s(n);if(n!==r)M(r);else{var i=d(),a=j.location;if(!E&&(t=i,(e=a).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(S===b(i))return;S=null,function(e){if(E)E=!1,v();else{p.confirmTransitionTo(e,"POP",o,(function(t){t?v({action:"POP",location:e}):function(e){var t=j.location,n=I.lastIndexOf(b(t));-1===n&&(n=0);var r=I.lastIndexOf(b(e));-1===r&&(r=0);var o=n-r;o&&(E=!0,A(o))}(e)}))}}(i)}}var C=R(),U=s(C);C!==U&&M(U);var D=d(),I=[b(D)];function A(e){t.go(e)}var L=0;function z(e){1===(L+=e)&&1===e?window.addEventListener(P,_):0===L&&window.removeEventListener(P,_)}var F=!1,j={length:t.length,action:"POP",location:D,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=N(window.location.href)),n+"#"+s(l+b(e))},push:function(e,t){var n="PUSH",r=w(e,void 0,void 0,j.location);p.confirmTransitionTo(r,n,o,(function(e){if(e){var t=b(r),o=s(l+t);if(R()!==o){S=t,function(e){window.location.hash=e}(o);var i=I.lastIndexOf(b(j.location)),a=I.slice(0,i+1);a.push(t),I=a,v({action:n,location:r})}else v()}}))},replace:function(e,t){var n="REPLACE",r=w(e,void 0,void 0,j.location);p.confirmTransitionTo(r,n,o,(function(e){if(e){var t=b(r),o=s(l+t);R()!==o&&(S=t,M(o));var i=I.indexOf(b(j.location));-1!==i&&(I[i]=t),v({action:n,location:r})}}))},go:A,goBack:function(){A(-1)},goForward:function(){A(1)},block:function(e){void 0===e&&(e=!1);var t=p.setPrompt(e);return F||(z(1),F=!0),function(){return F&&(F=!1,z(-1)),t()}},listen:function(e){var t=p.appendListener(e);return z(1),function(){z(-1),t()}}};return j}function D(e,t,n){return Math.min(Math.max(e,t),n)}function I(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,r=t.initialEntries,o=void 0===r?["/"]:r,i=t.initialIndex,a=void 0===i?0:i,l=t.keyLength,u=void 0===l?6:l,s=x();function f(e){c(y,e),y.length=y.entries.length,s.notifyListeners(y.location,y.action)}function d(){return Math.random().toString(36).substr(2,u)}var p=D(a,0,o.length-1),m=o.map((function(e){return w(e,void 0,"string"==typeof e?d():e.key||d())})),h=b;function v(e){var t=D(y.index+e,0,y.entries.length-1),r=y.entries[t];s.confirmTransitionTo(r,"POP",n,(function(e){e?f({action:"POP",location:r,index:t}):f()}))}var y={length:m.length,action:"POP",location:m[p],index:p,entries:m,createHref:h,push:function(e,t){var r="PUSH",o=w(e,t,d(),y.location);s.confirmTransitionTo(o,r,n,(function(e){if(e){var t=y.index+1,n=y.entries.slice(0);n.length>t?n.splice(t,n.length-t,o):n.push(o),f({action:r,location:o,index:t,entries:n})}}))},replace:function(e,t){var r="REPLACE",o=w(e,t,d(),y.location);s.confirmTransitionTo(o,r,n,(function(e){e&&(y.entries[y.index]=o,f({action:r,location:o}))}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},canGo:function(e){var t=y.index+e;return t>=0&&t<y.entries.length},block:function(e){return void 0===e&&(e=!1),s.setPrompt(e)},listen:function(e){return s.appendListener(e)}};return y}var A=1073741823,L="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function z(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const F=a().createContext||function(e,t){var n,r,a,l="__create-react-context-"+((L[a="__global_unique_id__"]=(L[a]||0)+1)+"__"),c=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=z(t.props.value),t}o(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[l]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((i=r)===(a=o)?0!==i||1/i==1/a:i!=i&&a!=a)?n=0:(n="function"==typeof t?t(r,o):A,0!=(n|=0)&&this.emitter.set(e.value,n))}var i,a},r.render=function(){return this.props.children},n}(i.Component);c.childContextTypes=((n={})[l]=u().object.isRequired,n);var s=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}o(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?A:t},r.componentDidMount=function(){this.context[l]&&this.context[l].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?A:e},r.componentWillUnmount=function(){this.context[l]&&this.context[l].off(this.onUpdate)},r.getValue=function(){return this.context[l]?this.context[l].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(i.Component);return s.contextTypes=((r={})[l]=u().object,r),{Provider:c,Consumer:s}};var j=n(779),$=n.n(j);function W(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}n(864);var V=n(679),H=n.n(V),B=function(e){var t=F();return t.displayName=e,t},Q=B("Router-History"),q=B("Router"),K=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}o(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&(this.unlisten(),this._isMounted=!1,this._pendingLocation=null)},n.render=function(){return a().createElement(q.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},a().createElement(Q.Provider,{children:this.props.children||null,value:this.props.history}))},t}(a().Component),Y=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=I(t.props),t}return o(t,e),t.prototype.render=function(){return a().createElement(K,{history:this.history,children:this.props.children})},t}(a().Component),X=function(e){function t(){return e.apply(this,arguments)||this}o(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},t}(a().Component);function G(e){var t=e.message,n=e.when,r=void 0===n||n;return a().createElement(q.Consumer,null,(function(e){if(e||m(!1),!r||e.staticContext)return null;var n=e.history.block;return a().createElement(X,{onMount:function(e){e.release=n(t)},onUpdate:function(e,r){r.message!==t&&(e.release(),e.release=n(t))},onUnmount:function(e){e.release()},message:t})}))}var J={},Z=0;function ee(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:function(e){if(J[e])return J[e];var t=$().compile(e);return Z<1e4&&(J[e]=t,Z++),t}(e)(t,{pretty:!0})}function te(e){var t=e.computedMatch,n=e.to,r=e.push,o=void 0!==r&&r;return a().createElement(q.Consumer,null,(function(e){e||m(!1);var r=e.history,i=e.staticContext,l=o?r.push:r.replace,u=w(t?"string"==typeof n?ee(n,t.params):c({},n,{pathname:ee(n.pathname,t.params)}):n);return i?(l(u),null):a().createElement(X,{onMount:function(){l(u)},onUpdate:function(e,t){var n,r,o=w(t.to);n=o,r=c({},u,{key:o.key}),n.pathname===r.pathname&&n.search===r.search&&n.hash===r.hash&&n.key===r.key&&p(n.state,r.state)||l(u)},to:n})}))}var ne={},re=0;function oe(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,l=void 0!==a&&a,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=ne[n]||(ne[n]={});if(r[e])return r[e];var o=[],i={regexp:$()(e,o,t),keys:o};return re<1e4&&(r[e]=i,re++),i}(n,{end:i,strict:l,sensitive:c}),o=r.regexp,a=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return i&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:a.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var ie=function(e){function t(){return e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=this;return a().createElement(q.Consumer,null,(function(t){t||m(!1);var n=e.props.location||t.location,r=c({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?oe(n.pathname,e.props):t.match}),o=e.props,i=o.children,l=o.component,u=o.render;return Array.isArray(i)&&function(e){return 0===a().Children.count(e)}(i)&&(i=null),a().createElement(q.Provider,{value:r},r.match?i?"function"==typeof i?i(r):i:l?a().createElement(l,r):u?u(r):null:"function"==typeof i?i(r):null)}))},t}(a().Component);function ae(e){return"/"===e.charAt(0)?e:"/"+e}function le(e,t){if(!e)return t;var n=ae(e);return 0!==t.pathname.indexOf(n)?t:c({},t,{pathname:t.pathname.substr(n.length)})}function ue(e){return"string"==typeof e?e:b(e)}function ce(e){return function(){m(!1)}}function se(){}var fe=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).handlePush=function(e){return t.navigateTo(e,"PUSH")},t.handleReplace=function(e){return t.navigateTo(e,"REPLACE")},t.handleListen=function(){return se},t.handleBlock=function(){return se},t}o(t,e);var n=t.prototype;return n.navigateTo=function(e,t){var n=this.props,r=n.basename,o=void 0===r?"":r,i=n.context,a=void 0===i?{}:i;a.action=t,a.location=function(e,t){return e?c({},t,{pathname:ae(e)+t.pathname}):t}(o,w(e)),a.url=ue(a.location)},n.render=function(){var e=this.props,t=e.basename,n=void 0===t?"":t,r=e.context,o=void 0===r?{}:r,i=e.location,l=void 0===i?"/":i,u=W(e,["basename","context","location"]),s={createHref:function(e){return ae(n+ue(e))},action:"POP",location:le(n,w(l)),push:this.handlePush,replace:this.handleReplace,go:ce(),goBack:ce(),goForward:ce(),listen:this.handleListen,block:this.handleBlock};return a().createElement(K,c({},u,{history:s,staticContext:o}))},t}(a().Component),de=function(e){function t(){return e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=this;return a().createElement(q.Consumer,null,(function(t){t||m(!1);var n,r,o=e.props.location||t.location;return a().Children.forEach(e.props.children,(function(e){if(null==r&&a().isValidElement(e)){n=e;var i=e.props.path||e.props.from;r=i?oe(o.pathname,c({},e.props,{path:i})):t.match}})),r?a().cloneElement(n,{location:o,computedMatch:r}):null}))},t}(a().Component);function pe(e){var t="withRouter("+(e.displayName||e.name)+")",n=function(t){var n=t.wrappedComponentRef,r=W(t,["wrappedComponentRef"]);return a().createElement(q.Consumer,null,(function(t){return t||m(!1),a().createElement(e,c({},r,t,{ref:n}))}))};return n.displayName=t,n.WrappedComponent=e,H()(n,e)}var me=a().useContext;function he(){return me(Q)}function ve(){return me(q).location}function ye(){var e=me(q).match;return e?e.params:{}}function ge(e){var t=ve(),n=me(q).match;return e?oe(t.pathname,e):n}var be=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=C(t.props),t}return o(t,e),t.prototype.render=function(){return a().createElement(K,{history:this.history,children:this.props.children})},t}(a().Component),we=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=U(t.props),t}return o(t,e),t.prototype.render=function(){return a().createElement(K,{history:this.history,children:this.props.children})},t}(a().Component),xe=function(e,t){return"function"==typeof e?e(t):e},ke=function(e,t){return"string"==typeof e?w(e,null,null,t):e},Te=function(e){return e},Ee=a().forwardRef;void 0===Ee&&(Ee=Te);var Se=Ee((function(e,t){var n=e.innerRef,r=e.navigate,o=e.onClick,i=W(e,["innerRef","navigate","onClick"]),l=i.target,u=c({},i,{onClick:function(e){try{o&&o(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=Te!==Ee&&t||n,a().createElement("a",u)})),_e=Ee((function(e,t){var n=e.component,r=void 0===n?Se:n,o=e.replace,i=e.to,l=e.innerRef,u=W(e,["component","replace","to","innerRef"]);return a().createElement(q.Consumer,null,(function(e){e||m(!1);var n=e.history,s=ke(xe(i,e.location),e.location),f=s?n.createHref(s):"",d=c({},u,{href:f,navigate:function(){var t=xe(i,e.location),r=b(e.location)===b(ke(t));(o||r?n.replace:n.push)(t)}});return Te!==Ee?d.ref=t||l:d.innerRef=l,a().createElement(r,d)}))})),Ce=function(e){return e},Pe=a().forwardRef;void 0===Pe&&(Pe=Ce);var Oe=Pe((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,o=e.activeClassName,i=void 0===o?"active":o,l=e.activeStyle,u=e.className,s=e.exact,f=e.isActive,d=e.location,p=e.sensitive,h=e.strict,v=e.style,y=e.to,g=e.innerRef,b=W(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return a().createElement(q.Consumer,null,(function(e){e||m(!1);var n=d||e.location,o=ke(xe(y,n),n),w=o.pathname,x=w&&w.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),k=x?oe(n.pathname,{path:x,exact:s,sensitive:p,strict:h}):null,T=!!(f?f(k,n):k),E="function"==typeof u?u(T):u,S="function"==typeof v?v(T):v;T&&(E=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(E,i),S=c({},S,l));var _=c({"aria-current":T&&r||null,className:E,style:S,to:o},b);return Ce!==Pe?_.ref=t||g:_.innerRef=g,a().createElement(_e,_)}))}))},408:(e,t,n)=>{"use strict";var r=n(418),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.concurrent_mode"):60111,p=o?Symbol.for("react.forward_ref"):60112,m=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,v=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function g(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,(function(){return u[c++]})))).name="Invariant Violation"}throw e.framesToPop=1,e}}function b(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);g(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var w={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},x={};function k(e,t,n){this.props=e,this.context=t,this.refs=x,this.updater=n||w}function T(){}function E(e,t,n){this.props=e,this.context=t,this.refs=x,this.updater=n||w}k.prototype.isReactComponent={},k.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&b("85"),this.updater.enqueueSetState(this,e,t,"setState")},k.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},T.prototype=k.prototype;var S=E.prototype=new T;S.constructor=E,r(S,k.prototype),S.isPureReactComponent=!0;var _={current:null},C={current:null},P=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function N(e,t,n){var r=void 0,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)P.call(t,r)&&!O.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:C.current}}function R(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var M=/\/+/g,U=[];function D(e,t,n,r){if(U.length){var o=U.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function I(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>U.length&&U.push(e)}function A(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case i:case a:l=!0}}if(l)return n(r,e,""===t?"."+z(e,0):t),1;if(l=0,t=""===t?".":t+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=t+z(o=e[u],u);l+=A(o,c,n,r)}else if("function"==typeof(c=null===e||"object"!=typeof e?null:"function"==typeof(c=y&&e[y]||e["@@iterator"])?c:null))for(e=c.call(e),u=0;!(o=e.next()).done;)l+=A(o=o.value,c=t+z(o,u++),n,r);else"object"===o&&b("31","[object Object]"==(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return l}function L(e,t,n){return null==e?0:A(e,"",t,n)}function z(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function F(e,t){e.func.call(e.context,t,e.count++)}function j(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?$(e,r,n,(function(e){return e})):null!=e&&(R(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(M,"$&/")+"/")+n)),r.push(e))}function $(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(M,"$&/")+"/"),L(e,j,t=D(t,i,r,o)),I(t)}function W(){var e=_.current;return null===e&&b("307"),e}var V={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return $(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;L(e,F,t=D(null,null,t,n)),I(t)},count:function(e){return L(e,(function(){return null}),null)},toArray:function(e){var t=[];return $(e,t,null,(function(e){return e})),t},only:function(e){return R(e)||b("143"),e}},createRef:function(){return{current:null}},Component:k,PureComponent:E,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return W().useCallback(e,t)},useContext:function(e,t){return W().useContext(e,t)},useEffect:function(e,t){return W().useEffect(e,t)},useImperativeHandle:function(e,t,n){return W().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return W().useLayoutEffect(e,t)},useMemo:function(e,t){return W().useMemo(e,t)},useReducer:function(e,t,n){return W().useReducer(e,t,n)},useRef:function(e){return W().useRef(e)},useState:function(e){return W().useState(e)},Fragment:l,StrictMode:u,Suspense:m,createElement:N,cloneElement:function(e,t,n){null==e&&b("267",e);var o=void 0,a=r({},e.props),l=e.key,u=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,c=C.current),void 0!==t.key&&(l=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)P.call(t,o)&&!O.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1==(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:i,type:e.type,key:l,ref:u,props:a,_owner:c}},createFactory:function(e){var t=N.bind(null,e);return t.type=e,t},isValidElement:R,version:"16.8.0",unstable_ConcurrentMode:d,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:_,ReactCurrentOwner:C,assign:r}},H={default:V},B=H&&V||H;e.exports=B.default||B},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=null,o=!1,i=3,a=-1,l=-1,u=!1,c=!1;function s(){if(!u){var e=r.expirationTime;c?E():c=!0,T(p,e)}}function f(){var e=r,t=r.next;if(r===t)r=null;else{var n=r.previous;r=n.next=t,t.previous=n}e.next=e.previous=null,n=e.callback,t=e.expirationTime,e=e.priorityLevel;var o=i,a=l;i=e,l=t;try{var u=n()}finally{i=o,l=a}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===r)r=u.next=u.previous=u;else{n=null,e=r;do{if(e.expirationTime>=t){n=e;break}e=e.next}while(e!==r);null===n?n=r:n===r&&(r=u,s()),(t=n.previous).next=n.previous=u,u.next=n,u.previous=t}}function d(){if(-1===a&&null!==r&&1===r.priorityLevel){u=!0;try{do{f()}while(null!==r&&1===r.priorityLevel)}finally{u=!1,null!==r?s():c=!1}}}function p(e){u=!0;var n=o;o=e;try{if(e)for(;null!==r;){var i=t.unstable_now();if(!(r.expirationTime<=i))break;do{f()}while(null!==r&&r.expirationTime<=i)}else if(null!==r)do{f()}while(null!==r&&!S())}finally{u=!1,o=n,null!==r?s():c=!1,d()}}var m,h,v=Date,y="function"==typeof setTimeout?setTimeout:void 0,g="function"==typeof clearTimeout?clearTimeout:void 0,b="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,w="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function x(e){m=b((function(t){g(h),e(t)})),h=y((function(){w(m),e(t.unstable_now())}),100)}if("object"==typeof performance&&"function"==typeof performance.now){var k=performance;t.unstable_now=function(){return k.now()}}else t.unstable_now=function(){return v.now()};var T,E,S,_=null;if("undefined"!=typeof window?_=window:void 0!==n.g&&(_=n.g),_&&_._schedMock){var C=_._schedMock;T=C[0],E=C[1],S=C[2],t.unstable_now=C[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var P=null,O=function(e){if(null!==P)try{P(e)}finally{P=null}};T=function(e){null!==P?setTimeout(T,0,e):(P=e,setTimeout(O,0,!1))},E=function(){P=null},S=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof b&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof w&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var N=null,R=!1,M=-1,U=!1,D=!1,I=0,A=33,L=33;S=function(){return I<=t.unstable_now()};var z=new MessageChannel,F=z.port2;z.port1.onmessage=function(){R=!1;var e=N,n=M;N=null,M=-1;var r=t.unstable_now(),o=!1;if(0>=I-r){if(!(-1!==n&&n<=r))return U||(U=!0,x(j)),N=e,void(M=n);o=!0}if(null!==e){D=!0;try{e(o)}finally{D=!1}}};var j=function(e){if(null!==N){x(j);var t=e-I+L;t<L&&A<L?(8>t&&(t=8),L=t<A?A:t):A=t,I=e+L,R||(R=!0,F.postMessage(void 0))}else U=!1};T=function(e,t){N=e,M=t,D||0>t?F.postMessage(void 0):U||(U=!0,x(j))},E=function(){N=null,R=!1,M=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=i,o=a;i=e,a=t.unstable_now();try{return n()}finally{i=r,a=o,d()}},t.unstable_next=function(e){switch(i){case 1:case 2:case 3:var n=3;break;default:n=i}var r=i,o=a;i=n,a=t.unstable_now();try{return e()}finally{i=r,a=o,d()}},t.unstable_scheduleCallback=function(e,n){var o=-1!==a?a:t.unstable_now();if("object"==typeof n&&null!==n&&"number"==typeof n.timeout)n=o+n.timeout;else switch(i){case 1:n=o+-1;break;case 2:n=o+250;break;case 5:n=o+1073741823;break;case 4:n=o+1e4;break;default:n=o+5e3}if(e={callback:e,priorityLevel:i,expirationTime:n,next:null,previous:null},null===r)r=e.next=e.previous=e,s();else{o=null;var l=r;do{if(l.expirationTime>n){o=l;break}l=l.next}while(l!==r);null===o?o=r:o===r&&(r=e,s()),(n=o.previous).next=o.previous=e,e.next=o,e.previous=n}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)r=null;else{e===r&&(r=t);var n=e.previous;n.next=t,t.previous=n}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=i;return function(){var r=i,o=a;i=n,a=t.unstable_now();try{return e.apply(this,arguments)}finally{i=r,a=o,d()}}},t.unstable_getCurrentPriorityLevel=function(){return i},t.unstable_shouldYield=function(){return!o&&(null!==r&&r.expirationTime<l||S())},t.unstable_continueExecution=function(){null!==r&&s()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return r}},840:(e,t,n)=>{"use strict";e.exports=n(53)},632:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},r.apply(this,arguments)},o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function l(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}u((r=r.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}};Object.defineProperty(t,"__esModule",{value:!0});var a=n(294),l=n(294),u=n(181),c=n(682),s=n(490),f=n(791),d=n(273);t.default=function(){var e=(0,l.useState)("Chicago"),t=e[0],n=e[1],p=(0,l.useState)(""),m=p[0],h=(p[1],(0,l.useState)()),v=h[0],y=h[1],g=(0,l.useState)(),b=g[0],w=g[1],x=(0,l.useState)(""),k=x[0],T=x[1],E=(0,l.useState)(),S=E[0],_=E[1],C=(0,l.useState)(),P=C[0],O=C[1],N=(0,l.useState)(),R=N[0],M=N[1],U=(0,l.useState)(),D=U[0],I=U[1],A=(0,l.useState)(),L=A[0],z=A[1],F=(0,l.useState)(),j=F[0],$=F[1],W=(0,l.useState)([]),V=W[0],H=W[1],B=(0,l.useState)([]),Q=B[0],q=B[1],K=(0,l.useState)([]),Y=K[0],X=K[1],G="49cc8c821cd2aff9af04c9f98c36eb74",J="https://api.openweathermap.org/data/2.5/weather?q="+t+"&appid="+G;function Z(){return o(this,void 0,void 0,(function(){return i(this,(function(e){switch(e.label){case 0:return[4,fetch(J).then((function(e){return e.json()})).then((function(e){var t=e.coord.lat,n=e.coord.lon;fetch("https://api.openweathermap.org/data/2.5/onecall?lat="+t+"&lon="+n+"&units=imperial&exclude=minutely&appid="+G).then((function(e){return e.json()})).then((function(r){console.log(r);for(var o=[],i=0;i<8;i++)o.push(r.daily[i].temp.max);for(var a=[],l=[],u=0;u<23;u++){a.push(r.hourly[u].temp);var c=Intl.DateTimeFormat("en-US",{hour:"numeric"}).format(1e3*r.hourly[u].dt);l.push(c)}return z(t),$(n),y(r.current.temp),w(r.current.feels_like),T(r.current.weather[0].description),_(e.main.humidity),O(e.wind.speed),M(e.wind.deg),I(e.wind.gust),H(a),q(l),X(o)}))}))];case 1:return e.sent(),[2]}}))}))}return(0,l.useEffect)((function(){Z()}),[]),a.createElement(u.HashRouter,null,a.createElement(c.default,{name:t,age:22}),a.createElement("input",{type:"text",onChange:function(e){return n(e.target.value)},value:t,onKeyPress:function(e){"Enter"===e.key&&Z()}}),a.createElement("div",{className:"body-container"},a.createElement(u.Switch,null,a.createElement(u.Route,{exact:!0,path:"/",render:function(e){return a.createElement(d.default,r({},e,{temperature:v,temp_feels_like:b,description:k,humidity:S,wind_speed:P,wind_degrees:R,wind_gust:D}))}}),a.createElement(u.Route,{path:"/hourly",render:function(e){return a.createElement(f.default,r({},e,{hourly_temps:V,hourly_hours:Q}))}}),a.createElement(u.Route,{path:"/daily",render:function(e){return a.createElement(s.default,r({},e,{dailyData:Y}))}})),a.createElement("h1",null,m),a.createElement("h1",null,"lat = ",L),a.createElement("h1",null,"lon = ",j),a.createElement("h3",null,"temp = ",v),a.createElement("h3",null,"daily max = ",Y)))}},490:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294);t.default=function(e){return r.createElement("div",{className:"daily-container"},r.createElement("h1",null,"DAILY"),r.createElement("h3",null,e.dailyData[0]),r.createElement("h3",null,e.dailyData[1]),r.createElement("h3",null,e.dailyData[2]),r.createElement("h3",null,e.dailyData[3]),r.createElement("h3",null,e.dailyData[4]),r.createElement("h3",null,e.dailyData[5]),r.createElement("h3",null,e.dailyData[6]),r.createElement("h3",null,e.dailyData[7]))}},791:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294);t.default=function(e){return r.createElement("div",{className:"hourly-container"},r.createElement("h1",null,"THIS HOUR IS ",e.hourly_hours[0]),r.createElement("h1",null,"NEXT HOUR IS ",e.hourly_hours[1]),r.createElement("h1",null,"NEXT HOUR IS ",e.hourly_hours[2]),r.createElement("h1",null,"HOURLY ",e.hourly_temps[5]))}},682:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294),o=n(181);t.default=function(e){var t=e.name;return r.createElement("nav",null,r.createElement("ul",null,r.createElement(o.NavLink,{exact:!0,activeClassname:"active",to:"/"},r.createElement("li",null,"Today")),r.createElement(o.NavLink,{activeClassname:"active",to:"/hourly"},r.createElement("li",null,"Hourly")),r.createElement(o.NavLink,{activeClassname:"active",to:"/daily"},r.createElement("li",null,"Daily")),r.createElement("li",null,"Radar",t)))}},273:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294);t.default=function(e){return r.createElement("div",{className:"today-container"},r.createElement("div",{className:"today-left"},r.createElement("span",{id:"current-weather"},"Current Weather"),r.createElement("span",{id:"time"},Intl.DateTimeFormat("en-US",{hour:"numeric",minute:"2-digit"}).format(Date.now())),r.createElement("img",{id:"weather-img",src:"../img/test.png"}),r.createElement("span",{id:"temp"},e.temperature,"°"),r.createElement("span",{id:"real-feel"},"Feels Like ",e.temp_feels_like,"°"),r.createElement("span",{id:"overcast"},e.description)),r.createElement("div",{className:"today-right"},r.createElement("span",{id:"air-quality"},"Humidity"),r.createElement("span",{id:"air-quality-data"},e.humidity),r.createElement("span",{id:"wind"},"Wind"),r.createElement("span",{id:"wind-data"},"DIRECTION ",e.wind_speed," mph"),r.createElement("span",{id:"wind-gusts"},"Wind Gusts"),r.createElement("span",{id:"wind-gusts-data"},e.wind_gust," mph")))}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r].call(i.exports,i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=n(294),t=n(935),r=n(632);t.render(e.createElement(r.default,null),document.querySelector("#root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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c291cmNlcyI6WyJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMiLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly9teXByb2oyMGNvbXBsZXRld2VhdGhlci8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovL215cHJvajIwY29tcGxldGV3ZWF0aGVyLy4vbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovL215cHJvajIwY29tcGxldGV3ZWF0aGVyLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovL215cHJvajIwY29tcGxldGV3ZWF0aGVyLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovL215cHJvajIwY29tcGxldGV3ZWF0aGVyLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9teXByb2oyMGNvbXBsZXRld2VhdGhlci8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9teXByb2oyMGNvbXBsZXRld2VhdGhlci8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zZXRQcm90b3R5cGVPZi5qcyIsIndlYnBhY2s6Ly9teXByb2oyMGNvbXBsZXRld2VhdGhlci8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovL215cHJvajIwY29tcGxldGV3ZWF0aGVyLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMiLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1wYXRobmFtZS9lc20vcmVzb2x2ZS1wYXRobmFtZS5qcyIsIndlYnBhY2s6Ly9teXByb2oyMGNvbXBsZXRld2VhdGhlci8uL25vZGVfbW9kdWxlcy92YWx1ZS1lcXVhbC9lc20vdmFsdWUtZXF1YWwuanMiLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5lc20uanMiLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly9teXByb2oyMGNvbXBsZXRld2VhdGhlci8uL25vZGVfbW9kdWxlcy9taW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0L2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovL215cHJvajIwY29tcGxldGV3ZWF0aGVyLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzbS9yZWFjdC1yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lc20vcmVhY3Qtcm91dGVyLWRvbS5qcyIsIndlYnBhY2s6Ly9teXByb2oyMGNvbXBsZXRld2VhdGhlci8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovL215cHJvajIwY29tcGxldGV3ZWF0aGVyLy4vc3JjL2FwcC50c3giLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9zcmMvY29tcG9uZW50cy9kYWlseS50c3giLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9zcmMvY29tcG9uZW50cy9ob3VybHkudHN4Iiwid2VicGFjazovL215cHJvajIwY29tcGxldGV3ZWF0aGVyLy4vc3JjL2NvbXBvbmVudHMvbmF2LnRzeCIsIndlYnBhY2s6Ly9teXByb2oyMGNvbXBsZXRld2VhdGhlci8uL3NyYy9jb21wb25lbnRzL3RvZGF5LnRzeCIsIndlYnBhY2s6Ly9teXByb2oyMGNvbXBsZXRld2VhdGhlci93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9teXByb2oyMGNvbXBsZXRld2VhdGhlci93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9teXByb2oyMGNvbXBsZXRld2VhdGhlci93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9teXByb2oyMGNvbXBsZXRld2VhdGhlci93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL215cHJvajIwY29tcGxldGV3ZWF0aGVyL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vbXlwcm9qMjBjb21wbGV0ZXdlYXRoZXIvLi9zcmMvaW5kZXgudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbnZhciByZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcclxuXHJcbi8qKlxyXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cclxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxyXG4gKi9cclxudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XHJcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXHJcbiAgY29udGV4dFR5cGU6IHRydWUsXHJcbiAgY29udGV4dFR5cGVzOiB0cnVlLFxyXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcclxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcclxuICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXHJcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxyXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcclxuICBtaXhpbnM6IHRydWUsXHJcbiAgcHJvcFR5cGVzOiB0cnVlLFxyXG4gIHR5cGU6IHRydWVcclxufTtcclxudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XHJcbiAgbmFtZTogdHJ1ZSxcclxuICBsZW5ndGg6IHRydWUsXHJcbiAgcHJvdG90eXBlOiB0cnVlLFxyXG4gIGNhbGxlcjogdHJ1ZSxcclxuICBjYWxsZWU6IHRydWUsXHJcbiAgYXJndW1lbnRzOiB0cnVlLFxyXG4gIGFyaXR5OiB0cnVlXHJcbn07XHJcbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xyXG4gICckJHR5cGVvZic6IHRydWUsXHJcbiAgcmVuZGVyOiB0cnVlLFxyXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcclxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcclxuICBwcm9wVHlwZXM6IHRydWVcclxufTtcclxudmFyIE1FTU9fU1RBVElDUyA9IHtcclxuICAnJCR0eXBlb2YnOiB0cnVlLFxyXG4gIGNvbXBhcmU6IHRydWUsXHJcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxyXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxyXG4gIHByb3BUeXBlczogdHJ1ZSxcclxuICB0eXBlOiB0cnVlXHJcbn07XHJcbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcclxuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xyXG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5NZW1vXSA9IE1FTU9fU1RBVElDUztcclxuXHJcbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XHJcbiAgLy8gUmVhY3QgdjE2LjExIGFuZCBiZWxvd1xyXG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XHJcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xyXG4gIH0gLy8gUmVhY3QgdjE2LjEyIGFuZCBhYm92ZVxyXG5cclxuXHJcbiAgcmV0dXJuIFRZUEVfU1RBVElDU1tjb21wb25lbnRbJyQkdHlwZW9mJ11dIHx8IFJFQUNUX1NUQVRJQ1M7XHJcbn1cclxuXHJcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcclxudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcclxudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XHJcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xyXG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XHJcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xyXG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XHJcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XHJcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xyXG4gICAgaWYgKG9iamVjdFByb3RvdHlwZSkge1xyXG4gICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcclxuXHJcbiAgICAgIGlmIChpbmhlcml0ZWRDb21wb25lbnQgJiYgaW5oZXJpdGVkQ29tcG9uZW50ICE9PSBvYmplY3RQcm90b3R5cGUpIHtcclxuICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xyXG5cclxuICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcclxuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcclxuICAgIHZhciBzb3VyY2VTdGF0aWNzID0gZ2V0U3RhdGljcyhzb3VyY2VDb21wb25lbnQpO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xyXG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcclxuXHJcbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xyXG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcclxuXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIC8vIEF2b2lkIGZhaWx1cmVzIGZyb20gcmVhZC1vbmx5IHByb3BlcnRpZXNcclxuICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcclxuICAgICAgICB9IGNhdGNoIChlKSB7fVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xyXG4iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xyXG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJyKSA9PSAnW29iamVjdCBBcnJheV0nO1xyXG59O1xyXG4iLCIvKlxyXG5vYmplY3QtYXNzaWduXHJcbihjKSBTaW5kcmUgU29yaHVzXHJcbkBsaWNlbnNlIE1JVFxyXG4qL1xyXG5cclxuJ3VzZSBzdHJpY3QnO1xyXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xyXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcclxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcclxudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xyXG5cclxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XHJcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xyXG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcclxuXHR9XHJcblxyXG5cdHJldHVybiBPYmplY3QodmFsKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xyXG5cdHRyeSB7XHJcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cclxuXHJcblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XHJcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXHJcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XHJcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcclxuXHRcdHZhciB0ZXN0MiA9IHt9O1xyXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XHJcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcclxuXHRcdH1cclxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XHJcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcclxuXHRcdH0pO1xyXG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XHJcblx0XHR2YXIgdGVzdDMgPSB7fTtcclxuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xyXG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xyXG5cdFx0fSk7XHJcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cclxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdHJ1ZTtcclxuXHR9IGNhdGNoIChlcnIpIHtcclxuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0fVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xyXG5cdHZhciBmcm9tO1xyXG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XHJcblx0dmFyIHN5bWJvbHM7XHJcblxyXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XHJcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XHJcblxyXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcclxuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xyXG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XHJcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XHJcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcclxuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiB0bztcclxufTtcclxuIiwidmFyIGlzYXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JylcclxuXHJcbi8qKlxyXG4gKiBFeHBvc2UgYHBhdGhUb1JlZ2V4cGAuXHJcbiAqL1xyXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGhUb1JlZ2V4cFxyXG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXHJcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXHJcbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvRnVuY3Rpb24gPSB0b2tlbnNUb0Z1bmN0aW9uXHJcbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBcclxuXHJcbi8qKlxyXG4gKiBUaGUgbWFpbiBwYXRoIG1hdGNoaW5nIHJlZ2V4cCB1dGlsaXR5LlxyXG4gKlxyXG4gKiBAdHlwZSB7UmVnRXhwfVxyXG4gKi9cclxudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXHJcbiAgLy8gTWF0Y2ggZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGFwcGVhciBpbiBmdXR1cmUgbWF0Y2hlcy5cclxuICAvLyBUaGlzIGFsbG93cyB0aGUgdXNlciB0byBlc2NhcGUgc3BlY2lhbCBjaGFyYWN0ZXJzIHRoYXQgd29uJ3QgdHJhbnNmb3JtLlxyXG4gICcoXFxcXFxcXFwuKScsXHJcbiAgLy8gTWF0Y2ggRXhwcmVzcy1zdHlsZSBwYXJhbWV0ZXJzIGFuZCB1bi1uYW1lZCBwYXJhbWV0ZXJzIHdpdGggYSBwcmVmaXhcclxuICAvLyBhbmQgb3B0aW9uYWwgc3VmZml4ZXMuIE1hdGNoZXMgYXBwZWFyIGFzOlxyXG4gIC8vXHJcbiAgLy8gXCIvOnRlc3QoXFxcXGQrKT9cIiA9PiBbXCIvXCIsIFwidGVzdFwiLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCBcIj9cIiwgdW5kZWZpbmVkXVxyXG4gIC8vIFwiL3JvdXRlKFxcXFxkKylcIiAgPT4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiXFxkK1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZF1cclxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXHJcbiAgJyhbXFxcXC8uXSk/KD86KD86XFxcXDooXFxcXHcrKSg/OlxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpP3xcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKShbKyo/XSk/fChcXFxcKikpJ1xyXG5dLmpvaW4oJ3wnKSwgJ2cnKVxyXG5cclxuLyoqXHJcbiAqIFBhcnNlIGEgc3RyaW5nIGZvciB0aGUgcmF3IHRva2Vucy5cclxuICpcclxuICogQHBhcmFtICB7c3RyaW5nfSAgc3RyXHJcbiAqIEBwYXJhbSAge09iamVjdD19IG9wdGlvbnNcclxuICogQHJldHVybiB7IUFycmF5fVxyXG4gKi9cclxuZnVuY3Rpb24gcGFyc2UgKHN0ciwgb3B0aW9ucykge1xyXG4gIHZhciB0b2tlbnMgPSBbXVxyXG4gIHZhciBrZXkgPSAwXHJcbiAgdmFyIGluZGV4ID0gMFxyXG4gIHZhciBwYXRoID0gJydcclxuICB2YXIgZGVmYXVsdERlbGltaXRlciA9IG9wdGlvbnMgJiYgb3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nXHJcbiAgdmFyIHJlc1xyXG5cclxuICB3aGlsZSAoKHJlcyA9IFBBVEhfUkVHRVhQLmV4ZWMoc3RyKSkgIT0gbnVsbCkge1xyXG4gICAgdmFyIG0gPSByZXNbMF1cclxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXHJcbiAgICB2YXIgb2Zmc2V0ID0gcmVzLmluZGV4XHJcbiAgICBwYXRoICs9IHN0ci5zbGljZShpbmRleCwgb2Zmc2V0KVxyXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxyXG5cclxuICAgIC8vIElnbm9yZSBhbHJlYWR5IGVzY2FwZWQgc2VxdWVuY2VzLlxyXG4gICAgaWYgKGVzY2FwZWQpIHtcclxuICAgICAgcGF0aCArPSBlc2NhcGVkWzFdXHJcbiAgICAgIGNvbnRpbnVlXHJcbiAgICB9XHJcblxyXG4gICAgdmFyIG5leHQgPSBzdHJbaW5kZXhdXHJcbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXHJcbiAgICB2YXIgbmFtZSA9IHJlc1szXVxyXG4gICAgdmFyIGNhcHR1cmUgPSByZXNbNF1cclxuICAgIHZhciBncm91cCA9IHJlc1s1XVxyXG4gICAgdmFyIG1vZGlmaWVyID0gcmVzWzZdXHJcbiAgICB2YXIgYXN0ZXJpc2sgPSByZXNbN11cclxuXHJcbiAgICAvLyBQdXNoIHRoZSBjdXJyZW50IHBhdGggb250byB0aGUgdG9rZW5zLlxyXG4gICAgaWYgKHBhdGgpIHtcclxuICAgICAgdG9rZW5zLnB1c2gocGF0aClcclxuICAgICAgcGF0aCA9ICcnXHJcbiAgICB9XHJcblxyXG4gICAgdmFyIHBhcnRpYWwgPSBwcmVmaXggIT0gbnVsbCAmJiBuZXh0ICE9IG51bGwgJiYgbmV4dCAhPT0gcHJlZml4XHJcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonXHJcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcclxuICAgIHZhciBkZWxpbWl0ZXIgPSByZXNbMl0gfHwgZGVmYXVsdERlbGltaXRlclxyXG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwXHJcblxyXG4gICAgdG9rZW5zLnB1c2goe1xyXG4gICAgICBuYW1lOiBuYW1lIHx8IGtleSsrLFxyXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcclxuICAgICAgZGVsaW1pdGVyOiBkZWxpbWl0ZXIsXHJcbiAgICAgIG9wdGlvbmFsOiBvcHRpb25hbCxcclxuICAgICAgcmVwZWF0OiByZXBlYXQsXHJcbiAgICAgIHBhcnRpYWw6IHBhcnRpYWwsXHJcbiAgICAgIGFzdGVyaXNrOiAhIWFzdGVyaXNrLFxyXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgLy8gTWF0Y2ggYW55IGNoYXJhY3RlcnMgc3RpbGwgcmVtYWluaW5nLlxyXG4gIGlmIChpbmRleCA8IHN0ci5sZW5ndGgpIHtcclxuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcclxuICB9XHJcblxyXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXHJcbiAgaWYgKHBhdGgpIHtcclxuICAgIHRva2Vucy5wdXNoKHBhdGgpXHJcbiAgfVxyXG5cclxuICByZXR1cm4gdG9rZW5zXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgICAgIHN0clxyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcclxuICogQHJldHVybiB7IWZ1bmN0aW9uKE9iamVjdD0sIE9iamVjdD0pfVxyXG4gKi9cclxuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XHJcbiAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSwgb3B0aW9ucylcclxufVxyXG5cclxuLyoqXHJcbiAqIFByZXR0aWVyIGVuY29kaW5nIG9mIFVSSSBwYXRoIHNlZ21lbnRzLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9XHJcbiAqIEByZXR1cm4ge3N0cmluZ31cclxuICovXHJcbmZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSAoc3RyKSB7XHJcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1tcXC8/I10vZywgZnVuY3Rpb24gKGMpIHtcclxuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcclxuICB9KVxyXG59XHJcblxyXG4vKipcclxuICogRW5jb2RlIHRoZSBhc3RlcmlzayBwYXJhbWV0ZXIuIFNpbWlsYXIgdG8gYHByZXR0eWAsIGJ1dCBhbGxvd3Mgc2xhc2hlcy5cclxuICpcclxuICogQHBhcmFtICB7c3RyaW5nfVxyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAqL1xyXG5mdW5jdGlvbiBlbmNvZGVBc3RlcmlzayAoc3RyKSB7XHJcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1s/I10vZywgZnVuY3Rpb24gKGMpIHtcclxuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcclxuICB9KVxyXG59XHJcblxyXG4vKipcclxuICogRXhwb3NlIGEgbWV0aG9kIGZvciB0cmFuc2Zvcm1pbmcgdG9rZW5zIGludG8gdGhlIHBhdGggZnVuY3Rpb24uXHJcbiAqL1xyXG5mdW5jdGlvbiB0b2tlbnNUb0Z1bmN0aW9uICh0b2tlbnMsIG9wdGlvbnMpIHtcclxuICAvLyBDb21waWxlIGFsbCB0aGUgdG9rZW5zIGludG8gcmVnZXhwcy5cclxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxyXG5cclxuICAvLyBDb21waWxlIGFsbCB0aGUgcGF0dGVybnMgYmVmb3JlIGNvbXBpbGF0aW9uLlxyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBpZiAodHlwZW9mIHRva2Vuc1tpXSA9PT0gJ29iamVjdCcpIHtcclxuICAgICAgbWF0Y2hlc1tpXSA9IG5ldyBSZWdFeHAoJ14oPzonICsgdG9rZW5zW2ldLnBhdHRlcm4gKyAnKSQnLCBmbGFncyhvcHRpb25zKSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XHJcbiAgICB2YXIgcGF0aCA9ICcnXHJcbiAgICB2YXIgZGF0YSA9IG9iaiB8fCB7fVxyXG4gICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IHt9XHJcbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcclxuXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xyXG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cclxuXHJcbiAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgcGF0aCArPSB0b2tlblxyXG5cclxuICAgICAgICBjb250aW51ZVxyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdXHJcbiAgICAgIHZhciBzZWdtZW50XHJcblxyXG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xyXG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xyXG4gICAgICAgICAgLy8gUHJlcGVuZCBwYXJ0aWFsIHNlZ21lbnQgcHJlZml4ZXMuXHJcbiAgICAgICAgICBpZiAodG9rZW4ucGFydGlhbCkge1xyXG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGNvbnRpbnVlXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcclxuICAgICAgICBpZiAoIXRva2VuLnJlcGVhdCkge1xyXG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcclxuICAgICAgICAgICAgY29udGludWVcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdmFsdWUubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pXHJcblxyXG4gICAgICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYWxsIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkoc2VnbWVudCkgKyAnYCcpXHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgcGF0aCArPSAoaiA9PT0gMCA/IHRva2VuLnByZWZpeCA6IHRva2VuLmRlbGltaXRlcikgKyBzZWdtZW50XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb250aW51ZVxyXG4gICAgICB9XHJcblxyXG4gICAgICBzZWdtZW50ID0gdG9rZW4uYXN0ZXJpc2sgPyBlbmNvZGVBc3Rlcmlzayh2YWx1ZSkgOiBlbmNvZGUodmFsdWUpXHJcblxyXG4gICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xyXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxyXG4gICAgICB9XHJcblxyXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnRcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcGF0aFxyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIEVzY2FwZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBzdHJpbmcuXHJcbiAqXHJcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXHJcbiAqIEByZXR1cm4ge3N0cmluZ31cclxuICovXHJcbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XHJcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfFxcL1xcXFxdKS9nLCAnXFxcXCQxJylcclxufVxyXG5cclxuLyoqXHJcbiAqIEVzY2FwZSB0aGUgY2FwdHVyaW5nIGdyb3VwIGJ5IGVzY2FwaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBhbmQgbWVhbmluZy5cclxuICpcclxuICogQHBhcmFtICB7c3RyaW5nfSBncm91cFxyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAqL1xyXG5mdW5jdGlvbiBlc2NhcGVHcm91cCAoZ3JvdXApIHtcclxuICByZXR1cm4gZ3JvdXAucmVwbGFjZSgvKFs9ITokXFwvKCldKS9nLCAnXFxcXCQxJylcclxufVxyXG5cclxuLyoqXHJcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXHJcbiAqXHJcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHJlXHJcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcclxuICogQHJldHVybiB7IVJlZ0V4cH1cclxuICovXHJcbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XHJcbiAgcmUua2V5cyA9IGtleXNcclxuICByZXR1cm4gcmVcclxufVxyXG5cclxuLyoqXHJcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXHJcbiAqXHJcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAqL1xyXG5mdW5jdGlvbiBmbGFncyAob3B0aW9ucykge1xyXG4gIHJldHVybiBvcHRpb25zICYmIG9wdGlvbnMuc2Vuc2l0aXZlID8gJycgOiAnaSdcclxufVxyXG5cclxuLyoqXHJcbiAqIFB1bGwgb3V0IGtleXMgZnJvbSBhIHJlZ2V4cC5cclxuICpcclxuICogQHBhcmFtICB7IVJlZ0V4cH0gcGF0aFxyXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXHJcbiAqIEByZXR1cm4geyFSZWdFeHB9XHJcbiAqL1xyXG5mdW5jdGlvbiByZWdleHBUb1JlZ2V4cCAocGF0aCwga2V5cykge1xyXG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXHJcbiAgdmFyIGdyb3VwcyA9IHBhdGguc291cmNlLm1hdGNoKC9cXCgoPyFcXD8pL2cpXHJcblxyXG4gIGlmIChncm91cHMpIHtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZ3JvdXBzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGtleXMucHVzaCh7XHJcbiAgICAgICAgbmFtZTogaSxcclxuICAgICAgICBwcmVmaXg6IG51bGwsXHJcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxyXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcclxuICAgICAgICByZXBlYXQ6IGZhbHNlLFxyXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxyXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcclxuICAgICAgICBwYXR0ZXJuOiBudWxsXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxyXG59XHJcblxyXG4vKipcclxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXHJcbiAqXHJcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcclxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xyXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXHJcbiAqIEByZXR1cm4geyFSZWdFeHB9XHJcbiAqL1xyXG5mdW5jdGlvbiBhcnJheVRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XHJcbiAgdmFyIHBhcnRzID0gW11cclxuXHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXHJcbiAgfVxyXG5cclxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXHJcblxyXG4gIHJldHVybiBhdHRhY2hLZXlzKHJlZ2V4cCwga2V5cylcclxufVxyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxyXG4gKlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBwYXRoXHJcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcclxuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xyXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxyXG4gKi9cclxuZnVuY3Rpb24gc3RyaW5nVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcclxuICByZXR1cm4gdG9rZW5zVG9SZWdFeHAocGFyc2UocGF0aCwgb3B0aW9ucyksIGtleXMsIG9wdGlvbnMpXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHshQXJyYXl9ICAgICAgICAgIHRva2Vuc1xyXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcclxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICBvcHRpb25zXHJcbiAqIEByZXR1cm4geyFSZWdFeHB9XHJcbiAqL1xyXG5mdW5jdGlvbiB0b2tlbnNUb1JlZ0V4cCAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XHJcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XHJcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxyXG4gICAga2V5cyA9IFtdXHJcbiAgfVxyXG5cclxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxyXG5cclxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcclxuICB2YXIgZW5kID0gb3B0aW9ucy5lbmQgIT09IGZhbHNlXHJcbiAgdmFyIHJvdXRlID0gJydcclxuXHJcbiAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cclxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xyXG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXHJcblxyXG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpXHJcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXHJcblxyXG4gICAgICBrZXlzLnB1c2godG9rZW4pXHJcblxyXG4gICAgICBpZiAodG9rZW4ucmVwZWF0KSB7XHJcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xyXG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xyXG4gICAgICAgICAgY2FwdHVyZSA9ICcoPzonICsgcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpKT8nXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xyXG4gICAgICB9XHJcblxyXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB2YXIgZGVsaW1pdGVyID0gZXNjYXBlU3RyaW5nKG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJylcclxuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlclxyXG5cclxuICAvLyBJbiBub24tc3RyaWN0IG1vZGUgd2UgYWxsb3cgYSBzbGFzaCBhdCB0aGUgZW5kIG9mIG1hdGNoLiBJZiB0aGUgcGF0aCB0b1xyXG4gIC8vIG1hdGNoIGFscmVhZHkgZW5kcyB3aXRoIGEgc2xhc2gsIHdlIHJlbW92ZSBpdCBmb3IgY29uc2lzdGVuY3kuIFRoZSBzbGFzaFxyXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcclxuICAvLyBpbiBub24tZW5kaW5nIG1vZGUsIHdoZXJlIFwiL3Rlc3QvXCIgc2hvdWxkbid0IG1hdGNoIFwiL3Rlc3QvL3JvdXRlXCIuXHJcbiAgaWYgKCFzdHJpY3QpIHtcclxuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcclxuICB9XHJcblxyXG4gIGlmIChlbmQpIHtcclxuICAgIHJvdXRlICs9ICckJ1xyXG4gIH0gZWxzZSB7XHJcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xyXG4gICAgLy8gcG9zc2libGUgYnkgdXNpbmcgYSBwb3NpdGl2ZSBsb29rYWhlYWQgdG8gdGhlIGVuZCBvciBuZXh0IHBhdGggc2VnbWVudC5cclxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJ1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGF0dGFjaEtleXMobmV3IFJlZ0V4cCgnXicgKyByb3V0ZSwgZmxhZ3Mob3B0aW9ucykpLCBrZXlzKVxyXG59XHJcblxyXG4vKipcclxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxyXG4gKlxyXG4gKiBBbiBlbXB0eSBhcnJheSBjYW4gYmUgcGFzc2VkIGluIGZvciB0aGUga2V5cywgd2hpY2ggd2lsbCBob2xkIHRoZVxyXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXHJcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxyXG4gKlxyXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcclxuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSAgICAgICBrZXlzXHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgICAgb3B0aW9uc1xyXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxyXG4gKi9cclxuZnVuY3Rpb24gcGF0aFRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XHJcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XHJcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxyXG4gICAga2V5cyA9IFtdXHJcbiAgfVxyXG5cclxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxyXG5cclxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xyXG4gICAgcmV0dXJuIHJlZ2V4cFRvUmVnZXhwKHBhdGgsIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cykpXHJcbiAgfVxyXG5cclxuICBpZiAoaXNhcnJheShwYXRoKSkge1xyXG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcclxuICB9XHJcblxyXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxyXG59XHJcbiIsIi8qKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXHJcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cclxuICovXHJcblxyXG4ndXNlIHN0cmljdCc7XHJcblxyXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xyXG5cclxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XHJcbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxyXG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XHJcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xyXG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcclxuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxyXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXHJcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcclxuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXHJcbiAgICApO1xyXG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XHJcbiAgICB0aHJvdyBlcnI7XHJcbiAgfTtcclxuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xyXG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XHJcbiAgICByZXR1cm4gc2hpbTtcclxuICB9O1xyXG4gIC8vIEltcG9ydGFudCFcclxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cclxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XHJcbiAgICBhcnJheTogc2hpbSxcclxuICAgIGJvb2w6IHNoaW0sXHJcbiAgICBmdW5jOiBzaGltLFxyXG4gICAgbnVtYmVyOiBzaGltLFxyXG4gICAgb2JqZWN0OiBzaGltLFxyXG4gICAgc3RyaW5nOiBzaGltLFxyXG4gICAgc3ltYm9sOiBzaGltLFxyXG5cclxuICAgIGFueTogc2hpbSxcclxuICAgIGFycmF5T2Y6IGdldFNoaW0sXHJcbiAgICBlbGVtZW50OiBzaGltLFxyXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXHJcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxyXG4gICAgbm9kZTogc2hpbSxcclxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxyXG4gICAgb25lT2Y6IGdldFNoaW0sXHJcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXHJcbiAgICBzaGFwZTogZ2V0U2hpbSxcclxuICAgIGV4YWN0OiBnZXRTaGltLFxyXG5cclxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxyXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cclxuICB9O1xyXG5cclxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcclxuXHJcbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xyXG59O1xyXG4iLCIvKipcclxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXHJcbiAqL1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcclxuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XHJcblxyXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxyXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcclxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xyXG59IGVsc2Uge1xyXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXHJcbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxyXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xyXG59XHJcbiIsIi8qKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXHJcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cclxuICovXHJcblxyXG4ndXNlIHN0cmljdCc7XHJcblxyXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcclxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjBcclxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxyXG4gKi9cclxuXHJcbi8qXHJcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcclxuKi9cclxuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIikscD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxiYT1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIGNhKGEsYixjLGQsZSxmLGcsaCl7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2MsZCxlLGYsZyxoXSxrPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFtrKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxyXG5mdW5jdGlvbiB0KGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsYz1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsZD0wO2Q8YjtkKyspYys9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbZCsxXSk7Y2EoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixjKX1hYT92b2lkIDA6dChcIjIyN1wiKTtmdW5jdGlvbiBkYShhLGIsYyxkLGUsZixnLGgsbCl7dmFyIGs9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsayl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX1cclxudmFyIGVhPSExLGZhPW51bGwsaGE9ITEsaWE9bnVsbCxqYT17b25FcnJvcjpmdW5jdGlvbihhKXtlYT0hMDtmYT1hfX07ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGwpe2VhPSExO2ZhPW51bGw7ZGEuYXBwbHkoamEsYXJndW1lbnRzKX1mdW5jdGlvbiBsYShhLGIsYyxkLGUsZixnLGgsbCl7a2EuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGVhKXtpZihlYSl7dmFyIGs9ZmE7ZWE9ITE7ZmE9bnVsbH1lbHNlIHQoXCIxOThcIiksaz12b2lkIDA7aGF8fChoYT0hMCxpYT1rKX19dmFyIG1hPW51bGwsbmE9e307XHJcbmZ1bmN0aW9uIG9hKCl7aWYobWEpZm9yKHZhciBhIGluIG5hKXt2YXIgYj1uYVthXSxjPW1hLmluZGV4T2YoYSk7LTE8Yz92b2lkIDA6dChcIjk2XCIsYSk7aWYoIXBhW2NdKXtiLmV4dHJhY3RFdmVudHM/dm9pZCAwOnQoXCI5N1wiLGEpO3BhW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7cmEuaGFzT3duUHJvcGVydHkoaCk/dChcIjk5XCIsaCk6dm9pZCAwO3JhW2hdPWY7dmFyIGw9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihsKXtmb3IoZSBpbiBsKWwuaGFzT3duUHJvcGVydHkoZSkmJnNhKGxbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyhzYShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2U/dm9pZCAwOnQoXCI5OFwiLGQsYSl9fX19XHJcbmZ1bmN0aW9uIHNhKGEsYixjKXt0YVthXT90KFwiMTAwXCIsYSk6dm9pZCAwO3RhW2FdPWI7dWFbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgcGE9W10scmE9e30sdGE9e30sdWE9e30sdmE9bnVsbCx3YT1udWxsLHhhPW51bGw7ZnVuY3Rpb24geWEoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PXhhKGMpO2xhKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9ZnVuY3Rpb24gemEoYSxiKXtudWxsPT1iP3QoXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfVxyXG5mdW5jdGlvbiBBYShhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIgQmE9bnVsbDtmdW5jdGlvbiBDYShhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspeWEoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmeWEoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fVxyXG52YXIgRGE9e2luamVjdEV2ZW50UGx1Z2luT3JkZXI6ZnVuY3Rpb24oYSl7bWE/dChcIjEwMVwiKTp2b2lkIDA7bWE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSk7b2EoKX0saW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOmZ1bmN0aW9uKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO25hLmhhc093blByb3BlcnR5KGMpJiZuYVtjXT09PWR8fChuYVtjXT90KFwiMTAyXCIsYyk6dm9pZCAwLG5hW2NdPWQsYj0hMCl9YiYmb2EoKX19O1xyXG5mdW5jdGlvbiBFYShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPXZhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2MmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3QoXCIyMzFcIixiLHR5cGVvZiBjKTp2b2lkIDA7XHJcbnJldHVybiBjfWZ1bmN0aW9uIEZhKGEpe251bGwhPT1hJiYoQmE9emEoQmEsYSkpO2E9QmE7QmE9bnVsbDtpZihhJiYoQWEoYSxDYSksQmE/dChcIjk1XCIpOnZvaWQgMCxoYSkpdGhyb3cgYT1pYSxoYT0hMSxpYT1udWxsLGE7fXZhciBHYT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxIYT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0dhLElhPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrR2E7ZnVuY3Rpb24gSmEoYSl7aWYoYVtIYV0pcmV0dXJuIGFbSGFdO2Zvcig7IWFbSGFdOylpZihhLnBhcmVudE5vZGUpYT1hLnBhcmVudE5vZGU7ZWxzZSByZXR1cm4gbnVsbDthPWFbSGFdO3JldHVybiA1PT09YS50YWd8fDY9PT1hLnRhZz9hOm51bGx9ZnVuY3Rpb24gS2EoYSl7YT1hW0hhXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfVxyXG5mdW5jdGlvbiBMYShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dChcIjMzXCIpfWZ1bmN0aW9uIE1hKGEpe3JldHVybiBhW0lhXXx8bnVsbH1mdW5jdGlvbiBOYShhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfWZ1bmN0aW9uIE9hKGEsYixjKXtpZihiPUVhKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9emEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9emEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9XHJcbmZ1bmN0aW9uIFBhKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9TmEoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KU9hKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspT2EoY1tiXSxcImJ1YmJsZWRcIixhKX19ZnVuY3Rpb24gUWEoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9RWEoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPXphKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXphKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBSYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJlFhKGEuX3RhcmdldEluc3QsbnVsbCxhKX1cclxuZnVuY3Rpb24gU2EoYSl7QWEoYSxQYSl9dmFyIFRhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fCF3aW5kb3cuZG9jdW1lbnR8fCF3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7ZnVuY3Rpb24gVWEoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVmE9e2FuaW1hdGlvbmVuZDpVYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpVYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlVhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlVhKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sV2E9e30sWGE9e307XHJcblRhJiYoWGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVmEuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVmEuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVmEuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVmEudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBZYShhKXtpZihXYVthXSlyZXR1cm4gV2FbYV07aWYoIVZhW2FdKXJldHVybiBhO3ZhciBiPVZhW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFhhKXJldHVybiBXYVthXT1iW2NdO3JldHVybiBhfVxyXG52YXIgWmE9WWEoXCJhbmltYXRpb25lbmRcIiksJGE9WWEoXCJhbmltYXRpb25pdGVyYXRpb25cIiksYWI9WWEoXCJhbmltYXRpb25zdGFydFwiKSxiYj1ZYShcInRyYW5zaXRpb25lbmRcIiksY2I9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGRiPW51bGwsZWI9bnVsbCxmYj1udWxsO1xyXG5mdW5jdGlvbiBnYigpe2lmKGZiKXJldHVybiBmYjt2YXIgYSxiPWViLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGRiP2RiLnZhbHVlOmRiLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIGZiPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gaGIoKXtyZXR1cm4hMH1mdW5jdGlvbiBpYigpe3JldHVybiExfVxyXG5mdW5jdGlvbiBBKGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9oYjppYjt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWliO3JldHVybiB0aGlzfVxyXG5wKEEucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9aGIpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9aGIpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9aGJ9LGlzUGVyc2lzdGVudDppYixkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXHJcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWliO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7QS5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XHJcbkEuZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO3AoZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPXAoe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7amIoYyk7cmV0dXJuIGN9O2piKEEpO2Z1bmN0aW9uIGtiKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfWZ1bmN0aW9uIGxiKGEpe2EgaW5zdGFuY2VvZiB0aGlzP3ZvaWQgMDp0KFwiMjc5XCIpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1cclxuZnVuY3Rpb24gamIoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9a2I7YS5yZWxlYXNlPWxifXZhciBtYj1BLmV4dGVuZCh7ZGF0YTpudWxsfSksbmI9QS5leHRlbmQoe2RhdGE6bnVsbH0pLG9iPVs5LDEzLDI3LDMyXSxwYj1UYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3cscWI9bnVsbDtUYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYocWI9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcclxudmFyIHJiPVRhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhcWIsc2I9VGEmJighcGJ8fHFiJiY4PHFiJiYxMT49cWIpLHRiPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLHZiPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxyXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0sd2I9ITE7XHJcbmZ1bmN0aW9uIHhiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09b2IuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiB5YihhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciB6Yj0hMTtmdW5jdGlvbiBBYihhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4geWIoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3diPSEwO3JldHVybiB0YjtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT10YiYmd2I/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxyXG5mdW5jdGlvbiBCYihhLGIpe2lmKHpiKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFwYiYmeGIoYSxiKT8oYT1nYigpLGZiPWViPWRiPW51bGwsemI9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHNiJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cclxudmFyIENiPXtldmVudFR5cGVzOnZiLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dm9pZCAwO3ZhciBmPXZvaWQgMDtpZihwYiliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjplPXZiLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjplPXZiLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6ZT12Yi5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWU9dm9pZCAwfWVsc2UgemI/eGIoYSxjKSYmKGU9dmIuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZT12Yi5jb21wb3NpdGlvblN0YXJ0KTtlPyhzYiYmXCJrb1wiIT09Yy5sb2NhbGUmJih6Ynx8ZSE9PXZiLmNvbXBvc2l0aW9uU3RhcnQ/ZT09PXZiLmNvbXBvc2l0aW9uRW5kJiZ6YiYmKGY9Z2IoKSk6KGRiPWQsZWI9XCJ2YWx1ZVwiaW4gZGI/ZGIudmFsdWU6ZGIudGV4dENvbnRlbnQsemI9XHJcbiEwKSksZT1tYi5nZXRQb29sZWQoZSxiLGMsZCksZj9lLmRhdGE9ZjooZj15YihjKSxudWxsIT09ZiYmKGUuZGF0YT1mKSksU2EoZSksZj1lKTpmPW51bGw7KGE9cmI/QWIoYSxjKTpCYihhLGMpKT8oYj1uYi5nZXRQb29sZWQodmIuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFNhKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1mP2I6bnVsbD09PWI/ZjpbZixiXX19LERiPW51bGwsRWI9bnVsbCxGYj1udWxsO2Z1bmN0aW9uIEdiKGEpe2lmKGE9d2EoYSkpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBEYj90KFwiMjgwXCIpOnZvaWQgMDt2YXIgYj12YShhLnN0YXRlTm9kZSk7RGIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBIYihhKXtFYj9GYj9GYi5wdXNoKGEpOkZiPVthXTpFYj1hfWZ1bmN0aW9uIEliKCl7aWYoRWIpe3ZhciBhPUViLGI9RmI7RmI9RWI9bnVsbDtHYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspR2IoYlthXSl9fVxyXG5mdW5jdGlvbiBKYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEtiKGEsYixjKXtyZXR1cm4gYShiLGMpfWZ1bmN0aW9uIExiKCl7fXZhciBNYj0hMTtmdW5jdGlvbiBOYihhLGIpe2lmKE1iKXJldHVybiBhKGIpO01iPSEwO3RyeXtyZXR1cm4gSmIoYSxiKX1maW5hbGx5e2lmKE1iPSExLG51bGwhPT1FYnx8bnVsbCE9PUZiKUxiKCksSWIoKX19dmFyIE9iPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIFBiKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhT2JbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxyXG5mdW5jdGlvbiBRYihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9ZnVuY3Rpb24gU2IoYSl7aWYoIVRhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifWZ1bmN0aW9uIFRiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XHJcbmZ1bmN0aW9uIFViKGEpe3ZhciBiPVRiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxyXG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYihhKSl9ZnVuY3Rpb24gV2IoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9XHJcbnZhciBYYj1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCxZYj0vXiguKilbXFxcXFxcL10vLEQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixaYj1EP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLCRiPUQ/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixhYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxiYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxjYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxkYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxlYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGZjPUQ/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxnYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixoYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTpcclxuNjAxMTMsaWM9RD9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxqYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LGtjPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBsYyhhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9a2MmJmFba2NdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9XHJcbmZ1bmN0aW9uIG1jKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgZmM6cmV0dXJuXCJDb25jdXJyZW50TW9kZVwiO2Nhc2UgYWM6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgJGI6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIGNjOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIGJjOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgaGM6cmV0dXJuXCJTdXNwZW5zZVwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBlYzpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGRjOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgZ2M6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcclxuXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgaWM6cmV0dXJuIG1jKGEudHlwZSk7Y2FzZSBqYzppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIG1jKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIG5jKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1tYyhhLnR5cGUpO2M9bnVsbDtkJiYoYz1tYyhkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFliLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XHJcbnZhciBvYz0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8scGM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxxYz17fSxyYz17fTtcclxuZnVuY3Rpb24gc2MoYSl7aWYocGMuY2FsbChyYyxhKSlyZXR1cm4hMDtpZihwYy5jYWxsKHFjLGEpKXJldHVybiExO2lmKG9jLnRlc3QoYSkpcmV0dXJuIHJjW2FdPSEwO3FjW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIHRjKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxyXG5mdW5jdGlvbiB1YyhhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHx0YyhhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEYoYSxiLGMsZCxlKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1ifXZhciBHPXt9O1xyXG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0dbYV09bmV3IEYoYSwwLCExLGEsbnVsbCl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07R1tiXT1uZXcgRihiLDEsITEsYVsxXSxudWxsKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0dbYV09bmV3IEYoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1xyXG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7R1thXT1uZXcgRihhLDIsITEsYSxudWxsKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7R1thXT1uZXcgRihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0dbYV09bmV3IEYoYSwzLCEwLGEsbnVsbCl9KTtcclxuW1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtHW2FdPW5ldyBGKGEsNCwhMSxhLG51bGwpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0dbYV09bmV3IEYoYSw2LCExLGEsbnVsbCl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0dbYV09bmV3IEYoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO3ZhciB2Yz0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHdjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XHJcblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UodmMsXHJcbndjKTtHW2JdPW5ldyBGKGIsMSwhMSxhLG51bGwpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6aHJlZiB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2Yyx3Yyk7R1tiXT1uZXcgRihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIil9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2Yyx3Yyk7R1tiXT1uZXcgRihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiKX0pO0cudGFiSW5kZXg9bmV3IEYoXCJ0YWJJbmRleFwiLDEsITEsXCJ0YWJpbmRleFwiLG51bGwpO1xyXG5mdW5jdGlvbiB4YyhhLGIsYyxkKXt2YXIgZT1HLmhhc093blByb3BlcnR5KGIpP0dbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fCh1YyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/c2MoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cclxuZnVuY3Rpb24geWMoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIHpjKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBwKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1cclxuZnVuY3Rpb24gQWMoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9eWMobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBCYyhhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnhjKGEsXCJjaGVja2VkXCIsYiwhMSl9XHJcbmZ1bmN0aW9uIENjKGEsYil7QmMoYSxiKTt2YXIgYz15YyhiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9EYyhhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZEYyhhLGIudHlwZSx5YyhiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cclxuZnVuY3Rpb24gRWMoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxyXG5mdW5jdGlvbiBEYyhhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9dmFyIEZjPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIEdjKGEsYixjKXthPUEuZ2V0UG9vbGVkKEZjLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7SGIoYyk7U2EoYSk7cmV0dXJuIGF9dmFyIEhjPW51bGwsSWM9bnVsbDtmdW5jdGlvbiBKYyhhKXtGYShhKX1cclxuZnVuY3Rpb24gS2MoYSl7dmFyIGI9TGEoYSk7aWYoV2IoYikpcmV0dXJuIGF9ZnVuY3Rpb24gTGMoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgTWM9ITE7VGEmJihNYz1TYihcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtmdW5jdGlvbiBOYygpe0hjJiYoSGMuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsT2MpLEljPUhjPW51bGwpfWZ1bmN0aW9uIE9jKGEpe1widmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZLYyhJYykmJihhPUdjKEljLGEsUWIoYSkpLE5iKEpjLGEpKX1mdW5jdGlvbiBQYyhhLGIsYyl7XCJmb2N1c1wiPT09YT8oTmMoKSxIYz1iLEljPWMsSGMuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsT2MpKTpcImJsdXJcIj09PWEmJk5jKCl9ZnVuY3Rpb24gUWMoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gS2MoSWMpfVxyXG5mdW5jdGlvbiBSYyhhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIEtjKGIpfWZ1bmN0aW9uIFNjKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIEtjKGIpfVxyXG52YXIgVGM9e2V2ZW50VHlwZXM6RmMsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpNYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/TGEoYik6d2luZG93LGY9dm9pZCAwLGc9dm9pZCAwLGg9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1wic2VsZWN0XCI9PT1ofHxcImlucHV0XCI9PT1oJiZcImZpbGVcIj09PWUudHlwZT9mPUxjOlBiKGUpP01jP2Y9U2M6KGY9UWMsZz1QYyk6KGg9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWgudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGY9UmMpO2lmKGYmJihmPWYoYSxiKSkpcmV0dXJuIEdjKGYsYyxkKTtnJiZnKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmRGMoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sVWM9QS5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLFZjPXtBbHQ6XCJhbHRLZXlcIixcclxuQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gV2MoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1WY1thXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFhjKCl7cmV0dXJuIFdjfVxyXG52YXIgWWM9MCxaYz0wLCRjPSExLGFkPSExLGJkPVVjLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpYYyxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WDt2YXIgYj1ZYztZYz1hLnNjcmVlblg7cmV0dXJuICRjP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5YLWI6MDooJGM9ITAsMCl9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WVwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFk7XHJcbnZhciBiPVpjO1pjPWEuc2NyZWVuWTtyZXR1cm4gYWQ/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihhZD0hMCwwKX19KSxjZD1iZC5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksZGQ9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixcclxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sZWQ9e2V2ZW50VHlwZXM6ZGQsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxmPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihlJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWYmJiFlKXJldHVybiBudWxsO2U9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7Zj8oZj1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/SmEoYik6bnVsbCk6Zj1udWxsO2lmKGY9PT1iKXJldHVybiBudWxsO3ZhciBnPXZvaWQgMCxoPXZvaWQgMCxsPXZvaWQgMCxrPXZvaWQgMDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09YSlnPWJkLGg9ZGQubW91c2VMZWF2ZSxsPWRkLm1vdXNlRW50ZXIsaz1cIm1vdXNlXCI7XHJcbmVsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWc9Y2QsaD1kZC5wb2ludGVyTGVhdmUsbD1kZC5wb2ludGVyRW50ZXIsaz1cInBvaW50ZXJcIjt2YXIgbT1udWxsPT1mP2U6TGEoZik7ZT1udWxsPT1iP2U6TGEoYik7YT1nLmdldFBvb2xlZChoLGYsYyxkKTthLnR5cGU9aytcImxlYXZlXCI7YS50YXJnZXQ9bTthLnJlbGF0ZWRUYXJnZXQ9ZTtjPWcuZ2V0UG9vbGVkKGwsYixjLGQpO2MudHlwZT1rK1wiZW50ZXJcIjtjLnRhcmdldD1lO2MucmVsYXRlZFRhcmdldD1tO2Q9YjtpZihmJiZkKWE6e2I9ZjtlPWQ7az0wO2ZvcihnPWI7ZztnPU5hKGcpKWsrKztnPTA7Zm9yKGw9ZTtsO2w9TmEobCkpZysrO2Zvcig7MDxrLWc7KWI9TmEoYiksay0tO2Zvcig7MDxnLWs7KWU9TmEoZSksZy0tO2Zvcig7ay0tOyl7aWYoYj09PWV8fGI9PT1lLmFsdGVybmF0ZSlicmVhayBhO2I9TmEoYik7ZT1OYShlKX1iPW51bGx9ZWxzZSBiPW51bGw7ZT1iO2ZvcihiPVtdO2YmJmYhPT1lOyl7az1cclxuZi5hbHRlcm5hdGU7aWYobnVsbCE9PWsmJms9PT1lKWJyZWFrO2IucHVzaChmKTtmPU5hKGYpfWZvcihmPVtdO2QmJmQhPT1lOyl7az1kLmFsdGVybmF0ZTtpZihudWxsIT09ayYmaz09PWUpYnJlYWs7Zi5wdXNoKGQpO2Q9TmEoZCl9Zm9yKGQ9MDtkPGIubGVuZ3RoO2QrKylRYShiW2RdLFwiYnViYmxlZFwiLGEpO2ZvcihkPWYubGVuZ3RoOzA8ZC0tOylRYShmW2RdLFwiY2FwdHVyZWRcIixjKTtyZXR1cm5bYSxjXX19O2Z1bmN0aW9uIGZkKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgZ2Q9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcclxuZnVuY3Rpb24gaGQoYSxiKXtpZihmZChhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWdkLmNhbGwoYixjW2RdKXx8IWZkKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24ga2QoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2IucmV0dXJuOylpZihiPWIucmV0dXJuLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gbGQoYSl7MiE9PWtkKGEpP3QoXCIxODhcIik6dm9pZCAwfVxyXG5mdW5jdGlvbiBtZChhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYilyZXR1cm4gYj1rZChhKSwzPT09Yj90KFwiMTg4XCIpOnZvaWQgMCwxPT09Yj9udWxsOmE7Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuLGY9ZT9lLmFsdGVybmF0ZTpudWxsO2lmKCFlfHwhZilicmVhaztpZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKHZhciBnPWUuY2hpbGQ7Zzspe2lmKGc9PT1jKXJldHVybiBsZChlKSxhO2lmKGc9PT1kKXJldHVybiBsZChlKSxiO2c9Zy5zaWJsaW5nfXQoXCIxODhcIil9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zz0hMTtmb3IodmFyIGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9Zz9cclxudm9pZCAwOnQoXCIxODlcIil9fWMuYWx0ZXJuYXRlIT09ZD90KFwiMTkwXCIpOnZvaWQgMH0zIT09Yy50YWc/dChcIjE4OFwiKTp2b2lkIDA7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBuZChhKXthPW1kKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxyXG52YXIgb2Q9QS5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHBkPUEuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSkscWQ9VWMuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiByZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cclxudmFyIHNkPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSx0ZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcclxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSx1ZD1VYy5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9c2RbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9cmQoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP3RkW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpYYyxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cclxuYS50eXBlP3JkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP3JkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksdmQ9YmQuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHdkPVVjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlhjfSkseGQ9QS5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSkseWQ9YmQuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cclxuYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHpkPVtbXCJhYm9ydFwiLFwiYWJvcnRcIl0sW1phLFwiYW5pbWF0aW9uRW5kXCJdLFskYSxcImFuaW1hdGlvbkl0ZXJhdGlvblwiXSxbYWIsXCJhbmltYXRpb25TdGFydFwiXSxbXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCJdLFtcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiXSxbXCJkcmFnXCIsXCJkcmFnXCJdLFtcImRyYWdlbnRlclwiLFwiZHJhZ0VudGVyXCJdLFtcImRyYWdleGl0XCIsXCJkcmFnRXhpdFwiXSxbXCJkcmFnbGVhdmVcIixcImRyYWdMZWF2ZVwiXSxbXCJkcmFnb3ZlclwiLFwiZHJhZ092ZXJcIl0sW1wiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCJdLFtcImVtcHRpZWRcIixcImVtcHRpZWRcIl0sW1wiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIl0sXHJcbltcImVuZGVkXCIsXCJlbmRlZFwiXSxbXCJlcnJvclwiLFwiZXJyb3JcIl0sW1wiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCJdLFtcImxvYWRcIixcImxvYWRcIl0sW1wibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiXSxbXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIl0sW1wibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIl0sW1wibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIl0sW1wibW91c2Vtb3ZlXCIsXCJtb3VzZU1vdmVcIl0sW1wibW91c2VvdXRcIixcIm1vdXNlT3V0XCJdLFtcIm1vdXNlb3ZlclwiLFwibW91c2VPdmVyXCJdLFtcInBsYXlpbmdcIixcInBsYXlpbmdcIl0sW1wicG9pbnRlcm1vdmVcIixcInBvaW50ZXJNb3ZlXCJdLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJPdXRcIl0sW1wicG9pbnRlcm92ZXJcIixcInBvaW50ZXJPdmVyXCJdLFtcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiXSxbXCJzY3JvbGxcIixcInNjcm9sbFwiXSxbXCJzZWVraW5nXCIsXCJzZWVraW5nXCJdLFtcInN0YWxsZWRcIixcInN0YWxsZWRcIl0sXHJcbltcInN1c3BlbmRcIixcInN1c3BlbmRcIl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiXSxbYmIsXCJ0cmFuc2l0aW9uRW5kXCJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIl0sW1wid2hlZWxcIixcIndoZWVsXCJdXSxBZD17fSxCZD17fTtmdW5jdGlvbiBDZChhLGIpe3ZhciBjPWFbMF07YT1hWzFdO3ZhciBkPVwib25cIisoYVswXS50b1VwcGVyQ2FzZSgpK2Euc2xpY2UoMSkpO2I9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmQsY2FwdHVyZWQ6ZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltjXSxpc0ludGVyYWN0aXZlOmJ9O0FkW2FdPWI7QmRbY109Yn1cclxuW1tcImJsdXJcIixcImJsdXJcIl0sW1wiY2FuY2VsXCIsXCJjYW5jZWxcIl0sW1wiY2xpY2tcIixcImNsaWNrXCJdLFtcImNsb3NlXCIsXCJjbG9zZVwiXSxbXCJjb250ZXh0bWVudVwiLFwiY29udGV4dE1lbnVcIl0sW1wiY29weVwiLFwiY29weVwiXSxbXCJjdXRcIixcImN1dFwiXSxbXCJhdXhjbGlja1wiLFwiYXV4Q2xpY2tcIl0sW1wiZGJsY2xpY2tcIixcImRvdWJsZUNsaWNrXCJdLFtcImRyYWdlbmRcIixcImRyYWdFbmRcIl0sW1wiZHJhZ3N0YXJ0XCIsXCJkcmFnU3RhcnRcIl0sW1wiZHJvcFwiLFwiZHJvcFwiXSxbXCJmb2N1c1wiLFwiZm9jdXNcIl0sW1wiaW5wdXRcIixcImlucHV0XCJdLFtcImludmFsaWRcIixcImludmFsaWRcIl0sW1wia2V5ZG93blwiLFwia2V5RG93blwiXSxbXCJrZXlwcmVzc1wiLFwia2V5UHJlc3NcIl0sW1wia2V5dXBcIixcImtleVVwXCJdLFtcIm1vdXNlZG93blwiLFwibW91c2VEb3duXCJdLFtcIm1vdXNldXBcIixcIm1vdXNlVXBcIl0sW1wicGFzdGVcIixcInBhc3RlXCJdLFtcInBhdXNlXCIsXCJwYXVzZVwiXSxbXCJwbGF5XCIsXCJwbGF5XCJdLFtcInBvaW50ZXJjYW5jZWxcIixcInBvaW50ZXJDYW5jZWxcIl0sXHJcbltcInBvaW50ZXJkb3duXCIsXCJwb2ludGVyRG93blwiXSxbXCJwb2ludGVydXBcIixcInBvaW50ZXJVcFwiXSxbXCJyYXRlY2hhbmdlXCIsXCJyYXRlQ2hhbmdlXCJdLFtcInJlc2V0XCIsXCJyZXNldFwiXSxbXCJzZWVrZWRcIixcInNlZWtlZFwiXSxbXCJzdWJtaXRcIixcInN1Ym1pdFwiXSxbXCJ0b3VjaGNhbmNlbFwiLFwidG91Y2hDYW5jZWxcIl0sW1widG91Y2hlbmRcIixcInRvdWNoRW5kXCJdLFtcInRvdWNoc3RhcnRcIixcInRvdWNoU3RhcnRcIl0sW1widm9sdW1lY2hhbmdlXCIsXCJ2b2x1bWVDaGFuZ2VcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7Q2QoYSwhMCl9KTt6ZC5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NkKGEsITEpfSk7XHJcbnZhciBEZD17ZXZlbnRUeXBlczpBZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT1CZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9QmRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1yZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9dWQ7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPXFkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9YmQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cclxudmQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT13ZDticmVhaztjYXNlIFphOmNhc2UgJGE6Y2FzZSBhYjphPW9kO2JyZWFrO2Nhc2UgYmI6YT14ZDticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1VYzticmVhaztjYXNlIFwid2hlZWxcIjphPXlkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9cGQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1jZDticmVhaztkZWZhdWx0OmE9QX1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1NhKGIpO3JldHVybiBifX0sRWQ9RGQuaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlLFxyXG5GZD1bXTtmdW5jdGlvbiBHZChhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkO2ZvcihkPWM7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKCFkKWJyZWFrO2EuYW5jZXN0b3JzLnB1c2goYyk7Yz1KYShkKX13aGlsZShjKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyl7Yj1hLmFuY2VzdG9yc1tjXTt2YXIgZT1RYihhLm5hdGl2ZUV2ZW50KTtkPWEudG9wTGV2ZWxUeXBlO2Zvcih2YXIgZj1hLm5hdGl2ZUV2ZW50LGc9bnVsbCxoPTA7aDxwYS5sZW5ndGg7aCsrKXt2YXIgbD1wYVtoXTtsJiYobD1sLmV4dHJhY3RFdmVudHMoZCxiLGYsZSkpJiYoZz16YShnLGwpKX1GYShnKX19dmFyIEhkPSEwO1xyXG5mdW5jdGlvbiBIKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KEVkKGEpP0lkOkpkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMSl9ZnVuY3Rpb24gS2QoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oRWQoYSk/SWQ6SmQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBJZChhLGIpe0tiKEpkLGEsYil9XHJcbmZ1bmN0aW9uIEpkKGEsYil7aWYoSGQpe3ZhciBjPVFiKGIpO2M9SmEoYyk7bnVsbD09PWN8fFwibnVtYmVyXCIhPT10eXBlb2YgYy50YWd8fDI9PT1rZChjKXx8KGM9bnVsbCk7aWYoRmQubGVuZ3RoKXt2YXIgZD1GZC5wb3AoKTtkLnRvcExldmVsVHlwZT1hO2QubmF0aXZlRXZlbnQ9YjtkLnRhcmdldEluc3Q9YzthPWR9ZWxzZSBhPXt0b3BMZXZlbFR5cGU6YSxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119O3RyeXtOYihHZCxhKX1maW5hbGx5e2EudG9wTGV2ZWxUeXBlPW51bGwsYS5uYXRpdmVFdmVudD1udWxsLGEudGFyZ2V0SW5zdD1udWxsLGEuYW5jZXN0b3JzLmxlbmd0aD0wLDEwPkZkLmxlbmd0aCYmRmQucHVzaChhKX19fXZhciBMZD17fSxNZD0wLE5kPVwiX3JlYWN0TGlzdGVuZXJzSURcIisoXCJcIitNYXRoLnJhbmRvbSgpKS5zbGljZSgyKTtcclxuZnVuY3Rpb24gT2QoYSl7T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsTmQpfHwoYVtOZF09TWQrKyxMZFthW05kXV09e30pO3JldHVybiBMZFthW05kXV19ZnVuY3Rpb24gUGQoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIFFkKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cclxuZnVuY3Rpb24gUmQoYSxiKXt2YXIgYz1RZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1RZChjKX19ZnVuY3Rpb24gU2QoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9TZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XHJcbmZ1bmN0aW9uIFRkKCl7Zm9yKHZhciBhPXdpbmRvdyxiPVBkKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7YT1iLmNvbnRlbnREb2N1bWVudC5kZWZhdWx0Vmlld31jYXRjaChjKXticmVha31iPVBkKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIFVkKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XHJcbnZhciBWZD1UYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFdkPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxYZD1udWxsLFlkPW51bGwsWmQ9bnVsbCwkZD0hMTtcclxuZnVuY3Rpb24gYWUoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZigkZHx8bnVsbD09WGR8fFhkIT09UGQoYykpcmV0dXJuIG51bGw7Yz1YZDtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZVZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiBaZCYmaGQoWmQsYyk/bnVsbDooWmQ9YyxhPUEuZ2V0UG9vbGVkKFdkLnNlbGVjdCxZZCxhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PVhkLFNhKGEpLGEpfVxyXG52YXIgYmU9e2V2ZW50VHlwZXM6V2QsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1kLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCxmO2lmKCEoZj0hZSkpe2E6e2U9T2QoZSk7Zj11YS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKyl7dmFyIGg9ZltnXTtpZighZS5oYXNPd25Qcm9wZXJ0eShoKXx8IWVbaF0pe2U9ITE7YnJlYWsgYX19ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP0xhKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoUGIoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpWGQ9ZSxZZD1iLFpkPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpaZD1ZZD1YZD1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjokZD0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6cmV0dXJuICRkPSExLGFlKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFZkKWJyZWFrO1xyXG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBhZShjLGQpfXJldHVybiBudWxsfX07RGEuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTt2YT1NYTt3YT1LYTt4YT1MYTtEYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOkRkLEVudGVyTGVhdmVFdmVudFBsdWdpbjplZCxDaGFuZ2VFdmVudFBsdWdpbjpUYyxTZWxlY3RFdmVudFBsdWdpbjpiZSxCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOkNifSk7ZnVuY3Rpb24gY2UoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9XHJcbmZ1bmN0aW9uIGRlKGEsYil7YT1wKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9Y2UoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfWZ1bmN0aW9uIGVlKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIit5YyhjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxyXG5mdW5jdGlvbiBmZShhLGIpe251bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dChcIjkxXCIpOnZvaWQgMDtyZXR1cm4gcCh7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBnZShhLGIpe3ZhciBjPWIudmFsdWU7bnVsbD09YyYmKGM9Yi5kZWZhdWx0VmFsdWUsYj1iLmNoaWxkcmVuLG51bGwhPWImJihudWxsIT1jP3QoXCI5MlwiKTp2b2lkIDAsQXJyYXkuaXNBcnJheShiKSYmKDE+PWIubGVuZ3RoP3ZvaWQgMDp0KFwiOTNcIiksYj1iWzBdKSxjPWIpLG51bGw9PWMmJihjPVwiXCIpKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTp5YyhjKX19XHJcbmZ1bmN0aW9uIGhlKGEsYil7dmFyIGM9eWMoYi52YWx1ZSksZD15YyhiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGllKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBqZT17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XHJcbmZ1bmN0aW9uIGtlKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gbGUoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2tlKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxyXG52YXIgbWU9dm9pZCAwLG5lPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PWplLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle21lPW1lfHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO21lLmlubmVySFRNTD1cIjxzdmc+XCIrYitcIjwvc3ZnPlwiO2ZvcihiPW1lLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcclxuZnVuY3Rpb24gb2UoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cclxudmFyIHBlPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcclxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scWU9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHBlKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3FlLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cGVbYl09cGVbYV19KX0pO2Z1bmN0aW9uIHJlKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxwZS5oYXNPd25Qcm9wZXJ0eShhKSYmcGVbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxyXG5mdW5jdGlvbiBzZShhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1yZShjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciB0ZT1wKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xyXG5mdW5jdGlvbiB1ZShhLGIpe2ImJih0ZVthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dChcIjEzN1wiLGEsXCJcIik6dm9pZCAwKSxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiYobnVsbCE9Yi5jaGlsZHJlbj90KFwiNjBcIik6dm9pZCAwLFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dm9pZCAwOnQoXCI2MVwiKSksbnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlP3QoXCI2MlwiLFwiXCIpOnZvaWQgMCl9XHJcbmZ1bmN0aW9uIHZlKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1cclxuZnVuY3Rpb24gd2UoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9T2QoYSk7Yj11YVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtpZighYy5oYXNPd25Qcm9wZXJ0eShlKXx8IWNbZV0pe3N3aXRjaChlKXtjYXNlIFwic2Nyb2xsXCI6S2QoXCJzY3JvbGxcIixhKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOktkKFwiZm9jdXNcIixhKTtLZChcImJsdXJcIixhKTtjLmJsdXI9ITA7Yy5mb2N1cz0hMDticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6U2IoZSkmJktkKGUsYSk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWNiLmluZGV4T2YoZSkmJkgoZSxhKX1jW2VdPSEwfX19ZnVuY3Rpb24geGUoKXt9dmFyIHllPW51bGwsemU9bnVsbDtcclxuZnVuY3Rpb24gQWUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfWZ1bmN0aW9uIEJlKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH1cclxudmFyIENlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLERlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxFZT1iYS51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLEZlPWJhLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrO1xyXG5mdW5jdGlvbiBHZShhLGIsYyxkLGUpe2FbSWFdPWU7XCJpbnB1dFwiPT09YyYmXCJyYWRpb1wiPT09ZS50eXBlJiZudWxsIT1lLm5hbWUmJkJjKGEsZSk7dmUoYyxkKTtkPXZlKGMsZSk7Zm9yKHZhciBmPTA7ZjxiLmxlbmd0aDtmKz0yKXt2YXIgZz1iW2ZdLGg9YltmKzFdO1wic3R5bGVcIj09PWc/c2UoYSxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP25lKGEsaCk6XCJjaGlsZHJlblwiPT09Zz9vZShhLGgpOnhjKGEsZyxoLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpDYyhhLGUpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhlKGEsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9YS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWUubXVsdGlwbGUsYz1lLnZhbHVlLG51bGwhPWM/ZWUoYSwhIWUubXVsdGlwbGUsYywhMSk6YiE9PSEhZS5tdWx0aXBsZSYmKG51bGwhPWUuZGVmYXVsdFZhbHVlP2VlKGEsISFlLm11bHRpcGxlLGUuZGVmYXVsdFZhbHVlLFxyXG4hMCk6ZWUoYSwhIWUubXVsdGlwbGUsZS5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fWZ1bmN0aW9uIEhlKGEpe2ZvcihhPWEubmV4dFNpYmxpbmc7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gSWUoYSl7Zm9yKGE9YS5maXJzdENoaWxkO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfW5ldyBTZXQ7dmFyIEplPVtdLEtlPS0xO2Z1bmN0aW9uIEkoYSl7MD5LZXx8KGEuY3VycmVudD1KZVtLZV0sSmVbS2VdPW51bGwsS2UtLSl9ZnVuY3Rpb24gSihhLGIpe0tlKys7SmVbS2VdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgTGU9e30sSz17Y3VycmVudDpMZX0sTD17Y3VycmVudDohMX0sTWU9TGU7XHJcbmZ1bmN0aW9uIE9lKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gTGU7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gTShhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIFBlKGEpe0koTCxhKTtJKEssYSl9ZnVuY3Rpb24gUWUoYSl7SShMLGEpO0koSyxhKX1cclxuZnVuY3Rpb24gUmUoYSxiLGMpe0suY3VycmVudCE9PUxlP3QoXCIxNjhcIik6dm9pZCAwO0ooSyxiLGEpO0ooTCxjLGEpfWZ1bmN0aW9uIFNlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZCllIGluIGE/dm9pZCAwOnQoXCIxMDhcIixtYyhiKXx8XCJVbmtub3duXCIsZSk7cmV0dXJuIHAoe30sYyxkKX1mdW5jdGlvbiBUZShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fExlO01lPUsuY3VycmVudDtKKEssYixhKTtKKEwsTC5jdXJyZW50LGEpO3JldHVybiEwfVxyXG5mdW5jdGlvbiBVZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7ZD92b2lkIDA6dChcIjE2OVwiKTtjPyhiPVNlKGEsYixNZSksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1iLEkoTCxhKSxJKEssYSksSihLLGIsYSkpOkkoTCxhKTtKKEwsYyxhKX12YXIgVmU9bnVsbCxXZT1udWxsO2Z1bmN0aW9uIFhlKGEpe3JldHVybiBmdW5jdGlvbihiKXt0cnl7cmV0dXJuIGEoYil9Y2F0Y2goYyl7fX19XHJcbmZ1bmN0aW9uIFllKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1ZlPVhlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJSb290KGMsYSl9KTtXZT1YZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfSl9Y2F0Y2goZCl7fXJldHVybiEwfVxyXG5mdW5jdGlvbiBaZShhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuY29udGV4dERlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBOKGEsYixjLGQpe3JldHVybiBuZXcgWmUoYSxiLGMsZCl9XHJcbmZ1bmN0aW9uICRlKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9ZnVuY3Rpb24gYWYoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuICRlKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1nYylyZXR1cm4gMTE7aWYoYT09PWljKXJldHVybiAxNH1yZXR1cm4gMn1cclxuZnVuY3Rpb24gYmYoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1OKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtjLmNvbnRleHREZXBlbmRlbmNpZXM9YS5jb250ZXh0RGVwZW5kZW5jaWVzO2Muc2libGluZz1hLnNpYmxpbmc7XHJcbmMuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cclxuZnVuY3Rpb24gY2YoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKSRlKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIGFjOnJldHVybiBkZihjLmNoaWxkcmVuLGUsZixiKTtjYXNlIGZjOnJldHVybiBlZihjLGV8MyxmLGIpO2Nhc2UgYmM6cmV0dXJuIGVmKGMsZXwyLGYsYik7Y2FzZSBjYzpyZXR1cm4gYT1OKDEyLGMsYixlfDQpLGEuZWxlbWVudFR5cGU9Y2MsYS50eXBlPWNjLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaGM6cmV0dXJuIGE9TigxMyxjLGIsZSksYS5lbGVtZW50VHlwZT1oYyxhLnR5cGU9aGMsYS5leHBpcmF0aW9uVGltZT1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGRjOmc9MTA7YnJlYWsgYTtjYXNlIGVjOmc9OTticmVhayBhO2Nhc2UgZ2M6Zz0xMTticmVhayBhO2Nhc2UgaWM6Zz1cclxuMTQ7YnJlYWsgYTtjYXNlIGpjOmc9MTY7ZD1udWxsO2JyZWFrIGF9dChcIjEzMFwiLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKX1iPU4oZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBkZihhLGIsYyxkKXthPU4oNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGVmKGEsYixjLGQpe2E9Tig4LGEsZCxiKTtiPTA9PT0oYiYxKT9iYzpmYzthLmVsZW1lbnRUeXBlPWI7YS50eXBlPWI7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGZmKGEsYixjKXthPU4oNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxyXG5mdW5jdGlvbiBnZihhLGIsYyl7Yj1OKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifWZ1bmN0aW9uIGhmKGEsYil7YS5kaWRFcnJvcj0hMTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7MD09PWM/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9YjpjPGI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWI6YS5sYXRlc3RQZW5kaW5nVGltZT5iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1iKTtqZihiLGEpfVxyXG5mdW5jdGlvbiBrZihhLGIpe2EuZGlkRXJyb3I9ITE7YS5sYXRlc3RQaW5nZWRUaW1lPj1iJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApO3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZSxkPWEubGF0ZXN0UGVuZGluZ1RpbWU7Yz09PWI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWQ9PT1iP2EubGF0ZXN0UGVuZGluZ1RpbWU9MDpkOmQ9PT1iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1jKTtjPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lO2Q9YS5sYXRlc3RTdXNwZW5kZWRUaW1lOzA9PT1jP2EuZWFybGllc3RTdXNwZW5kZWRUaW1lPWEubGF0ZXN0U3VzcGVuZGVkVGltZT1iOmM8Yj9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1iOmQ+YiYmKGEubGF0ZXN0U3VzcGVuZGVkVGltZT1iKTtqZihiLGEpfWZ1bmN0aW9uIGxmKGEsYil7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lO2E9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7Yz5iJiYoYj1jKTthPmImJihiPWEpO3JldHVybiBifVxyXG5mdW5jdGlvbiBqZihhLGIpe3ZhciBjPWIuZWFybGllc3RTdXNwZW5kZWRUaW1lLGQ9Yi5sYXRlc3RTdXNwZW5kZWRUaW1lLGU9Yi5lYXJsaWVzdFBlbmRpbmdUaW1lLGY9Yi5sYXRlc3RQaW5nZWRUaW1lO2U9MCE9PWU/ZTpmOzA9PT1lJiYoMD09PWF8fGQ8YSkmJihlPWQpO2E9ZTswIT09YSYmYz5hJiYoYT1jKTtiLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWU7Yi5leHBpcmF0aW9uVGltZT1hfWZ1bmN0aW9uIFAoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1wKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9XHJcbmZ1bmN0aW9uIG1mKGEpe3ZhciBiPWEuX3Jlc3VsdDtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGI7Y2FzZSAyOnRocm93IGI7Y2FzZSAwOnRocm93IGI7ZGVmYXVsdDphLl9zdGF0dXM9MDtiPWEuX2N0b3I7Yj1iKCk7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KTtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGEuX3Jlc3VsdDtjYXNlIDI6dGhyb3cgYS5fcmVzdWx0O31hLl9yZXN1bHQ9Yjt0aHJvdyBiO319dmFyIG5mPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xyXG5mdW5jdGlvbiBvZihhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6cCh7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jO2Q9YS51cGRhdGVRdWV1ZTtudWxsIT09ZCYmMD09PWEuZXhwaXJhdGlvblRpbWUmJihkLmJhc2VTdGF0ZT1jKX1cclxudmFyIHhmPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT8yPT09a2QoYSk6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9cGYoKTtkPXFmKGQsYSk7dmFyIGU9cmYoZCk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO3NmKCk7dGYoYSxlKTt1ZihhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1wZigpO2Q9cWYoZCxhKTt2YXIgZT1yZihkKTtlLnRhZz12ZjtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7c2YoKTt0ZihhLGUpO3VmKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPXBmKCk7Yz1xZihjLGEpO3ZhciBkPXJmKGMpO2QudGFnPVxyXG53Zjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7c2YoKTt0ZihhLGQpO3VmKGEsYyl9fTtmdW5jdGlvbiB5ZihhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFoZChjLGQpfHwhaGQoZSxmKTohMH1cclxuZnVuY3Rpb24gemYoYSxiLGMpe3ZhciBkPSExLGU9TGU7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9QWYoZik6KGU9TShiKT9NZTpLLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9PZShhLGUpOkxlKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9eGY7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxyXG5mdW5jdGlvbiBCZihhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmeGYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XHJcbmZ1bmN0aW9uIENmKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9bmY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1BZihmKTooZj1NKGIpP01lOksuY3VycmVudCxlLmNvbnRleHQ9T2UoYSxmKSk7Zj1hLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoRGYoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKG9mKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT1cclxudHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHwoYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmeGYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksZj1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1mJiYoRGYoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSkpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciBFZj1BcnJheS5pc0FycmF5O1xyXG5mdW5jdGlvbiBGZihhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7dmFyIGQ9dm9pZCAwO2MmJigxIT09Yy50YWc/dChcIjMwOVwiKTp2b2lkIDAsZD1jLnN0YXRlTm9kZSk7ZD92b2lkIDA6dChcIjE0N1wiLGEpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09bmYmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1cInN0cmluZ1wiIT09dHlwZW9mIGE/dChcIjI4NFwiKTp2b2lkIDA7Yy5fb3duZXI/dm9pZCAwOnQoXCIyOTBcIixhKX1yZXR1cm4gYX1cclxuZnVuY3Rpb24gR2YoYSxiKXtcInRleHRhcmVhXCIhPT1hLnR5cGUmJnQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKX1cclxuZnVuY3Rpb24gSGYoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIsYyl7YT1iZihhLGIsYyk7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cclxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9ZmYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPUZmKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1jZihjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1GZihhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XHJcbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9Z2YoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9ZGYoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPWZmKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFpiOnJldHVybiBjPWNmKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPUZmKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSAkYjpyZXR1cm4gYj1nZihiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoRWYoYil8fFxyXG5sYyhiKSlyZXR1cm4gYj1kZihiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtHZihhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHgoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgWmI6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1hYz9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6bChhLGIsYyxkKTpudWxsO2Nhc2UgJGI6cmV0dXJuIGMua2V5PT09ZT9rKGEsYixjLGQpOm51bGx9aWYoRWYoYyl8fGxjKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtHZihhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIEMoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1cclxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFpiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1hYz9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmwoYixhLGQsZSk7Y2FzZSAkYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsayhiLGEsZCxlKX1pZihFZihkKXx8bGMoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO0dmKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdyhlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxtPW51bGwsbj1nLHU9Zz0wLHI9bnVsbDtudWxsIT09biYmdTxoLmxlbmd0aDt1Kyspe24uaW5kZXg+dT8ocj1uLG49bnVsbCk6cj1uLnNpYmxpbmc7dmFyIHY9eChlLG4saFt1XSxrKTtpZihudWxsPT09dil7bnVsbD09PW4mJihuPXIpO2JyZWFrfWEmJlxyXG5uJiZudWxsPT09di5hbHRlcm5hdGUmJmIoZSxuKTtnPWYodixnLHUpO251bGw9PT1tP2w9djptLnNpYmxpbmc9djttPXY7bj1yfWlmKHU9PT1oLmxlbmd0aClyZXR1cm4gYyhlLG4pLGw7aWYobnVsbD09PW4pe2Zvcig7dTxoLmxlbmd0aDt1KyspaWYobj1xKGUsaFt1XSxrKSlnPWYobixnLHUpLG51bGw9PT1tP2w9bjptLnNpYmxpbmc9bixtPW47cmV0dXJuIGx9Zm9yKG49ZChlLG4pO3U8aC5sZW5ndGg7dSsrKWlmKHI9QyhuLGUsdSxoW3VdLGspKWEmJm51bGwhPT1yLmFsdGVybmF0ZSYmbi5kZWxldGUobnVsbD09PXIua2V5P3U6ci5rZXkpLGc9ZihyLGcsdSksbnVsbD09PW0/bD1yOm0uc2libGluZz1yLG09cjthJiZuLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIEUoZSxnLGgsayl7dmFyIGw9bGMoaCk7XCJmdW5jdGlvblwiIT09dHlwZW9mIGw/dChcIjE1MFwiKTp2b2lkIDA7aD1sLmNhbGwoaCk7bnVsbD09aD90KFwiMTUxXCIpOnZvaWQgMDtcclxuZm9yKHZhciBtPWw9bnVsbCxuPWcsdT1nPTAscj1udWxsLHY9aC5uZXh0KCk7bnVsbCE9PW4mJiF2LmRvbmU7dSsrLHY9aC5uZXh0KCkpe24uaW5kZXg+dT8ocj1uLG49bnVsbCk6cj1uLnNpYmxpbmc7dmFyIHo9eChlLG4sdi52YWx1ZSxrKTtpZihudWxsPT09eil7bnx8KG49cik7YnJlYWt9YSYmbiYmbnVsbD09PXouYWx0ZXJuYXRlJiZiKGUsbik7Zz1mKHosZyx1KTtudWxsPT09bT9sPXo6bS5zaWJsaW5nPXo7bT16O249cn1pZih2LmRvbmUpcmV0dXJuIGMoZSxuKSxsO2lmKG51bGw9PT1uKXtmb3IoOyF2LmRvbmU7dSsrLHY9aC5uZXh0KCkpdj1xKGUsdi52YWx1ZSxrKSxudWxsIT09diYmKGc9Zih2LGcsdSksbnVsbD09PW0/bD12Om0uc2libGluZz12LG09dik7cmV0dXJuIGx9Zm9yKG49ZChlLG4pOyF2LmRvbmU7dSsrLHY9aC5uZXh0KCkpdj1DKG4sZSx1LHYudmFsdWUsayksbnVsbCE9PXYmJihhJiZudWxsIT09di5hbHRlcm5hdGUmJm4uZGVsZXRlKG51bGw9PT12LmtleT91OlxyXG52LmtleSksZz1mKHYsZyx1KSxudWxsPT09bT9sPXY6bS5zaWJsaW5nPXYsbT12KTthJiZuLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1hYyYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBaYjphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpaWYoNz09PWsudGFnP2YudHlwZT09PWFjOmsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYudHlwZT09PWFjP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj1GZihhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPVxyXG5rLnNpYmxpbmd9Zi50eXBlPT09YWM/KGQ9ZGYoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPWNmKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPUZmKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSAkYjphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPWdmKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVxyXG5cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZixoKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPWZmKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKEVmKGYpKXJldHVybiB3KGEsZCxmLGgpO2lmKGxjKGYpKXJldHVybiBFKGEsZCxmLGgpO2wmJkdmKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDA6aD1hLnR5cGUsdChcIjE1MlwiLGguZGlzcGxheU5hbWV8fGgubmFtZXx8XCJDb21wb25lbnRcIil9cmV0dXJuIGMoYSxkKX19dmFyIElmPUhmKCEwKSxKZj1IZighMSksS2Y9e30sTGY9e2N1cnJlbnQ6S2Z9LE1mPXtjdXJyZW50OktmfSxOZj17Y3VycmVudDpLZn07ZnVuY3Rpb24gT2YoYSl7YT09PUtmP3QoXCIxNzRcIik6dm9pZCAwO3JldHVybiBhfVxyXG5mdW5jdGlvbiBQZihhLGIpe0ooTmYsYixhKTtKKE1mLGEsYSk7SihMZixLZixhKTt2YXIgYz1iLm5vZGVUeXBlO3N3aXRjaChjKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpsZShudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6Yz04PT09Yz9iLnBhcmVudE5vZGU6YixiPWMubmFtZXNwYWNlVVJJfHxudWxsLGM9Yy50YWdOYW1lLGI9bGUoYixjKX1JKExmLGEpO0ooTGYsYixhKX1mdW5jdGlvbiBRZihhKXtJKExmLGEpO0koTWYsYSk7SShOZixhKX1mdW5jdGlvbiBSZihhKXtPZihOZi5jdXJyZW50KTt2YXIgYj1PZihMZi5jdXJyZW50KTt2YXIgYz1sZShiLGEudHlwZSk7YiE9PWMmJihKKE1mLGEsYSksSihMZixjLGEpKX1mdW5jdGlvbiBTZihhKXtNZi5jdXJyZW50PT09YSYmKEkoTGYsYSksSShNZixhKSl9XHJcbnZhciBUZj0wLFVmPTIsVmY9NCxXZj04LFhmPTE2LFlmPTMyLFpmPTY0LCRmPTEyOCxhZz1YYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGJnPTAsY2c9bnVsbCxRPW51bGwsZGc9bnVsbCxlZz1udWxsLFI9bnVsbCxmZz1udWxsLGdnPTAsaGc9bnVsbCxpZz0wLGpnPSExLGtnPW51bGwsbGc9MDtmdW5jdGlvbiBtZygpe3QoXCIzMDdcIil9ZnVuY3Rpb24gbmcoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighZmQoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cclxuZnVuY3Rpb24gb2coYSxiLGMsZCxlLGYpe2JnPWY7Y2c9YjtkZz1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbDthZy5jdXJyZW50PW51bGw9PT1kZz9wZzpxZztiPWMoZCxlKTtpZihqZyl7ZG8gamc9ITEsbGcrPTEsZGc9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGwsZmc9ZWcsaGc9Uj1RPW51bGwsYWcuY3VycmVudD1xZyxiPWMoZCxlKTt3aGlsZShqZyk7a2c9bnVsbDtsZz0wfWFnLmN1cnJlbnQ9cmc7YT1jZzthLm1lbW9pemVkU3RhdGU9ZWc7YS5leHBpcmF0aW9uVGltZT1nZzthLnVwZGF0ZVF1ZXVlPWhnO2EuZWZmZWN0VGFnfD1pZzthPW51bGwhPT1RJiZudWxsIT09US5uZXh0O2JnPTA7Zmc9Uj1lZz1kZz1RPWNnPW51bGw7Z2c9MDtoZz1udWxsO2lnPTA7YT90KFwiMzAwXCIpOnZvaWQgMDtyZXR1cm4gYn1cclxuZnVuY3Rpb24gc2coKXthZy5jdXJyZW50PXJnO2JnPTA7Zmc9Uj1lZz1kZz1RPWNnPW51bGw7Z2c9MDtoZz1udWxsO2lnPTA7amc9ITE7a2c9bnVsbDtsZz0wfWZ1bmN0aW9uIHRnKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxxdWV1ZTpudWxsLGJhc2VVcGRhdGU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1SP2VnPVI9YTpSPVIubmV4dD1hO3JldHVybiBSfWZ1bmN0aW9uIHVnKCl7aWYobnVsbCE9PWZnKVI9ZmcsZmc9Ui5uZXh0LFE9ZGcsZGc9bnVsbCE9PVE/US5uZXh0Om51bGw7ZWxzZXtudWxsPT09ZGc/dChcIjMxMFwiKTp2b2lkIDA7UT1kZzt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpRLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOlEuYmFzZVN0YXRlLHF1ZXVlOlEucXVldWUsYmFzZVVwZGF0ZTpRLmJhc2VVcGRhdGUsbmV4dDpudWxsfTtSPW51bGw9PT1SP2VnPWE6Ui5uZXh0PWE7ZGc9US5uZXh0fXJldHVybiBSfVxyXG5mdW5jdGlvbiB2ZyhhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cclxuZnVuY3Rpb24gd2coYSl7dmFyIGI9dWcoKSxjPWIucXVldWU7bnVsbD09PWM/dChcIjMxMVwiKTp2b2lkIDA7aWYoMDxsZyl7dmFyIGQ9Yy5kaXNwYXRjaDtpZihudWxsIT09a2cpe3ZhciBlPWtnLmdldChjKTtpZih2b2lkIDAhPT1lKXtrZy5kZWxldGUoYyk7dmFyIGY9Yi5tZW1vaXplZFN0YXRlO2RvIGY9YShmLGUuYWN0aW9uKSxlPWUubmV4dDt3aGlsZShudWxsIT09ZSk7ZmQoZixiLm1lbW9pemVkU3RhdGUpfHwoeGc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO2IuYmFzZVVwZGF0ZT09PWMubGFzdCYmKGIuYmFzZVN0YXRlPWYpO3JldHVybltmLGRdfX1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGRdfWQ9Yy5sYXN0O3ZhciBnPWIuYmFzZVVwZGF0ZTtmPWIuYmFzZVN0YXRlO251bGwhPT1nPyhudWxsIT09ZCYmKGQubmV4dD1udWxsKSxkPWcubmV4dCk6ZD1udWxsIT09ZD9kLm5leHQ6bnVsbDtpZihudWxsIT09ZCl7dmFyIGg9ZT1udWxsLGw9ZCxrPSExO2Rve3ZhciBtPWwuZXhwaXJhdGlvblRpbWU7XHJcbm08Ymc/KGt8fChrPSEwLGg9ZyxlPWYpLG0+Z2cmJihnZz1tKSk6Zj1sLmVhZ2VyUmVkdWNlcj09PWE/bC5lYWdlclN0YXRlOmEoZixsLmFjdGlvbik7Zz1sO2w9bC5uZXh0fXdoaWxlKG51bGwhPT1sJiZsIT09ZCk7a3x8KGg9ZyxlPWYpO2ZkKGYsYi5tZW1vaXplZFN0YXRlKXx8KHhnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtiLmJhc2VVcGRhdGU9aDtiLmJhc2VTdGF0ZT1lO2MuZWFnZXJSZWR1Y2VyPWE7Yy5lYWdlclN0YXRlPWZ9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cclxuZnVuY3Rpb24geWcoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O251bGw9PT1oZz8oaGc9e2xhc3RFZmZlY3Q6bnVsbH0saGcubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGI9aGcubGFzdEVmZmVjdCxudWxsPT09Yj9oZy5sYXN0RWZmZWN0PWEubmV4dD1hOihjPWIubmV4dCxiLm5leHQ9YSxhLm5leHQ9YyxoZy5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1mdW5jdGlvbiB6ZyhhLGIsYyxkKXt2YXIgZT10ZygpO2lnfD1hO2UubWVtb2l6ZWRTdGF0ZT15ZyhiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1cclxuZnVuY3Rpb24gQmcoYSxiLGMsZCl7dmFyIGU9dWcoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09USl7dmFyIGc9US5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZuZyhkLGcuZGVwcykpe3lnKFRmLGMsZixkKTtyZXR1cm59fWlnfD1hO2UubWVtb2l6ZWRTdGF0ZT15ZyhiLGMsZixkKX1mdW5jdGlvbiBDZyhhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fWZ1bmN0aW9uIERnKCl7fVxyXG5mdW5jdGlvbiBFZyhhLGIsYyl7MjU+bGc/dm9pZCAwOnQoXCIzMDFcIik7dmFyIGQ9YS5hbHRlcm5hdGU7aWYoYT09PWNnfHxudWxsIT09ZCYmZD09PWNnKWlmKGpnPSEwLGE9e2V4cGlyYXRpb25UaW1lOmJnLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LG51bGw9PT1rZyYmKGtnPW5ldyBNYXApLGM9a2cuZ2V0KGIpLHZvaWQgMD09PWMpa2cuc2V0KGIsYSk7ZWxzZXtmb3IoYj1jO251bGwhPT1iLm5leHQ7KWI9Yi5uZXh0O2IubmV4dD1hfWVsc2V7c2YoKTt2YXIgZT1wZigpO2U9cWYoZSxhKTt2YXIgZj17ZXhwaXJhdGlvblRpbWU6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxnPWIubGFzdDtpZihudWxsPT09ZylmLm5leHQ9ZjtlbHNle3ZhciBoPWcubmV4dDtudWxsIT09aCYmKGYubmV4dD1oKTtnLm5leHQ9Zn1iLmxhc3Q9ZjtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1cclxuZHx8MD09PWQuZXhwaXJhdGlvblRpbWUpJiYoZD1iLmVhZ2VyUmVkdWNlcixudWxsIT09ZCkpdHJ5e3ZhciBsPWIuZWFnZXJTdGF0ZSxrPWQobCxjKTtmLmVhZ2VyUmVkdWNlcj1kO2YuZWFnZXJTdGF0ZT1rO2lmKGZkKGssbCkpcmV0dXJufWNhdGNoKG0pe31maW5hbGx5e311ZihhLGUpfX1cclxudmFyIHJnPXtyZWFkQ29udGV4dDpBZix1c2VDYWxsYmFjazptZyx1c2VDb250ZXh0Om1nLHVzZUVmZmVjdDptZyx1c2VJbXBlcmF0aXZlSGFuZGxlOm1nLHVzZUxheW91dEVmZmVjdDptZyx1c2VNZW1vOm1nLHVzZVJlZHVjZXI6bWcsdXNlUmVmOm1nLHVzZVN0YXRlOm1nLHVzZURlYnVnVmFsdWU6bWd9LHBnPXtyZWFkQ29udGV4dDpBZix1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe3RnKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6QWYsdXNlRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHpnKDUxNiwkZnxaZixhLGIpfSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6W2FdO3JldHVybiB6Zyg0LFZmfFlmLENnLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gemcoNCxWZnxZZixhLGIpfSxcclxudXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPXRnKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRnKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e2xhc3Q6bnVsbCxkaXNwYXRjaDpudWxsLGVhZ2VyUmVkdWNlcjphLGVhZ2VyU3RhdGU6Yn07YT1hLmRpc3BhdGNoPUVnLmJpbmQobnVsbCxjZyxhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9dGcoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7dmFyIGI9dGcoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e2xhc3Q6bnVsbCxkaXNwYXRjaDpudWxsLGVhZ2VyUmVkdWNlcjp2ZyxcclxuZWFnZXJTdGF0ZTphfTthPWEuZGlzcGF0Y2g9RWcuYmluZChudWxsLGNnLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19LHVzZURlYnVnVmFsdWU6RGd9LHFnPXtyZWFkQ29udGV4dDpBZix1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe3ZhciBjPXVnKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZuZyhiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDpBZix1c2VFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gQmcoNTE2LCRmfFpmLGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpbYV07cmV0dXJuIEJnKDQsVmZ8WWYsQ2cuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBCZyg0LFZmfFlmLGEsYil9LFxyXG51c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9dWcoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJm5nKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOndnLHVzZVJlZjpmdW5jdGlvbigpe3JldHVybiB1ZygpLm1lbW9pemVkU3RhdGV9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3JldHVybiB3Zyh2ZyxhKX0sdXNlRGVidWdWYWx1ZTpEZ30sRmc9bnVsbCxHZz1udWxsLEhnPSExO1xyXG5mdW5jdGlvbiBJZyhhLGIpe3ZhciBjPU4oNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBKZyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtkZWZhdWx0OnJldHVybiExfX1cclxuZnVuY3Rpb24gS2coYSl7aWYoSGcpe3ZhciBiPUdnO2lmKGIpe3ZhciBjPWI7aWYoIUpnKGEsYikpe2I9SGUoYyk7aWYoIWJ8fCFKZyhhLGIpKXthLmVmZmVjdFRhZ3w9MjtIZz0hMTtGZz1hO3JldHVybn1JZyhGZyxjKX1GZz1hO0dnPUllKGIpfWVsc2UgYS5lZmZlY3RUYWd8PTIsSGc9ITEsRmc9YX19ZnVuY3Rpb24gTGcoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnOylhPWEucmV0dXJuO0ZnPWF9ZnVuY3Rpb24gTWcoYSl7aWYoYSE9PUZnKXJldHVybiExO2lmKCFIZylyZXR1cm4gTGcoYSksSGc9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFCZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9R2c7YjspSWcoYSxiKSxiPUhlKGIpO0xnKGEpO0dnPUZnP0hlKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIE5nKCl7R2c9Rmc9bnVsbDtIZz0hMX1cclxudmFyIE9nPVhiLlJlYWN0Q3VycmVudE93bmVyLHhnPSExO2Z1bmN0aW9uIFMoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9KZihiLG51bGwsYyxkKTpJZihiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBQZyhhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7UWcoYixlKTtkPW9nKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXhnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksUmcoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1MoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XHJcbmZ1bmN0aW9uIFNnKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhJGUoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsVGcoYSxiLGcsZCxlLGYpO2E9Y2YoYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpoZCxjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiBSZyhhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT1iZihnLGQsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxyXG5mdW5jdGlvbiBUZyhhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZoZChhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJih4Zz0hMSxlPGYpP1JnKGEsYixmKTpVZyhhLGIsYyxkLGYpfWZ1bmN0aW9uIFZnKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gVWcoYSxiLGMsZCxlKXt2YXIgZj1NKGMpP01lOksuY3VycmVudDtmPU9lKGIsZik7UWcoYixlKTtjPW9nKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXhnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksUmcoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1MoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XHJcbmZ1bmN0aW9uIFdnKGEsYixjLGQsZSl7aWYoTShjKSl7dmFyIGY9ITA7VGUoYil9ZWxzZSBmPSExO1FnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSx6ZihiLGMsZCxlKSxDZihiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgbD1nLmNvbnRleHQsaz1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az1BZihrKTooaz1NKGMpP01lOksuY3VycmVudCxrPU9lKGIsaykpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHE9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3F8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcclxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxsIT09aykmJkJmKGIsZyxkLGspO1hnPSExO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtsPWcuc3RhdGU9eDt2YXIgQz1iLnVwZGF0ZVF1ZXVlO251bGwhPT1DJiYoRGYoYixDLGQsZyxlKSxsPWIubWVtb2l6ZWRTdGF0ZSk7aCE9PWR8fHghPT1sfHxMLmN1cnJlbnR8fFhnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKG9mKGIsYyxtLGQpLGw9Yi5tZW1vaXplZFN0YXRlKSwoaD1YZ3x8eWYoYixjLGgsZCx4LGwsaykpPyhxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXHJcbmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1sKSxnLnByb3BzPWQsZy5zdGF0ZT1sLGcuY29udGV4dD1rLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpQKGIudHlwZSxoKSxsPWcuY29udGV4dCxrPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09az9rPUFmKGspOihrPU0oYyk/TWU6Sy5jdXJyZW50LGs9T2UoYixrKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywocT1cImZ1bmN0aW9uXCI9PT1cclxudHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8bCE9PWspJiZCZihiLGcsZCxrKSxYZz0hMSxsPWIubWVtb2l6ZWRTdGF0ZSx4PWcuc3RhdGU9bCxDPWIudXBkYXRlUXVldWUsbnVsbCE9PUMmJihEZihiLEMsZCxnLGUpLHg9Yi5tZW1vaXplZFN0YXRlKSxoIT09ZHx8bCE9PXh8fEwuY3VycmVudHx8WGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYob2YoYixjLG0sZCkseD1iLm1lbW9pemVkU3RhdGUpLChtPVhnfHx5ZihiLGMsaCxkLGwseCxrKSk/KHF8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09XHJcbnR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1cclxueCksZy5wcm9wcz1kLGcuc3RhdGU9eCxnLmNvbnRleHQ9ayxkPW0pOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJmw9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJmw9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gWWcoYSxiLGMsZCxmLGUpfVxyXG5mdW5jdGlvbiBZZyhhLGIsYyxkLGUsZil7VmcoYSxiKTt2YXIgZz0wIT09KGIuZWZmZWN0VGFnJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJlVlKGIsYywhMSksUmcoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7T2cuY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9SWYoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1JZihiLG51bGwsaCxmKSk6UyhhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZVZShiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIFpnKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/UmUoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmUmUoYSxiLmNvbnRleHQsITEpO1BmKGEsYi5jb250YWluZXJJbmZvKX1cclxuZnVuY3Rpb24gJGcoYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9Yi5tZW1vaXplZFN0YXRlO2lmKDA9PT0oYi5lZmZlY3RUYWcmNjQpKXtmPW51bGw7dmFyIGc9ITF9ZWxzZSBmPXt0aW1lZE91dEF0Om51bGwhPT1mP2YudGltZWRPdXRBdDowfSxnPSEwLGIuZWZmZWN0VGFnJj0tNjU7aWYobnVsbD09PWEpaWYoZyl7dmFyIGg9ZS5mYWxsYmFjazthPWRmKG51bGwsZCwwLG51bGwpOzA9PT0oYi5tb2RlJjEpJiYoYS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCk7ZD1kZihoLGQsYyxudWxsKTthLnNpYmxpbmc9ZDtjPWE7Yy5yZXR1cm49ZC5yZXR1cm49Yn1lbHNlIGM9ZD1KZihiLG51bGwsZS5jaGlsZHJlbixjKTtlbHNlIG51bGwhPT1hLm1lbW9pemVkU3RhdGU/KGQ9YS5jaGlsZCxoPWQuc2libGluZyxnPyhjPWUuZmFsbGJhY2ssZT1iZihkLGQucGVuZGluZ1Byb3BzLDApLDA9PT0oYi5tb2RlJjEpJiYoZz1udWxsIT09XHJcbmIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWQuY2hpbGQmJihlLmNoaWxkPWcpKSxkPWUuc2libGluZz1iZihoLGMsaC5leHBpcmF0aW9uVGltZSksYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmM9ZD1JZihiLGQuY2hpbGQsZS5jaGlsZHJlbixjKSk6KGg9YS5jaGlsZCxnPyhnPWUuZmFsbGJhY2ssZT1kZihudWxsLGQsMCxudWxsKSxlLmNoaWxkPWgsMD09PShiLm1vZGUmMSkmJihlLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKSxkPWUuc2libGluZz1kZihnLGQsYyxudWxsKSxkLmVmZmVjdFRhZ3w9MixjPWUsZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsYy5yZXR1cm49ZC5yZXR1cm49Yik6ZD1jPUlmKGIsaCxlLmNoaWxkcmVuLGMpKSxiLnN0YXRlTm9kZT1hLnN0YXRlTm9kZTtiLm1lbW9pemVkU3RhdGU9ZjtiLmNoaWxkPWM7cmV0dXJuIGR9XHJcbmZ1bmN0aW9uIFJnKGEsYixjKXtudWxsIT09YSYmKGIuY29udGV4dERlcGVuZGVuY2llcz1hLmNvbnRleHREZXBlbmRlbmNpZXMpO2lmKGIuY2hpbGRFeHBpcmF0aW9uVGltZTxjKXJldHVybiBudWxsO251bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZD90KFwiMTUzXCIpOnZvaWQgMDtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9YmYoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9YmYoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfVxyXG5mdW5jdGlvbiBhaChhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8TC5jdXJyZW50KXhnPSEwO2Vsc2V7aWYoZDxjKXt4Zz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpaZyhiKTtOZygpO2JyZWFrO2Nhc2UgNTpSZihiKTticmVhaztjYXNlIDE6TShiLnR5cGUpJiZUZShiKTticmVhaztjYXNlIDQ6UGYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOmJoKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiAkZyhhLGIsYyk7Yj1SZyhhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfX1yZXR1cm4gUmcoYSxiLGMpfX1lbHNlIHhnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPVxyXG5iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO3ZhciBlPU9lKGIsSy5jdXJyZW50KTtRZyhiLGMpO2U9b2cobnVsbCxiLGQsYSxlLGMpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtzZygpO2lmKE0oZCkpe3ZhciBmPSEwO1RlKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZvZihiLGQsZyxhKTtlLnVwZGF0ZXI9eGY7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFsRmliZXI9YjtDZihiLGQsYSxjKTtiPVlnKG51bGwsYixkLCEwLGYsXHJcbmMpfWVsc2UgYi50YWc9MCxTKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmU9Yi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7Zj1iLnBlbmRpbmdQcm9wczthPW1mKGUpO2IudHlwZT1hO2U9Yi50YWc9YWYoYSk7Zj1QKGEsZik7Zz12b2lkIDA7c3dpdGNoKGUpe2Nhc2UgMDpnPVVnKG51bGwsYixhLGYsYyk7YnJlYWs7Y2FzZSAxOmc9V2cobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDExOmc9UGcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE0Omc9U2cobnVsbCxiLGEsUChhLnR5cGUsZiksZCxjKTticmVhaztkZWZhdWx0OnQoXCIzMDZcIixhLFwiXCIpfXJldHVybiBnO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6UChkLGUpLFVnKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLFxyXG5lPWIuZWxlbWVudFR5cGU9PT1kP2U6UChkLGUpLFdnKGEsYixkLGUsYyk7Y2FzZSAzOlpnKGIpO2Q9Yi51cGRhdGVRdWV1ZTtudWxsPT09ZD90KFwiMjgyXCIpOnZvaWQgMDtlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO0RmKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpTmcoKSxiPVJnKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZT0obnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmZS5oeWRyYXRlKUdnPUllKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLEZnPWIsZT1IZz0hMDtlPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPUpmKGIsbnVsbCxkLGMpKTooUyhhLGIsZCxjKSxOZygpKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBSZihiKSxudWxsPT09YSYmS2coYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLFxyXG5nPWUuY2hpbGRyZW4sQmUoZCxlKT9nPW51bGw6bnVsbCE9PWYmJkJlKGQsZikmJihiLmVmZmVjdFRhZ3w9MTYpLFZnKGEsYiksMSE9PWMmJmIubW9kZSYxJiZlLmhpZGRlbj8oYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihTKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZLZyhiKSxudWxsO2Nhc2UgMTM6cmV0dXJuICRnKGEsYixjKTtjYXNlIDQ6cmV0dXJuIFBmKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPUlmKGIsbnVsbCxkLGMpOlMoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpQKGQsZSksUGcoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFMoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBTKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixcclxuYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBTKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7YmgoYixmKTtpZihudWxsIT09Zyl7dmFyIGg9Zy52YWx1ZTtmPWZkKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MDtpZigwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFMLmN1cnJlbnQpe2I9UmcoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGw9aC5jb250ZXh0RGVwZW5kZW5jaWVzO2lmKG51bGwhPT1sKXtnPWguY2hpbGQ7Zm9yKHZhciBrPWwuZmlyc3Q7bnVsbCE9PWs7KXtpZihrLmNvbnRleHQ9PT1kJiYwIT09XHJcbihrLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYoaz1yZihjKSxrLnRhZz13Zix0ZihoLGspKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2s9aC5hbHRlcm5hdGU7bnVsbCE9PWsmJmsuZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7Zm9yKHZhciBtPWgucmV0dXJuO251bGwhPT1tOyl7az1tLmFsdGVybmF0ZTtpZihtLmNoaWxkRXhwaXJhdGlvblRpbWU8YyltLmNoaWxkRXhwaXJhdGlvblRpbWU9YyxudWxsIT09ayYmay5jaGlsZEV4cGlyYXRpb25UaW1lPGMmJihrLmNoaWxkRXhwaXJhdGlvblRpbWU9Yyk7ZWxzZSBpZihudWxsIT09ayYmay5jaGlsZEV4cGlyYXRpb25UaW1lPGMpay5jaGlsZEV4cGlyYXRpb25UaW1lPWM7ZWxzZSBicmVhazttPW0ucmV0dXJufWwuZXhwaXJhdGlvblRpbWU8YyYmKGwuZXhwaXJhdGlvblRpbWU9Yyk7YnJlYWt9az1rLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOlxyXG5oLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPWd9fVMoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sUWcoYixjKSxlPUFmKGUsZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmVmZmVjdFRhZ3w9MSxTKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1QKGUsYi5wZW5kaW5nUHJvcHMpLGY9UChlLnR5cGUsZiksU2coYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIFRnKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PVxyXG5kP2U6UChkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLE0oZCk/KGE9ITAsVGUoYikpOmE9ITEsUWcoYixjKSx6ZihiLGQsZSxjKSxDZihiLGQsZSxjKSxZZyhudWxsLGIsZCwhMCxhLGMpO2RlZmF1bHQ6dChcIjE1NlwiKX19dmFyIGNoPXtjdXJyZW50Om51bGx9LGRoPW51bGwsZWg9bnVsbCxmaD1udWxsO2Z1bmN0aW9uIGJoKGEsYil7dmFyIGM9YS50eXBlLl9jb250ZXh0O0ooY2gsYy5fY3VycmVudFZhbHVlLGEpO2MuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIGdoKGEpe3ZhciBiPWNoLmN1cnJlbnQ7SShjaCxhKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIFFnKGEsYil7ZGg9YTtmaD1laD1udWxsO3ZhciBjPWEuY29udGV4dERlcGVuZGVuY2llcztudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZT49YiYmKHhnPSEwKTthLmNvbnRleHREZXBlbmRlbmNpZXM9bnVsbH1cclxuZnVuY3Rpb24gQWYoYSxiKXtpZihmaCE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpZmg9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07bnVsbD09PWVoPyhudWxsPT09ZGg/dChcIjMwOFwiKTp2b2lkIDAsZWg9YixkaC5jb250ZXh0RGVwZW5kZW5jaWVzPXtmaXJzdDpiLGV4cGlyYXRpb25UaW1lOjB9KTplaD1laC5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgaGg9MCx2Zj0xLHdmPTIsaWg9MyxYZz0hMTtmdW5jdGlvbiBqaChhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XHJcbmZ1bmN0aW9uIGtoKGEpe3JldHVybntiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RVcGRhdGU6YS5maXJzdFVwZGF0ZSxsYXN0VXBkYXRlOmEubGFzdFVwZGF0ZSxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1mdW5jdGlvbiByZihhKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YSx0YWc6aGgscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsLG5leHRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gbGgoYSxiKXtudWxsPT09YS5sYXN0VXBkYXRlP2EuZmlyc3RVcGRhdGU9YS5sYXN0VXBkYXRlPWI6KGEubGFzdFVwZGF0ZS5uZXh0PWIsYS5sYXN0VXBkYXRlPWIpfVxyXG5mdW5jdGlvbiB0ZihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKG51bGw9PT1jKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO3ZhciBlPW51bGw7bnVsbD09PWQmJihkPWEudXBkYXRlUXVldWU9amgoYS5tZW1vaXplZFN0YXRlKSl9ZWxzZSBkPWEudXBkYXRlUXVldWUsZT1jLnVwZGF0ZVF1ZXVlLG51bGw9PT1kP251bGw9PT1lPyhkPWEudXBkYXRlUXVldWU9amgoYS5tZW1vaXplZFN0YXRlKSxlPWMudXBkYXRlUXVldWU9amgoYy5tZW1vaXplZFN0YXRlKSk6ZD1hLnVwZGF0ZVF1ZXVlPWtoKGUpOm51bGw9PT1lJiYoZT1jLnVwZGF0ZVF1ZXVlPWtoKGQpKTtudWxsPT09ZXx8ZD09PWU/bGgoZCxiKTpudWxsPT09ZC5sYXN0VXBkYXRlfHxudWxsPT09ZS5sYXN0VXBkYXRlPyhsaChkLGIpLGxoKGUsYikpOihsaChkLGIpLGUubGFzdFVwZGF0ZT1iKX1cclxuZnVuY3Rpb24gbWgoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO2M9bnVsbD09PWM/YS51cGRhdGVRdWV1ZT1qaChhLm1lbW9pemVkU3RhdGUpOm5oKGEsYyk7bnVsbD09PWMubGFzdENhcHR1cmVkVXBkYXRlP2MuZmlyc3RDYXB0dXJlZFVwZGF0ZT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihjLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsYy5sYXN0Q2FwdHVyZWRVcGRhdGU9Yil9ZnVuY3Rpb24gbmgoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9a2goYikpO3JldHVybiBifVxyXG5mdW5jdGlvbiBvaChhLGIsYyxkLGUsZil7c3dpdGNoKGMudGFnKXtjYXNlIHZmOnJldHVybiBhPWMucGF5bG9hZCxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7Y2FzZSBpaDphLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMjA0OXw2NDtjYXNlIGhoOmE9Yy5wYXlsb2FkO2U9XCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2lmKG51bGw9PT1lfHx2b2lkIDA9PT1lKWJyZWFrO3JldHVybiBwKHt9LGQsZSk7Y2FzZSB3ZjpYZz0hMH1yZXR1cm4gZH1cclxuZnVuY3Rpb24gRGYoYSxiLGMsZCxlKXtYZz0hMTtiPW5oKGEsYik7Zm9yKHZhciBmPWIuYmFzZVN0YXRlLGc9bnVsbCxoPTAsbD1iLmZpcnN0VXBkYXRlLGs9ZjtudWxsIT09bDspe3ZhciBtPWwuZXhwaXJhdGlvblRpbWU7bTxlPyhudWxsPT09ZyYmKGc9bCxmPWspLGg8bSYmKGg9bSkpOihrPW9oKGEsYixsLGssYyxkKSxudWxsIT09bC5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD0zMixsLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0RWZmZWN0P2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWw6KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWwsYi5sYXN0RWZmZWN0PWwpKSk7bD1sLm5leHR9bT1udWxsO2ZvcihsPWIuZmlyc3RDYXB0dXJlZFVwZGF0ZTtudWxsIT09bDspe3ZhciBxPWwuZXhwaXJhdGlvblRpbWU7cTxlPyhudWxsPT09bSYmKG09bCxudWxsPT09ZyYmKGY9aykpLGg8cSYmKGg9cSkpOihrPW9oKGEsYixsLGssYyxkKSxudWxsIT09bC5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD1cclxuMzIsbC5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1sOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWwsYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bCkpKTtsPWwubmV4dH1udWxsPT09ZyYmKGIubGFzdFVwZGF0ZT1udWxsKTtudWxsPT09bT9iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsOmEuZWZmZWN0VGFnfD0zMjtudWxsPT09ZyYmbnVsbD09PW0mJihmPWspO2IuYmFzZVN0YXRlPWY7Yi5maXJzdFVwZGF0ZT1nO2IuZmlyc3RDYXB0dXJlZFVwZGF0ZT1tO2EuZXhwaXJhdGlvblRpbWU9aDthLm1lbW9pemVkU3RhdGU9a31cclxuZnVuY3Rpb24gcGgoYSxiLGMpe251bGwhPT1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUmJihudWxsIT09Yi5sYXN0VXBkYXRlJiYoYi5sYXN0VXBkYXRlLm5leHQ9Yi5maXJzdENhcHR1cmVkVXBkYXRlLGIubGFzdFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZSksYi5maXJzdENhcHR1cmVkVXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlPW51bGwpO3FoKGIuZmlyc3RFZmZlY3QsYyk7Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bnVsbDtxaChiLmZpcnN0Q2FwdHVyZWRFZmZlY3QsYyk7Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PW51bGx9ZnVuY3Rpb24gcWgoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5jYWxsYmFjaztpZihudWxsIT09Yyl7YS5jYWxsYmFjaz1udWxsO3ZhciBkPWI7XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjE5MVwiLGMpOnZvaWQgMDtjLmNhbGwoZCl9YT1hLm5leHRFZmZlY3R9fVxyXG5mdW5jdGlvbiByaChhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOm5jKGIpfX1mdW5jdGlvbiBzaChhKXthLmVmZmVjdFRhZ3w9NH12YXIgd2g9dm9pZCAwLHhoPXZvaWQgMCx5aD12b2lkIDAsemg9dm9pZCAwO3doPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTt4aD1mdW5jdGlvbigpe307XHJcbnloPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtPZihMZi5jdXJyZW50KTthPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmY9emMoZyxmKTtkPXpjKGcsZCk7YT1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj1kZShnLGYpO2Q9ZGUoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpmPXAoe30sZix7dmFsdWU6dm9pZCAwfSk7ZD1wKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2E9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Zj1mZShnLGYpO2Q9ZmUoZyxkKTthPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGYub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGcub25jbGljaz14ZSl9dWUoYyxkKTtnPWM9dm9pZCAwO3ZhciBoPW51bGw7Zm9yKGMgaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShjKSYmZi5oYXNPd25Qcm9wZXJ0eShjKSYmbnVsbCE9ZltjXSlpZihcInN0eWxlXCI9PT1cclxuYyl7dmFyIGw9ZltjXTtmb3IoZyBpbiBsKWwuaGFzT3duUHJvcGVydHkoZykmJihofHwoaD17fSksaFtnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09YyYmXCJjaGlsZHJlblwiIT09YyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiZcImF1dG9Gb2N1c1wiIT09YyYmKHRhLmhhc093blByb3BlcnR5KGMpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChjLG51bGwpKTtmb3IoYyBpbiBkKXt2YXIgaz1kW2NdO2w9bnVsbCE9Zj9mW2NdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGMpJiZrIT09bCYmKG51bGwhPWt8fG51bGwhPWwpKWlmKFwic3R5bGVcIj09PWMpaWYobCl7Zm9yKGcgaW4gbCkhbC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGh8fChoPXt9KSxoW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmbFtnXSE9PWtbZ10mJihofHxcclxuKGg9e30pLGhbZ109a1tnXSl9ZWxzZSBofHwoYXx8KGE9W10pLGEucHVzaChjLGgpKSxoPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWM/KGs9az9rLl9faHRtbDp2b2lkIDAsbD1sP2wuX19odG1sOnZvaWQgMCxudWxsIT1rJiZsIT09ayYmKGE9YXx8W10pLnB1c2goYyxcIlwiK2spKTpcImNoaWxkcmVuXCI9PT1jP2w9PT1rfHxcInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGE9YXx8W10pLnB1c2goYyxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1jJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YyYmKHRhLmhhc093blByb3BlcnR5KGMpPyhudWxsIT1rJiZ3ZShlLGMpLGF8fGw9PT1rfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGMsaykpfWgmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixoKTtlPWE7KGIudXBkYXRlUXVldWU9ZSkmJnNoKGIpfX07emg9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJnNoKGIpfTtcclxudmFyIEFoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O2Z1bmN0aW9uIEJoKGEsYil7dmFyIGM9Yi5zb3VyY2UsZD1iLnN0YWNrO251bGw9PT1kJiZudWxsIT09YyYmKGQ9bmMoYykpO251bGwhPT1jJiZtYyhjLnR5cGUpO2I9Yi52YWx1ZTtudWxsIT09YSYmMT09PWEudGFnJiZtYyhhLnR5cGUpO3RyeXtjb25zb2xlLmVycm9yKGIpfWNhdGNoKGUpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBlO30pfX1mdW5jdGlvbiBDaChhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtEaChhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XHJcbmZ1bmN0aW9uIEVoKGEsYixjKXtjPWMudXBkYXRlUXVldWU7Yz1udWxsIT09Yz9jLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yyl7dmFyIGQ9Yz1jLm5leHQ7ZG97aWYoKGQudGFnJmEpIT09VGYpe3ZhciBlPWQuZGVzdHJveTtkLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWUmJmUoKX0oZC50YWcmYikhPT1UZiYmKGU9ZC5jcmVhdGUsZC5kZXN0cm95PWUoKSk7ZD1kLm5leHR9d2hpbGUoZCE9PWMpfX1cclxuZnVuY3Rpb24gRmgoYSxiKXtmb3IodmFyIGM9YTs7KXtpZig1PT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKGIpZC5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO2Vsc2V7ZD1jLnN0YXRlTm9kZTt2YXIgZT1jLm1lbW9pemVkUHJvcHMuc3R5bGU7ZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGw7ZC5zdHlsZS5kaXNwbGF5PXJlKFwiZGlzcGxheVwiLGUpfX1lbHNlIGlmKDY9PT1jLnRhZyljLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yj9cIlwiOmMubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09Yy50YWcmJm51bGwhPT1jLm1lbW9pemVkU3RhdGUpe2Q9Yy5jaGlsZC5zaWJsaW5nO2QucmV0dXJuPWM7Yz1kO2NvbnRpbnVlfWVsc2UgaWYobnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8XHJcbmMucmV0dXJuPT09YSlyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX1cclxuZnVuY3Rpb24gR2goYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlJiZXZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLmxhc3RFZmZlY3QsbnVsbCE9PWIpKXt2YXIgYz1iPWIubmV4dDtkb3t2YXIgZD1jLmRlc3Ryb3k7aWYodm9pZCAwIT09ZCl7dmFyIGU9YTt0cnl7ZCgpfWNhdGNoKGYpe0RoKGUsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX1icmVhaztjYXNlIDE6Q2goYSk7Yj1hLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe0RoKGEsZil9YnJlYWs7Y2FzZSA1OkNoKGEpO2JyZWFrO2Nhc2UgNDpIaChhKX19XHJcbmZ1bmN0aW9uIEloKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxyXG5mdW5jdGlvbiBKaChhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihJaChiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59dChcIjE2MFwiKTtjPXZvaWQgMH12YXIgZD1iPXZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpiPWMuc3RhdGVOb2RlO2Q9ITE7YnJlYWs7Y2FzZSAzOmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnQoXCIxNjFcIil9Yy5lZmZlY3RUYWcmMTYmJihvZShiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8SWgoYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xyXG5pZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZz1iLGg9ZS5zdGF0ZU5vZGUsOD09PWcubm9kZVR5cGU/KGY9Zy5wYXJlbnROb2RlLGYuaW5zZXJ0QmVmb3JlKGgsZykpOihmPWcsZi5hcHBlbmRDaGlsZChoKSksZz1nLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWcmJnZvaWQgMCE9PWd8fG51bGwhPT1mLm9uY2xpY2t8fChmLm9uY2xpY2s9eGUpKTpiLmFwcGVuZENoaWxkKGUuc3RhdGVOb2RlKTtcclxuZWxzZSBpZig0IT09ZS50YWcmJm51bGwhPT1lLmNoaWxkKXtlLmNoaWxkLnJldHVybj1lO2U9ZS5jaGlsZDtjb250aW51ZX1pZihlPT09YSlicmVhaztmb3IoO251bGw9PT1lLnNpYmxpbmc7KXtpZihudWxsPT09ZS5yZXR1cm58fGUucmV0dXJuPT09YSlyZXR1cm47ZT1lLnJldHVybn1lLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuO2U9ZS5zaWJsaW5nfX1cclxuZnVuY3Rpb24gSGgoYSl7Zm9yKHZhciBiPWEsYz0hMSxkPXZvaWQgMCxlPXZvaWQgMDs7KXtpZighYyl7Yz1iLnJldHVybjthOmZvcig7Oyl7bnVsbD09PWM/dChcIjE2MFwiKTp2b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6ZD1jLnN0YXRlTm9kZTtlPSExO2JyZWFrIGE7Y2FzZSAzOmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGE7Y2FzZSA0OmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGF9Yz1jLnJldHVybn1jPSEwfWlmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXthOmZvcih2YXIgZj1iLGc9Zjs7KWlmKEdoKGcpLG51bGwhPT1nLmNoaWxkJiY0IT09Zy50YWcpZy5jaGlsZC5yZXR1cm49ZyxnPWcuY2hpbGQ7ZWxzZXtpZihnPT09ZilicmVhaztmb3IoO251bGw9PT1nLnNpYmxpbmc7KXtpZihudWxsPT09Zy5yZXR1cm58fGcucmV0dXJuPT09ZilicmVhayBhO2c9Zy5yZXR1cm59Zy5zaWJsaW5nLnJldHVybj1nLnJldHVybjtnPWcuc2libGluZ31lP1xyXG4oZj1kLGc9Yi5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGcpOmYucmVtb3ZlQ2hpbGQoZykpOmQucmVtb3ZlQ2hpbGQoYi5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWIudGFnPyhkPWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8sZT0hMCk6R2goYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybjtiPWIucmV0dXJuOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fVxyXG5mdW5jdGlvbiBLaChhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OkVoKFZmLFdmLGIpO2JyZWFrO2Nhc2UgMTpicmVhaztjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzO2E9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7dmFyIGU9Yi50eXBlLGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7bnVsbCE9PWYmJkdlKGMsZixlLGEsZCxiKX1icmVhaztjYXNlIDY6bnVsbD09PWIuc3RhdGVOb2RlP3QoXCIxNjJcIik6dm9pZCAwO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7YnJlYWs7Y2FzZSAzOmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSAxMzpjPWIubWVtb2l6ZWRTdGF0ZTtkPXZvaWQgMDthPWI7bnVsbD09PWM/ZD0hMTooZD0hMCxhPWIuY2hpbGQsMD09PWMudGltZWRPdXRBdCYmKGMudGltZWRPdXRBdD1wZigpKSk7bnVsbCE9PWEmJkZoKGEsZCk7Yz1cclxuYi51cGRhdGVRdWV1ZTtpZihudWxsIT09Yyl7Yi51cGRhdGVRdWV1ZT1udWxsO3ZhciBnPWIuc3RhdGVOb2RlO251bGw9PT1nJiYoZz1iLnN0YXRlTm9kZT1uZXcgQWgpO2MuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYz1MaC5iaW5kKG51bGwsYixhKTtnLmhhcyhhKXx8KGcuYWRkKGEpLGEudGhlbihjLGMpKX0pfWJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp0KFwiMTYzXCIpfX12YXIgTWg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gTmgoYSxiLGMpe2M9cmYoYyk7Yy50YWc9aWg7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe09oKGQpO0JoKGEsYil9O3JldHVybiBjfVxyXG5mdW5jdGlvbiBQaChhLGIsYyl7Yz1yZihjKTtjLnRhZz1paDt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09UWg/UWg9bmV3IFNldChbdGhpc10pOlFoLmFkZCh0aGlzKSk7dmFyIGM9Yi52YWx1ZSxlPWIuc3RhY2s7QmgoYSxiKTt0aGlzLmNvbXBvbmVudERpZENhdGNoKGMse2NvbXBvbmVudFN0YWNrOm51bGwhPT1lP2U6XCJcIn0pfSk7cmV0dXJuIGN9XHJcbmZ1bmN0aW9uIFJoKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOk0oYS50eXBlKSYmUGUoYSk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImMjA0OD8oYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhKTpudWxsO2Nhc2UgMzpyZXR1cm4gUWYoYSksUWUoYSksYj1hLmVmZmVjdFRhZywwIT09KGImNjQpP3QoXCIyODVcIik6dm9pZCAwLGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYTtjYXNlIDU6cmV0dXJuIFNmKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gYj1hLmVmZmVjdFRhZyxiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDQ6cmV0dXJuIFFmKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gZ2goYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cclxudmFyIFNoPVhiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsVGg9WGIuUmVhY3RDdXJyZW50T3duZXIsVWg9MTA3Mzc0MTgyMixWaD0wLFdoPSExLFQ9bnVsbCxYaD1udWxsLFU9MCxZaD0tMSxaaD0hMSxWPW51bGwsJGg9ITEsYWk9bnVsbCxiaT1udWxsLGNpPW51bGwsUWg9bnVsbDtmdW5jdGlvbiBkaSgpe2lmKG51bGwhPT1UKWZvcih2YXIgYT1ULnJldHVybjtudWxsIT09YTspe3ZhciBiPWE7c3dpdGNoKGIudGFnKXtjYXNlIDE6dmFyIGM9Yi50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1jJiZ2b2lkIDAhPT1jJiZQZShiKTticmVhaztjYXNlIDM6UWYoYik7UWUoYik7YnJlYWs7Y2FzZSA1OlNmKGIpO2JyZWFrO2Nhc2UgNDpRZihiKTticmVhaztjYXNlIDEwOmdoKGIpfWE9YS5yZXR1cm59WGg9bnVsbDtVPTA7WWg9LTE7Wmg9ITE7VD1udWxsfVxyXG5mdW5jdGlvbiBlaShhLGIpe2NpPWJpPWFpPW51bGw7dmFyIGM9VztXPSEwO2Rve2lmKGIuZWZmZWN0VGFnJjUxMil7dmFyIGQ9ITEsZT12b2lkIDA7dHJ5e3ZhciBmPWI7RWgoJGYsVGYsZik7RWgoVGYsWmYsZil9Y2F0Y2goZyl7ZD0hMCxlPWd9ZCYmRGgoYixlKX1iPWIubmV4dEVmZmVjdH13aGlsZShudWxsIT09Yik7Vz1jO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmZmkoYSxjKX1mdW5jdGlvbiBzZigpe251bGwhPT1iaSYmRmUoYmkpO251bGwhPT1jaSYmY2koKX1cclxuZnVuY3Rpb24gZ2koYSl7Zm9yKDs7KXt2YXIgYj1hLmFsdGVybmF0ZSxjPWEucmV0dXJuLGQ9YS5zaWJsaW5nO2lmKDA9PT0oYS5lZmZlY3RUYWcmMTAyNCkpe1Q9YTthOnt2YXIgZT1iO2I9YTt2YXIgZj1VO3ZhciBnPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmJyZWFrO2Nhc2UgMTY6YnJlYWs7Y2FzZSAxNTpjYXNlIDA6YnJlYWs7Y2FzZSAxOk0oYi50eXBlKSYmUGUoYik7YnJlYWs7Y2FzZSAzOlFmKGIpO1FlKGIpO2c9Yi5zdGF0ZU5vZGU7Zy5wZW5kaW5nQ29udGV4dCYmKGcuY29udGV4dD1nLnBlbmRpbmdDb250ZXh0LGcucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWV8fG51bGw9PT1lLmNoaWxkKU1nKGIpLGIuZWZmZWN0VGFnJj0tMzt4aChiKTticmVhaztjYXNlIDU6U2YoYik7dmFyIGg9T2YoTmYuY3VycmVudCk7Zj1iLnR5cGU7aWYobnVsbCE9PWUmJm51bGwhPWIuc3RhdGVOb2RlKXloKGUsYixmLGcsaCksZS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD1cclxuMTI4KTtlbHNlIGlmKGcpe3ZhciBsPU9mKExmLmN1cnJlbnQpO2lmKE1nKGIpKXtnPWI7ZT1nLnN0YXRlTm9kZTt2YXIgaz1nLnR5cGUsbT1nLm1lbW9pemVkUHJvcHMscT1oO2VbSGFdPWc7ZVtJYV09bTtmPXZvaWQgMDtoPWs7c3dpdGNoKGgpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6SChcImxvYWRcIixlKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3Ioaz0wO2s8Y2IubGVuZ3RoO2srKylIKGNiW2tdLGUpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpIKFwiZXJyb3JcIixlKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpIKFwiZXJyb3JcIixlKTtIKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6SChcInJlc2V0XCIsZSk7SChcInN1Ym1pdFwiLGUpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6SChcInRvZ2dsZVwiLGUpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFjKGUsbSk7SChcImludmFsaWRcIixlKTt3ZShxLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmUuX3dyYXBwZXJTdGF0ZT1cclxue3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07SChcImludmFsaWRcIixlKTt3ZShxLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Z2UoZSxtKSxIKFwiaW52YWxpZFwiLGUpLHdlKHEsXCJvbkNoYW5nZVwiKX11ZShoLG0pO2s9bnVsbDtmb3IoZiBpbiBtKW0uaGFzT3duUHJvcGVydHkoZikmJihsPW1bZl0sXCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGw/ZS50ZXh0Q29udGVudCE9PWwmJihrPVtcImNoaWxkcmVuXCIsbF0pOlwibnVtYmVyXCI9PT10eXBlb2YgbCYmZS50ZXh0Q29udGVudCE9PVwiXCIrbCYmKGs9W1wiY2hpbGRyZW5cIixcIlwiK2xdKTp0YS5oYXNPd25Qcm9wZXJ0eShmKSYmbnVsbCE9bCYmd2UocSxmKSk7c3dpdGNoKGgpe2Nhc2UgXCJpbnB1dFwiOlZiKGUpO0VjKGUsbSwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmIoZSk7aWUoZSxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIG0ub25DbGljayYmXHJcbihlLm9uY2xpY2s9eGUpfWY9aztnLnVwZGF0ZVF1ZXVlPWY7Zz1udWxsIT09Zj8hMDohMTtnJiZzaChiKX1lbHNle209YjtlPWY7cT1nO2s9OT09PWgubm9kZVR5cGU/aDpoLm93bmVyRG9jdW1lbnQ7bD09PWplLmh0bWwmJihsPWtlKGUpKTtsPT09amUuaHRtbD9cInNjcmlwdFwiPT09ZT8oZT1rLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksZS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixrPWUucmVtb3ZlQ2hpbGQoZS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBxLmlzP2s9ay5jcmVhdGVFbGVtZW50KGUse2lzOnEuaXN9KTooaz1rLmNyZWF0ZUVsZW1lbnQoZSksXCJzZWxlY3RcIj09PWUmJnEubXVsdGlwbGUmJihrLm11bHRpcGxlPSEwKSk6az1rLmNyZWF0ZUVsZW1lbnROUyhsLGUpO2U9aztlW0hhXT1tO2VbSWFdPWc7d2goZSxiLCExLCExKTtxPWU7az1mO209Zzt2YXIgeD1oLEM9dmUoayxtKTtzd2l0Y2goayl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpIKFwibG9hZFwiLFxyXG5xKTtoPW07YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGNiLmxlbmd0aDtoKyspSChjYltoXSxxKTtoPW07YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkgoXCJlcnJvclwiLHEpO2g9bTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpIKFwiZXJyb3JcIixxKTtIKFwibG9hZFwiLHEpO2g9bTticmVhaztjYXNlIFwiZm9ybVwiOkgoXCJyZXNldFwiLHEpO0goXCJzdWJtaXRcIixxKTtoPW07YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpIKFwidG9nZ2xlXCIscSk7aD1tO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFjKHEsbSk7aD16YyhxLG0pO0goXCJpbnZhbGlkXCIscSk7d2UoeCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpoPWRlKHEsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtoPXAoe30sbSx7dmFsdWU6dm9pZCAwfSk7SChcImludmFsaWRcIixxKTt3ZSh4LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Z2UocSxcclxubSk7aD1mZShxLG0pO0goXCJpbnZhbGlkXCIscSk7d2UoeCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1tfXVlKGssaCk7bD12b2lkIDA7dmFyIHc9ayxFPXEsdj1oO2ZvcihsIGluIHYpaWYodi5oYXNPd25Qcm9wZXJ0eShsKSl7dmFyIG49dltsXTtcInN0eWxlXCI9PT1sP3NlKEUsbik6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8obj1uP24uX19odG1sOnZvaWQgMCxudWxsIT1uJiZuZShFLG4pKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCI9PT10eXBlb2Ygbj8oXCJ0ZXh0YXJlYVwiIT09d3x8XCJcIiE9PW4pJiZvZShFLG4pOlwibnVtYmVyXCI9PT10eXBlb2YgbiYmb2UoRSxcIlwiK24pOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJih0YS5oYXNPd25Qcm9wZXJ0eShsKT9udWxsIT1uJiZ3ZSh4LGwpOm51bGwhPW4mJnhjKEUsbCxuLEMpKX1zd2l0Y2goayl7Y2FzZSBcImlucHV0XCI6VmIocSk7XHJcbkVjKHEsbSwhMSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmIocSk7aWUocSxtKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9bS52YWx1ZSYmcS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIreWMobS52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpoPXE7aC5tdWx0aXBsZT0hIW0ubXVsdGlwbGU7cT1tLnZhbHVlO251bGwhPXE/ZWUoaCwhIW0ubXVsdGlwbGUscSwhMSk6bnVsbCE9bS5kZWZhdWx0VmFsdWUmJmVlKGgsISFtLm11bHRpcGxlLG0uZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLm9uQ2xpY2smJihxLm9uY2xpY2s9eGUpfShnPUFlKGYsZykpJiZzaChiKTtiLnN0YXRlTm9kZT1lfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfWVsc2UgbnVsbD09PWIuc3RhdGVOb2RlP3QoXCIxNjZcIik6dm9pZCAwO2JyZWFrO2Nhc2UgNjplJiZudWxsIT1iLnN0YXRlTm9kZT96aChlLGIsZS5tZW1vaXplZFByb3BzLGcpOihcInN0cmluZ1wiIT09XHJcbnR5cGVvZiBnJiYobnVsbD09PWIuc3RhdGVOb2RlP3QoXCIxNjZcIik6dm9pZCAwKSxlPU9mKE5mLmN1cnJlbnQpLE9mKExmLmN1cnJlbnQpLE1nKGIpPyhnPWIsZj1nLnN0YXRlTm9kZSxlPWcubWVtb2l6ZWRQcm9wcyxmW0hhXT1nLChnPWYubm9kZVZhbHVlIT09ZSkmJnNoKGIpKTooZj1iLGc9KDk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShnKSxnW0hhXT1iLGYuc3RhdGVOb2RlPWcpKTticmVhaztjYXNlIDExOmJyZWFrO2Nhc2UgMTM6Zz1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpe2IuZXhwaXJhdGlvblRpbWU9ZjtUPWI7YnJlYWsgYX1nPW51bGwhPT1nO2Y9bnVsbCE9PWUmJm51bGwhPT1lLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJiFnJiZmJiYoZT1lLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWUmJihoPWIuZmlyc3RFZmZlY3QsbnVsbCE9PWg/KGIuZmlyc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9aCk6KGIuZmlyc3RFZmZlY3Q9XHJcbmIubGFzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1udWxsKSxlLmVmZmVjdFRhZz04KSk7aWYoZ3x8ZiliLmVmZmVjdFRhZ3w9NDticmVhaztjYXNlIDc6YnJlYWs7Y2FzZSA4OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSA0OlFmKGIpO3hoKGIpO2JyZWFrO2Nhc2UgMTA6Z2goYik7YnJlYWs7Y2FzZSA5OmJyZWFrO2Nhc2UgMTQ6YnJlYWs7Y2FzZSAxNzpNKGIudHlwZSkmJlBlKGIpO2JyZWFrO2RlZmF1bHQ6dChcIjE1NlwiKX1UPW51bGx9Yj1hO2lmKDE9PT1VfHwxIT09Yi5jaGlsZEV4cGlyYXRpb25UaW1lKXtnPTA7Zm9yKGY9Yi5jaGlsZDtudWxsIT09ZjspZT1mLmV4cGlyYXRpb25UaW1lLGg9Zi5jaGlsZEV4cGlyYXRpb25UaW1lLGU+ZyYmKGc9ZSksaD5nJiYoZz1oKSxmPWYuc2libGluZztiLmNoaWxkRXhwaXJhdGlvblRpbWU9Z31pZihudWxsIT09VClyZXR1cm4gVDtudWxsIT09YyYmMD09PShjLmVmZmVjdFRhZyYxMDI0KSYmKG51bGw9PT1jLmZpcnN0RWZmZWN0JiYoYy5maXJzdEVmZmVjdD1cclxuYS5maXJzdEVmZmVjdCksbnVsbCE9PWEubGFzdEVmZmVjdCYmKG51bGwhPT1jLmxhc3RFZmZlY3QmJihjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxjLmxhc3RFZmZlY3Q9YS5sYXN0RWZmZWN0KSwxPGEuZWZmZWN0VGFnJiYobnVsbCE9PWMubGFzdEVmZmVjdD9jLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hOmMuZmlyc3RFZmZlY3Q9YSxjLmxhc3RFZmZlY3Q9YSkpfWVsc2V7YT1SaChhLFUpO2lmKG51bGwhPT1hKXJldHVybiBhLmVmZmVjdFRhZyY9MTAyMyxhO251bGwhPT1jJiYoYy5maXJzdEVmZmVjdD1jLmxhc3RFZmZlY3Q9bnVsbCxjLmVmZmVjdFRhZ3w9MTAyNCl9aWYobnVsbCE9PWQpcmV0dXJuIGQ7aWYobnVsbCE9PWMpYT1jO2Vsc2UgYnJlYWt9cmV0dXJuIG51bGx9XHJcbmZ1bmN0aW9uIGhpKGEpe3ZhciBiPWFoKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1naShhKSk7VGguY3VycmVudD1udWxsO3JldHVybiBifVxyXG5mdW5jdGlvbiBpaShhLGIpe1doP3QoXCIyNDNcIik6dm9pZCAwO3NmKCk7V2g9ITA7dmFyIGM9U2guY3VycmVudDtTaC5jdXJyZW50PXJnO3ZhciBkPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT247aWYoZCE9PVV8fGEhPT1YaHx8bnVsbD09PVQpZGkoKSxYaD1hLFU9ZCxUPWJmKFhoLmN1cnJlbnQsbnVsbCxVKSxhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO3ZhciBlPSExO2Rve3RyeXtpZihiKWZvcig7bnVsbCE9PVQmJiFqaSgpOylUPWhpKFQpO2Vsc2UgZm9yKDtudWxsIT09VDspVD1oaShUKX1jYXRjaChFKXtpZihmaD1laD1kaD1udWxsLHNnKCksbnVsbD09PVQpZT0hMCxPaChFKTtlbHNle251bGw9PT1UP3QoXCIyNzFcIik6dm9pZCAwO3ZhciBmPVQsZz1mLnJldHVybjtpZihudWxsPT09ZyllPSEwLE9oKEUpO2Vsc2V7YTp7dmFyIGg9YSxsPWcsaz1mLG09RTtnPVU7ay5lZmZlY3RUYWd8PTEwMjQ7ay5maXJzdEVmZmVjdD1rLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09XHJcbm0mJlwib2JqZWN0XCI9PT10eXBlb2YgbSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIG0udGhlbil7dmFyIHE9bTttPWw7dmFyIHg9LTEsQz0tMTtkb3tpZigxMz09PW0udGFnKXt2YXIgdz1tLmFsdGVybmF0ZTtpZihudWxsIT09dyYmKHc9dy5tZW1vaXplZFN0YXRlLG51bGwhPT13KSl7Qz0xMCooMTA3Mzc0MTgyMi13LnRpbWVkT3V0QXQpO2JyZWFrfXc9bS5wZW5kaW5nUHJvcHMubWF4RHVyYXRpb247aWYoXCJudW1iZXJcIj09PXR5cGVvZiB3KWlmKDA+PXcpeD0wO2Vsc2UgaWYoLTE9PT14fHx3PHgpeD13fW09bS5yZXR1cm59d2hpbGUobnVsbCE9PW0pO209bDtkb3tpZih3PTEzPT09bS50YWcpdz12b2lkIDA9PT1tLm1lbW9pemVkUHJvcHMuZmFsbGJhY2s/ITE6bnVsbD09PW0ubWVtb2l6ZWRTdGF0ZTtpZih3KXtsPW0udXBkYXRlUXVldWU7bnVsbD09PWw/KGw9bmV3IFNldCxsLmFkZChxKSxtLnVwZGF0ZVF1ZXVlPWwpOmwuYWRkKHEpO2lmKDA9PT0obS5tb2RlJjEpKXttLmVmZmVjdFRhZ3w9XHJcbjY0O2suZWZmZWN0VGFnJj0tMTk1NzsxPT09ay50YWcmJihudWxsPT09ay5hbHRlcm5hdGU/ay50YWc9MTc6KGc9cmYoMTA3Mzc0MTgyMyksZy50YWc9d2YsdGYoayxnKSkpO2suZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMzticmVhayBhfWs9aC5waW5nQ2FjaGU7bnVsbD09PWs/KGs9aC5waW5nQ2FjaGU9bmV3IE1oLGw9bmV3IFNldCxrLnNldChxLGwpKToobD1rLmdldChxKSx2b2lkIDA9PT1sJiYobD1uZXcgU2V0LGsuc2V0KHEsbCkpKTtsLmhhcyhnKXx8KGwuYWRkKGcpLGs9a2kuYmluZChudWxsLGgscSxnKSxxLnRoZW4oayxrKSk7LTE9PT14P2g9MTA3Mzc0MTgyMzooLTE9PT1DJiYoQz0xMCooMTA3Mzc0MTgyMi1sZihoLGcpKS01RTMpLGg9Qyt4KTswPD1oJiZZaDxoJiYoWWg9aCk7bS5lZmZlY3RUYWd8PTIwNDg7bS5leHBpcmF0aW9uVGltZT1nO2JyZWFrIGF9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1FcnJvcigobWMoay50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcclxuXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIituYyhrKSl9Wmg9ITA7bT1yaChtLGspO2g9bDtkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoLmVmZmVjdFRhZ3w9MjA0ODtoLmV4cGlyYXRpb25UaW1lPWc7Zz1OaChoLG0sZyk7bWgoaCxnKTticmVhayBhO2Nhc2UgMTppZihxPW0seD1oLnR5cGUsQz1oLnN0YXRlTm9kZSwwPT09KGguZWZmZWN0VGFnJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB4LmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PUMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBDLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVFofHwhUWguaGFzKEMpKSkpe2guZWZmZWN0VGFnfD0yMDQ4O1xyXG5oLmV4cGlyYXRpb25UaW1lPWc7Zz1QaChoLHEsZyk7bWgoaCxnKTticmVhayBhfX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKX1UPWdpKGYpO2NvbnRpbnVlfX19YnJlYWt9d2hpbGUoMSk7V2g9ITE7U2guY3VycmVudD1jO2ZoPWVoPWRoPW51bGw7c2coKTtpZihlKVhoPW51bGwsYS5maW5pc2hlZFdvcms9bnVsbDtlbHNlIGlmKG51bGwhPT1UKWEuZmluaXNoZWRXb3JrPW51bGw7ZWxzZXtjPWEuY3VycmVudC5hbHRlcm5hdGU7bnVsbD09PWM/dChcIjI4MVwiKTp2b2lkIDA7WGg9bnVsbDtpZihaaCl7ZT1hLmxhdGVzdFBlbmRpbmdUaW1lO2Y9YS5sYXRlc3RTdXNwZW5kZWRUaW1lO2c9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDAhPT1lJiZlPGR8fDAhPT1mJiZmPGR8fDAhPT1nJiZnPGQpe2tmKGEsZCk7bGkoYSxjLGQsYS5leHBpcmF0aW9uVGltZSwtMSk7cmV0dXJufWlmKCFhLmRpZEVycm9yJiZiKXthLmRpZEVycm9yPSEwO2Q9YS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj1kO1xyXG5iPWEuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztsaShhLGMsZCxiLC0xKTtyZXR1cm59fWImJi0xIT09WWg/KGtmKGEsZCksYj0xMCooMTA3Mzc0MTgyMi1sZihhLGQpKSxiPFloJiYoWWg9YiksYj0xMCooMTA3Mzc0MTgyMi1wZigpKSxiPVloLWIsbGkoYSxjLGQsYS5leHBpcmF0aW9uVGltZSwwPmI/MDpiKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWQsYS5maW5pc2hlZFdvcms9Yyl9fVxyXG5mdW5jdGlvbiBEaChhLGIpe2Zvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1RaHx8IVFoLmhhcyhkKSkpe2E9cmgoYixhKTthPVBoKGMsYSwxMDczNzQxODIzKTt0ZihjLGEpO3VmKGMsMTA3Mzc0MTgyMyk7cmV0dXJufWJyZWFrO2Nhc2UgMzphPXJoKGIsYSk7YT1OaChjLGEsMTA3Mzc0MTgyMyk7dGYoYyxhKTt1ZihjLDEwNzM3NDE4MjMpO3JldHVybn1jPWMucmV0dXJufTM9PT1hLnRhZyYmKGM9cmgoYixhKSxjPU5oKGEsYywxMDczNzQxODIzKSx0ZihhLGMpLHVmKGEsMTA3Mzc0MTgyMykpfVxyXG5mdW5jdGlvbiBxZihhLGIpezAhPT1WaD9hPVZoOldoP2E9JGg/MTA3Mzc0MTgyMzpVOmIubW9kZSYxPyhhPW1pPzEwNzM3NDE4MjItMTAqKCgoMTA3Mzc0MTgyMi1hKzE1KS8xMHwwKSsxKToxMDczNzQxODIyLTI1KigoKDEwNzM3NDE4MjItYSs1MDApLzI1fDApKzEpLG51bGwhPT1YaCYmYT09PVUmJi0tYSk6YT0xMDczNzQxODIzO21pJiYoMD09PW5pfHxhPG5pKSYmKG5pPWEpO3JldHVybiBhfVxyXG5mdW5jdGlvbiBraShhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2lmKG51bGwhPT1YaCYmVT09PWMpWGg9bnVsbDtlbHNlIGlmKGI9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWUsMCE9PWImJmM8PWImJmM+PWQpe2EuZGlkRXJyb3I9ITE7Yj1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMD09PWJ8fGI+YylhLmxhdGVzdFBpbmdlZFRpbWU9YztqZihjLGEpO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmZmkoYSxjKX19ZnVuY3Rpb24gTGgoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj1wZigpO2I9cWYoYixhKTthPW9pKGEsYik7bnVsbCE9PWEmJihoZihhLGIpLGI9YS5leHBpcmF0aW9uVGltZSwwIT09YiYmZmkoYSxiKSl9XHJcbmZ1bmN0aW9uIG9pKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59cmV0dXJuIGV9XHJcbmZ1bmN0aW9uIHVmKGEsYil7YT1vaShhLGIpO251bGwhPT1hJiYoIVdoJiYwIT09VSYmYj5VJiZkaSgpLGhmKGEsYiksV2gmJiEkaCYmWGg9PT1hfHxmaShhLGEuZXhwaXJhdGlvblRpbWUpLHBpPnFpJiYocGk9MCx0KFwiMTg1XCIpKSl9ZnVuY3Rpb24gcmkoYSxiLGMsZCxlKXt2YXIgZj1WaDtWaD0xMDczNzQxODIzO3RyeXtyZXR1cm4gYShiLGMsZCxlKX1maW5hbGx5e1ZoPWZ9fXZhciBzaT1udWxsLFg9bnVsbCx0aT0wLHVpPXZvaWQgMCxXPSExLHZpPW51bGwsWT0wLG5pPTAsd2k9ITEseGk9bnVsbCxaPSExLHlpPSExLG1pPSExLHppPW51bGwsQWk9YmEudW5zdGFibGVfbm93KCksQmk9MTA3Mzc0MTgyMi0oQWkvMTB8MCksQ2k9QmkscWk9NTAscGk9MCxEaT1udWxsO2Z1bmN0aW9uIEVpKCl7Qmk9MTA3Mzc0MTgyMi0oKGJhLnVuc3RhYmxlX25vdygpLUFpKS8xMHwwKX1cclxuZnVuY3Rpb24gRmkoYSxiKXtpZigwIT09dGkpe2lmKGI8dGkpcmV0dXJuO251bGwhPT11aSYmYmEudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2sodWkpfXRpPWI7YT1iYS51bnN0YWJsZV9ub3coKS1BaTt1aT1iYS51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKEdpLHt0aW1lb3V0OjEwKigxMDczNzQxODIyLWIpLWF9KX1mdW5jdGlvbiBsaShhLGIsYyxkLGUpe2EuZXhwaXJhdGlvblRpbWU9ZDswIT09ZXx8amkoKT8wPGUmJihhLnRpbWVvdXRIYW5kbGU9Q2UoSGkuYmluZChudWxsLGEsYixjKSxlKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWMsYS5maW5pc2hlZFdvcms9Yil9ZnVuY3Rpb24gSGkoYSxiLGMpe2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWM7YS5maW5pc2hlZFdvcms9YjtFaSgpO0NpPUJpO0lpKGEsYyl9ZnVuY3Rpb24gcGYoKXtpZihXKXJldHVybiBDaTtKaSgpO2lmKDA9PT1ZfHwxPT09WSlFaSgpLENpPUJpO3JldHVybiBDaX1cclxuZnVuY3Rpb24gZmkoYSxiKXtudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdD8oYS5leHBpcmF0aW9uVGltZT1iLG51bGw9PT1YPyhzaT1YPWEsYS5uZXh0U2NoZWR1bGVkUm9vdD1hKTooWD1YLm5leHRTY2hlZHVsZWRSb290PWEsWC5uZXh0U2NoZWR1bGVkUm9vdD1zaSkpOmI+YS5leHBpcmF0aW9uVGltZSYmKGEuZXhwaXJhdGlvblRpbWU9Yik7V3x8KFo/eWkmJih2aT1hLFk9MTA3Mzc0MTgyMyxLaShhLDEwNzM3NDE4MjMsITEpKToxMDczNzQxODIzPT09Yj9MaSgxMDczNzQxODIzLCExKTpGaShhLGIpKX1cclxuZnVuY3Rpb24gSmkoKXt2YXIgYT0wLGI9bnVsbDtpZihudWxsIT09WClmb3IodmFyIGM9WCxkPXNpO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZTtpZigwPT09ZSl7bnVsbD09PWN8fG51bGw9PT1YP3QoXCIyNDRcIik6dm9pZCAwO2lmKGQ9PT1kLm5leHRTY2hlZHVsZWRSb290KXtzaT1YPWQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGlmKGQ9PT1zaSlzaT1lPWQubmV4dFNjaGVkdWxlZFJvb3QsWC5uZXh0U2NoZWR1bGVkUm9vdD1lLGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtlbHNlIGlmKGQ9PT1YKXtYPWM7WC5uZXh0U2NoZWR1bGVkUm9vdD1zaTtkLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBjLm5leHRTY2hlZHVsZWRSb290PWQubmV4dFNjaGVkdWxlZFJvb3QsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Q9Yy5uZXh0U2NoZWR1bGVkUm9vdH1lbHNle2U+YSYmKGE9ZSxiPWQpO2lmKGQ9PT1YKWJyZWFrO2lmKDEwNzM3NDE4MjM9PT1cclxuYSlicmVhaztjPWQ7ZD1kLm5leHRTY2hlZHVsZWRSb290fX12aT1iO1k9YX12YXIgTWk9ITE7ZnVuY3Rpb24gamkoKXtyZXR1cm4gTWk/ITA6YmEudW5zdGFibGVfc2hvdWxkWWllbGQoKT9NaT0hMDohMX1mdW5jdGlvbiBHaSgpe3RyeXtpZighamkoKSYmbnVsbCE9PXNpKXtFaSgpO3ZhciBhPXNpO2Rve3ZhciBiPWEuZXhwaXJhdGlvblRpbWU7MCE9PWImJkJpPD1iJiYoYS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj1CaSk7YT1hLm5leHRTY2hlZHVsZWRSb290fXdoaWxlKGEhPT1zaSl9TGkoMCwhMCl9ZmluYWxseXtNaT0hMX19XHJcbmZ1bmN0aW9uIExpKGEsYil7SmkoKTtpZihiKWZvcihFaSgpLENpPUJpO251bGwhPT12aSYmMCE9PVkmJmE8PVkmJiEoTWkmJkJpPlkpOylLaSh2aSxZLEJpPlkpLEppKCksRWkoKSxDaT1CaTtlbHNlIGZvcig7bnVsbCE9PXZpJiYwIT09WSYmYTw9WTspS2kodmksWSwhMSksSmkoKTtiJiYodGk9MCx1aT1udWxsKTswIT09WSYmRmkodmksWSk7cGk9MDtEaT1udWxsO2lmKG51bGwhPT16aSlmb3IoYT16aSx6aT1udWxsLGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTt0cnl7Yy5fb25Db21wbGV0ZSgpfWNhdGNoKGQpe3dpfHwod2k9ITAseGk9ZCl9fWlmKHdpKXRocm93IGE9eGkseGk9bnVsbCx3aT0hMSxhO31mdW5jdGlvbiBJaShhLGIpe1c/dChcIjI1M1wiKTp2b2lkIDA7dmk9YTtZPWI7S2koYSxiLCExKTtMaSgxMDczNzQxODIzLCExKX1cclxuZnVuY3Rpb24gS2koYSxiLGMpe1c/dChcIjI0NVwiKTp2b2lkIDA7Vz0hMDtpZihjKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD9PaShhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLERlKGQpKSxpaShhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJihqaSgpP2EuZmluaXNoZWRXb3JrPWQ6T2koYSxkLGIpKSl9ZWxzZSBkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kP09pKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsRGUoZCkpLGlpKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmT2koYSxkLGIpKTtXPSExfVxyXG5mdW5jdGlvbiBPaShhLGIsYyl7dmFyIGQ9YS5maXJzdEJhdGNoO2lmKG51bGwhPT1kJiZkLl9leHBpcmF0aW9uVGltZT49YyYmKG51bGw9PT16aT96aT1bZF06emkucHVzaChkKSxkLl9kZWZlcikpe2EuZmluaXNoZWRXb3JrPWI7YS5leHBpcmF0aW9uVGltZT0wO3JldHVybn1hLmZpbmlzaGVkV29yaz1udWxsO2E9PT1EaT9waSsrOihEaT1hLHBpPTApOyRoPVdoPSEwO2EuY3VycmVudD09PWI/dChcIjE3N1wiKTp2b2lkIDA7Yz1hLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTswPT09Yz90KFwiMjYxXCIpOnZvaWQgMDthLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO2Q9Yi5leHBpcmF0aW9uVGltZTt2YXIgZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU7ZD1lPmQ/ZTpkO2EuZGlkRXJyb3I9ITE7MD09PWQ/KGEuZWFybGllc3RQZW5kaW5nVGltZT0wLGEubGF0ZXN0UGVuZGluZ1RpbWU9MCxhLmVhcmxpZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0UGluZ2VkVGltZT1cclxuMCk6KGQ8YS5sYXRlc3RQaW5nZWRUaW1lJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApLGU9YS5sYXRlc3RQZW5kaW5nVGltZSwwIT09ZSYmKGU+ZD9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT0wOmEuZWFybGllc3RQZW5kaW5nVGltZT5kJiYoYS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWUpKSxlPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lLDA9PT1lP2hmKGEsZCk6ZDxhLmxhdGVzdFN1c3BlbmRlZFRpbWU/KGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPTAsaGYoYSxkKSk6ZD5lJiZoZihhLGQpKTtqZigwLGEpO1RoLmN1cnJlbnQ9bnVsbDsxPGIuZWZmZWN0VGFnP251bGwhPT1iLmxhc3RFZmZlY3Q/KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIsZD1iLmZpcnN0RWZmZWN0KTpkPWI6ZD1iLmZpcnN0RWZmZWN0O3llPUhkO2U9VGQoKTtpZihVZChlKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW5cclxuZSl2YXIgZj17c3RhcnQ6ZS5zZWxlY3Rpb25TdGFydCxlbmQ6ZS5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7Zj0oZj1lLm93bmVyRG9jdW1lbnQpJiZmLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGc9Zi5nZXRTZWxlY3Rpb24mJmYuZ2V0U2VsZWN0aW9uKCk7aWYoZyYmMCE9PWcucmFuZ2VDb3VudCl7Zj1nLmFuY2hvck5vZGU7dmFyIGg9Zy5hbmNob3JPZmZzZXQsbD1nLmZvY3VzTm9kZTtnPWcuZm9jdXNPZmZzZXQ7dHJ5e2Yubm9kZVR5cGUsbC5ub2RlVHlwZX1jYXRjaCh1Yil7Zj1udWxsO2JyZWFrIGF9dmFyIGs9MCxtPS0xLHE9LTEseD0wLEM9MCx3PWUsRT1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHY7Oyl7dyE9PWZ8fDAhPT1oJiYzIT09dy5ub2RlVHlwZXx8KG09aytoKTt3IT09bHx8MCE9PWcmJjMhPT13Lm5vZGVUeXBlfHwocT1rK2cpOzM9PT13Lm5vZGVUeXBlJiYoays9dy5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHY9dy5maXJzdENoaWxkKSlicmVhaztFPXc7dz12fWZvcig7Oyl7aWYodz09PVxyXG5lKWJyZWFrIGI7RT09PWYmJisreD09PWgmJihtPWspO0U9PT1sJiYrK0M9PT1nJiYocT1rKTtpZihudWxsIT09KHY9dy5uZXh0U2libGluZykpYnJlYWs7dz1FO0U9dy5wYXJlbnROb2RlfXc9dn1mPS0xPT09bXx8LTE9PT1xP251bGw6e3N0YXJ0Om0sZW5kOnF9fWVsc2UgZj1udWxsfWY9Znx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgZj1udWxsO3plPXtmb2N1c2VkRWxlbTplLHNlbGVjdGlvblJhbmdlOmZ9O0hkPSExO2ZvcihWPWQ7bnVsbCE9PVY7KXtlPSExO2Y9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1WOyl7aWYoVi5lZmZlY3RUYWcmMjU2KWE6e3ZhciBuPVYuYWx0ZXJuYXRlO2g9Vjtzd2l0Y2goaC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6RWgoVWYsVGYsaCk7YnJlYWsgYTtjYXNlIDE6aWYoaC5lZmZlY3RUYWcmMjU2JiZudWxsIT09bil7dmFyIHU9bi5tZW1vaXplZFByb3BzLHo9bi5tZW1vaXplZFN0YXRlLEFnPWguc3RhdGVOb2RlLE5pPUFnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGguZWxlbWVudFR5cGU9PT1cclxuaC50eXBlP3U6UChoLnR5cGUsdSkseik7QWcuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Tml9YnJlYWsgYTtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpicmVhayBhO2RlZmF1bHQ6dChcIjE2M1wiKX19Vj1WLm5leHRFZmZlY3R9fWNhdGNoKHViKXtlPSEwLGY9dWJ9ZSYmKG51bGw9PT1WP3QoXCIxNzhcIik6dm9pZCAwLERoKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWZvcihWPWQ7bnVsbCE9PVY7KXtuPSExO3U9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1WOyl7dmFyIHk9Vi5lZmZlY3RUYWc7eSYxNiYmb2UoVi5zdGF0ZU5vZGUsXCJcIik7aWYoeSYxMjgpe3ZhciBCPVYuYWx0ZXJuYXRlO2lmKG51bGwhPT1CKXt2YXIgcj1CLnJlZjtudWxsIT09ciYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiByP3IobnVsbCk6ci5jdXJyZW50PW51bGwpfX1zd2l0Y2goeSYxNCl7Y2FzZSAyOkpoKFYpO1YuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6SmgoVik7XHJcblYuZWZmZWN0VGFnJj0tMztLaChWLmFsdGVybmF0ZSxWKTticmVhaztjYXNlIDQ6S2goVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA4Ono9VjtIaCh6KTt6LnJldHVybj1udWxsO3ouY2hpbGQ9bnVsbDt6Lm1lbW9pemVkU3RhdGU9bnVsbDt6LnVwZGF0ZVF1ZXVlPW51bGw7dmFyIE89ei5hbHRlcm5hdGU7bnVsbCE9PU8mJihPLnJldHVybj1udWxsLE8uY2hpbGQ9bnVsbCxPLm1lbW9pemVkU3RhdGU9bnVsbCxPLnVwZGF0ZVF1ZXVlPW51bGwpfVY9Vi5uZXh0RWZmZWN0fX1jYXRjaCh1Yil7bj0hMCx1PXVifW4mJihudWxsPT09Vj90KFwiMTc4XCIpOnZvaWQgMCxEaChWLHUpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1yPXplO0I9VGQoKTt5PXIuZm9jdXNlZEVsZW07bj1yLnNlbGVjdGlvblJhbmdlO2lmKEIhPT15JiZ5JiZ5Lm93bmVyRG9jdW1lbnQmJlNkKHkub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQseSkpe251bGwhPT1uJiZVZCh5KSYmKEI9bi5zdGFydCxyPW4uZW5kLFxyXG52b2lkIDA9PT1yJiYocj1CKSxcInNlbGVjdGlvblN0YXJ0XCJpbiB5Pyh5LnNlbGVjdGlvblN0YXJ0PUIseS5zZWxlY3Rpb25FbmQ9TWF0aC5taW4ocix5LnZhbHVlLmxlbmd0aCkpOihyPShCPXkub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZCLmRlZmF1bHRWaWV3fHx3aW5kb3csci5nZXRTZWxlY3Rpb24mJihyPXIuZ2V0U2VsZWN0aW9uKCksdT15LnRleHRDb250ZW50Lmxlbmd0aCxPPU1hdGgubWluKG4uc3RhcnQsdSksbj12b2lkIDA9PT1uLmVuZD9POk1hdGgubWluKG4uZW5kLHUpLCFyLmV4dGVuZCYmTz5uJiYodT1uLG49TyxPPXUpLHU9UmQoeSxPKSx6PVJkKHksbiksdSYmeiYmKDEhPT1yLnJhbmdlQ291bnR8fHIuYW5jaG9yTm9kZSE9PXUubm9kZXx8ci5hbmNob3JPZmZzZXQhPT11Lm9mZnNldHx8ci5mb2N1c05vZGUhPT16Lm5vZGV8fHIuZm9jdXNPZmZzZXQhPT16Lm9mZnNldCkmJihCPUIuY3JlYXRlUmFuZ2UoKSxCLnNldFN0YXJ0KHUubm9kZSx1Lm9mZnNldCksci5yZW1vdmVBbGxSYW5nZXMoKSxcclxuTz5uPyhyLmFkZFJhbmdlKEIpLHIuZXh0ZW5kKHoubm9kZSx6Lm9mZnNldCkpOihCLnNldEVuZCh6Lm5vZGUsei5vZmZzZXQpLHIuYWRkUmFuZ2UoQikpKSkpKTtCPVtdO2ZvcihyPXk7cj1yLnBhcmVudE5vZGU7KTE9PT1yLm5vZGVUeXBlJiZCLnB1c2goe2VsZW1lbnQ6cixsZWZ0OnIuc2Nyb2xsTGVmdCx0b3A6ci5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgeS5mb2N1cyYmeS5mb2N1cygpO2Zvcih5PTA7eTxCLmxlbmd0aDt5Kyspcj1CW3ldLHIuZWxlbWVudC5zY3JvbGxMZWZ0PXIubGVmdCxyLmVsZW1lbnQuc2Nyb2xsVG9wPXIudG9wfXplPW51bGw7SGQ9ISF5ZTt5ZT1udWxsO2EuY3VycmVudD1iO2ZvcihWPWQ7bnVsbCE9PVY7KXt5PSExO0I9dm9pZCAwO3RyeXtmb3Iocj1hLE89YztudWxsIT09Vjspe3ZhciBxYT1WLmVmZmVjdFRhZztpZihxYSYzNil7dmFyIFJiPVYuYWx0ZXJuYXRlO249Vjt1PU87c3dpdGNoKG4udGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OkVoKFhmLFxyXG5ZZixuKTticmVhaztjYXNlIDE6dmFyIGlkPW4uc3RhdGVOb2RlO2lmKG4uZWZmZWN0VGFnJjQpaWYobnVsbD09PVJiKWlkLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgZGo9bi5lbGVtZW50VHlwZT09PW4udHlwZT9SYi5tZW1vaXplZFByb3BzOlAobi50eXBlLFJiLm1lbW9pemVkUHJvcHMpO2lkLmNvbXBvbmVudERpZFVwZGF0ZShkaixSYi5tZW1vaXplZFN0YXRlLGlkLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX12YXIgdGg9bi51cGRhdGVRdWV1ZTtudWxsIT09dGgmJnBoKG4sdGgsaWQsdSk7YnJlYWs7Y2FzZSAzOnZhciB1aD1uLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT11aCl7ej1udWxsO2lmKG51bGwhPT1uLmNoaWxkKXN3aXRjaChuLmNoaWxkLnRhZyl7Y2FzZSA1Ono9bi5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOno9bi5jaGlsZC5zdGF0ZU5vZGV9cGgobix1aCx6LHUpfWJyZWFrO2Nhc2UgNTp2YXIgZWo9bi5zdGF0ZU5vZGU7bnVsbD09PVxyXG5SYiYmbi5lZmZlY3RUYWcmNCYmQWUobi50eXBlLG4ubWVtb2l6ZWRQcm9wcykmJmVqLmZvY3VzKCk7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OnQoXCIxNjNcIil9fWlmKHFhJjEyOCl7dmFyIGpkPVYucmVmO2lmKG51bGwhPT1qZCl7dmFyIHZoPVYuc3RhdGVOb2RlO3N3aXRjaChWLnRhZyl7Y2FzZSA1OnZhciBOZT12aDticmVhaztkZWZhdWx0Ok5lPXZofVwiZnVuY3Rpb25cIj09PXR5cGVvZiBqZD9qZChOZSk6amQuY3VycmVudD1OZX19cWEmNTEyJiYoYWk9cik7Vj1WLm5leHRFZmZlY3R9fWNhdGNoKHViKXt5PSEwLEI9dWJ9eSYmKG51bGw9PT1WP3QoXCIxNzhcIik6dm9pZCAwLERoKFYsQiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfW51bGwhPT1kJiZudWxsIT09YWkmJihxYT1laS5iaW5kKG51bGwsYSxkKSxiaT1FZShxYSksY2k9cWEpO1doPSRoPSExO1wiZnVuY3Rpb25cIj09PVxyXG50eXBlb2YgVmUmJlZlKGIuc3RhdGVOb2RlKTtxYT1iLmV4cGlyYXRpb25UaW1lO2I9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2I9Yj5xYT9iOnFhOzA9PT1iJiYoUWg9bnVsbCk7YS5leHBpcmF0aW9uVGltZT1iO2EuZmluaXNoZWRXb3JrPW51bGx9ZnVuY3Rpb24gT2goYSl7bnVsbD09PXZpP3QoXCIyNDZcIik6dm9pZCAwO3ZpLmV4cGlyYXRpb25UaW1lPTA7d2l8fCh3aT0hMCx4aT1hKX1mdW5jdGlvbiBQaShhLGIpe3ZhciBjPVo7Wj0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXsoWj1jKXx8V3x8TGkoMTA3Mzc0MTgyMywhMSl9fWZ1bmN0aW9uIFFpKGEsYil7aWYoWiYmIXlpKXt5aT0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXt5aT0hMX19cmV0dXJuIGEoYil9XHJcbmZ1bmN0aW9uIFJpKGEsYixjKXtpZihtaSlyZXR1cm4gYShiLGMpO1p8fFd8fDA9PT1uaXx8KExpKG5pLCExKSxuaT0wKTt2YXIgZD1taSxlPVo7Wj1taT0hMDt0cnl7cmV0dXJuIGEoYixjKX1maW5hbGx5e21pPWQsKFo9ZSl8fFd8fExpKDEwNzM3NDE4MjMsITEpfX1cclxuZnVuY3Rpb24gU2koYSxiLGMsZCxlKXt2YXIgZj1iLmN1cnJlbnQ7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtiOnsyPT09a2QoYykmJjE9PT1jLnRhZz92b2lkIDA6dChcIjE3MFwiKTt2YXIgZz1jO2Rve3N3aXRjaChnLnRhZyl7Y2FzZSAzOmc9Zy5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihNKGcudHlwZSkpe2c9Zy5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19Zz1nLnJldHVybn13aGlsZShudWxsIT09Zyk7dChcIjE3MVwiKTtnPXZvaWQgMH1pZigxPT09Yy50YWcpe3ZhciBoPWMudHlwZTtpZihNKGgpKXtjPVNlKGMsaCxnKTticmVhayBhfX1jPWd9ZWxzZSBjPUxlO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9ZTtlPXJmKGQpO2UucGF5bG9hZD17ZWxlbWVudDphfTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiYoZS5jYWxsYmFjaz1iKTtcclxuc2YoKTt0ZihmLGUpO3VmKGYsZCk7cmV0dXJuIGR9ZnVuY3Rpb24gVGkoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9cGYoKTtlPXFmKGYsZSk7cmV0dXJuIFNpKGEsYixjLGUsZCl9ZnVuY3Rpb24gVWkoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBWaShhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOiRiLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxyXG5EYj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOkNjKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1NYShkKTtlP3ZvaWQgMDp0KFwiOTBcIik7V2IoZCk7Q2MoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhlKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZlZShhLCEhYy5tdWx0aXBsZSxiLCExKX19O1xyXG5mdW5jdGlvbiBXaShhKXt2YXIgYj0xMDczNzQxODIyLTI1KigoKDEwNzM3NDE4MjItcGYoKSs1MDApLzI1fDApKzEpO2I+PVVoJiYoYj1VaC0xKTt0aGlzLl9leHBpcmF0aW9uVGltZT1VaD1iO3RoaXMuX3Jvb3Q9YTt0aGlzLl9jYWxsYmFja3M9dGhpcy5fbmV4dD1udWxsO3RoaXMuX2hhc0NoaWxkcmVuPXRoaXMuX2RpZENvbXBsZXRlPSExO3RoaXMuX2NoaWxkcmVuPW51bGw7dGhpcy5fZGVmZXI9ITB9V2kucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXt0aGlzLl9kZWZlcj92b2lkIDA6dChcIjI1MFwiKTt0aGlzLl9oYXNDaGlsZHJlbj0hMDt0aGlzLl9jaGlsZHJlbj1hO3ZhciBiPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxjPXRoaXMuX2V4cGlyYXRpb25UaW1lLGQ9bmV3IFhpO1NpKGEsYixudWxsLGMsZC5fb25Db21taXQpO3JldHVybiBkfTtcclxuV2kucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tcGxldGUpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xyXG5XaS5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGI9YS5maXJzdEJhdGNoO3RoaXMuX2RlZmVyJiZudWxsIT09Yj92b2lkIDA6dChcIjI1MVwiKTtpZih0aGlzLl9oYXNDaGlsZHJlbil7dmFyIGM9dGhpcy5fZXhwaXJhdGlvblRpbWU7aWYoYiE9PXRoaXMpe3RoaXMuX2hhc0NoaWxkcmVuJiYoYz10aGlzLl9leHBpcmF0aW9uVGltZT1iLl9leHBpcmF0aW9uVGltZSx0aGlzLnJlbmRlcih0aGlzLl9jaGlsZHJlbikpO2Zvcih2YXIgZD1udWxsLGU9YjtlIT09dGhpczspZD1lLGU9ZS5fbmV4dDtudWxsPT09ZD90KFwiMjUxXCIpOnZvaWQgMDtkLl9uZXh0PWUuX25leHQ7dGhpcy5fbmV4dD1iO2EuZmlyc3RCYXRjaD10aGlzfXRoaXMuX2RlZmVyPSExO0lpKGEsYyk7Yj10aGlzLl9uZXh0O3RoaXMuX25leHQ9bnVsbDtiPWEuZmlyc3RCYXRjaD1iO251bGwhPT1iJiZiLl9oYXNDaGlsZHJlbiYmYi5yZW5kZXIoYi5fY2hpbGRyZW4pfWVsc2UgdGhpcy5fbmV4dD1cclxubnVsbCx0aGlzLl9kZWZlcj0hMX07V2kucHJvdG90eXBlLl9vbkNvbXBsZXRlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbXBsZXRlKXt0aGlzLl9kaWRDb21wbGV0ZT0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspKDAsYVtiXSkoKX19O2Z1bmN0aW9uIFhpKCl7dGhpcy5fY2FsbGJhY2tzPW51bGw7dGhpcy5fZGlkQ29tbWl0PSExO3RoaXMuX29uQ29tbWl0PXRoaXMuX29uQ29tbWl0LmJpbmQodGhpcyl9WGkucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tbWl0KWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcclxuWGkucHJvdG90eXBlLl9vbkNvbW1pdD1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21taXQpe3RoaXMuX2RpZENvbW1pdD0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjE5MVwiLGMpOnZvaWQgMDtjKCl9fX07XHJcbmZ1bmN0aW9uIFlpKGEsYixjKXtiPU4oMyxudWxsLG51bGwsYj8zOjApO2E9e2N1cnJlbnQ6Yixjb250YWluZXJJbmZvOmEscGVuZGluZ0NoaWxkcmVuOm51bGwscGluZ0NhY2hlOm51bGwsZWFybGllc3RQZW5kaW5nVGltZTowLGxhdGVzdFBlbmRpbmdUaW1lOjAsZWFybGllc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFBpbmdlZFRpbWU6MCxkaWRFcnJvcjohMSxwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU6MCxmaW5pc2hlZFdvcms6bnVsbCx0aW1lb3V0SGFuZGxlOi0xLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YyxuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjowLGV4cGlyYXRpb25UaW1lOjAsZmlyc3RCYXRjaDpudWxsLG5leHRTY2hlZHVsZWRSb290Om51bGx9O3RoaXMuX2ludGVybmFsUm9vdD1iLnN0YXRlTm9kZT1hfVxyXG5ZaS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5faW50ZXJuYWxSb290LGQ9bmV3IFhpO2I9dm9pZCAwPT09Yj9udWxsOmI7bnVsbCE9PWImJmQudGhlbihiKTtUaShhLGMsbnVsbCxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1lpLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2ludGVybmFsUm9vdCxjPW5ldyBYaTthPXZvaWQgMD09PWE/bnVsbDphO251bGwhPT1hJiZjLnRoZW4oYSk7VGkobnVsbCxiLG51bGwsYy5fb25Db21taXQpO3JldHVybiBjfTtZaS5wcm90b3R5cGUubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLl9pbnRlcm5hbFJvb3QsZT1uZXcgWGk7Yz12b2lkIDA9PT1jP251bGw6YztudWxsIT09YyYmZS50aGVuKGMpO1RpKGIsZCxhLGUuX29uQ29tbWl0KTtyZXR1cm4gZX07XHJcbllpLnByb3RvdHlwZS5jcmVhdGVCYXRjaD1mdW5jdGlvbigpe3ZhciBhPW5ldyBXaSh0aGlzKSxiPWEuX2V4cGlyYXRpb25UaW1lLGM9dGhpcy5faW50ZXJuYWxSb290LGQ9Yy5maXJzdEJhdGNoO2lmKG51bGw9PT1kKWMuZmlyc3RCYXRjaD1hLGEuX25leHQ9bnVsbDtlbHNle2ZvcihjPW51bGw7bnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPj1iOyljPWQsZD1kLl9uZXh0O2EuX25leHQ9ZDtudWxsIT09YyYmKGMuX25leHQ9YSl9cmV0dXJuIGF9O2Z1bmN0aW9uIFppKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1KYj1QaTtLYj1SaTtMYj1mdW5jdGlvbigpe1d8fDA9PT1uaXx8KExpKG5pLCExKSxuaT0wKX07XHJcbmZ1bmN0aW9uICRpKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgWWkoYSwhMSxiKX1cclxuZnVuY3Rpb24gYWooYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBnPWU7ZT1mdW5jdGlvbigpe3ZhciBhPVVpKGYuX2ludGVybmFsUm9vdCk7Zy5jYWxsKGEpfX1udWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9JGkoYyxkKTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9VWkoZi5faW50ZXJuYWxSb290KTtoLmNhbGwoYSl9fVFpKGZ1bmN0aW9uKCl7bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX0pfXJldHVybiBVaShmLl9pbnRlcm5hbFJvb3QpfVxyXG5mdW5jdGlvbiBiaihhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO1ppKGIpP3ZvaWQgMDp0KFwiMjAwXCIpO3JldHVybiBWaShhLGIsbnVsbCxjKX1cclxudmFyIGZqPXtjcmVhdGVQb3J0YWw6YmosZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj90KFwiMTg4XCIpOnQoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9bmQoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtaaShiKT92b2lkIDA6dChcIjIwMFwiKTtyZXR1cm4gYWoobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7WmkoYik/dm9pZCAwOnQoXCIyMDBcIik7cmV0dXJuIGFqKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtaaShjKT92b2lkIDA6dChcIjIwMFwiKTtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/XHJcbnQoXCIzOFwiKTp2b2lkIDA7cmV0dXJuIGFqKGEsYixjLCExLGQpfSx1bm1vdW50Q29tcG9uZW50QXROb2RlOmZ1bmN0aW9uKGEpe1ppKGEpP3ZvaWQgMDp0KFwiNDBcIik7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oUWkoZnVuY3Rpb24oKXthaihudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsfSl9KSwhMCk6ITF9LHVuc3RhYmxlX2NyZWF0ZVBvcnRhbDpmdW5jdGlvbigpe3JldHVybiBiai5hcHBseSh2b2lkIDAsYXJndW1lbnRzKX0sdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM6UGksdW5zdGFibGVfaW50ZXJhY3RpdmVVcGRhdGVzOlJpLGZsdXNoU3luYzpmdW5jdGlvbihhLGIpe1c/dChcIjE4N1wiKTp2b2lkIDA7dmFyIGM9WjtaPSEwO3RyeXtyZXR1cm4gcmkoYSxiKX1maW5hbGx5e1o9YyxMaSgxMDczNzQxODIzLCExKX19LHVuc3RhYmxlX2NyZWF0ZVJvb3Q6Y2osdW5zdGFibGVfZmx1c2hDb250cm9sbGVkOmZ1bmN0aW9uKGEpe3ZhciBiPVxyXG5aO1o9ITA7dHJ5e3JpKGEpfWZpbmFsbHl7KFo9Yil8fFd8fExpKDEwNzM3NDE4MjMsITEpfX0sX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50czpbS2EsTGEsTWEsRGEuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lLHJhLFNhLGZ1bmN0aW9uKGEpe0FhKGEsUmEpfSxIYixJYixKZCxGYV19fTtmdW5jdGlvbiBjaihhLGIpe1ppKGEpP3ZvaWQgMDp0KFwiMjk5XCIsXCJ1bnN0YWJsZV9jcmVhdGVSb290XCIpO3JldHVybiBuZXcgWWkoYSwhMCxudWxsIT1iJiYhMD09PWIuaHlkcmF0ZSl9XHJcbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBZZShwKHt9LGEse292ZXJyaWRlUHJvcHM6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpYYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9bmQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6SmEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi44LjBcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTt2YXIgZ2o9e2RlZmF1bHQ6Zmp9LGhqPWdqJiZmanx8Z2o7bW9kdWxlLmV4cG9ydHM9aGouZGVmYXVsdHx8aGo7XHJcbiIsIid1c2Ugc3RyaWN0JztcclxuXHJcbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xyXG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cclxuICBpZiAoXHJcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxyXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xyXG4gICkge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xyXG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXHJcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXHJcbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XHJcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxyXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXHJcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxyXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cclxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XHJcbiAgfVxyXG4gIHRyeSB7XHJcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxyXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXHJcbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxyXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gIH1cclxufVxyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcclxuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcclxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cclxuICBjaGVja0RDRSgpO1xyXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XHJcbn0gZWxzZSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcclxufVxyXG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcclxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcclxuICpcclxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnO3ZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1xyXG5TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTo2MDEyMCxyPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsdD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LHY9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsdz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx5PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O1xyXG5mdW5jdGlvbiB6KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSB0OmNhc2UgcjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gQShhKXtyZXR1cm4geihhKT09PW19ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO1xyXG5leHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEEoYSl8fHooYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9QTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09a307ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09dH07XHJcbmV4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cH07XHJcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8YT09PXF8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eHx8YS4kJHR5cGVvZj09PXl8fGEuJCR0eXBlb2Y9PT12KX07ZXhwb3J0cy50eXBlT2Y9ejtcclxuIiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XHJcbn0gZWxzZSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XHJcbiAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XHJcbiAgICBvLl9fcHJvdG9fXyA9IHA7XHJcbiAgICByZXR1cm4gbztcclxuICB9O1xyXG5cclxuICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xyXG59IiwiaW1wb3J0IHNldFByb3RvdHlwZU9mIGZyb20gXCIuL3NldFByb3RvdHlwZU9mLmpzXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XHJcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XHJcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XHJcbiAgc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xyXG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XHJcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcclxuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XHJcblxyXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XHJcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcclxuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRhcmdldDtcclxuICB9O1xyXG5cclxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufSIsImZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aG5hbWUpIHtcclxuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XHJcbn1cclxuXHJcbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxyXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcclxuICBmb3IgKHZhciBpID0gaW5kZXgsIGsgPSBpICsgMSwgbiA9IGxpc3QubGVuZ3RoOyBrIDwgbjsgaSArPSAxLCBrICs9IDEpIHtcclxuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xyXG4gIH1cclxuXHJcbiAgbGlzdC5wb3AoKTtcclxufVxyXG5cclxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcclxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvLCBmcm9tKSB7XHJcbiAgaWYgKGZyb20gPT09IHVuZGVmaW5lZCkgZnJvbSA9ICcnO1xyXG5cclxuICB2YXIgdG9QYXJ0cyA9ICh0byAmJiB0by5zcGxpdCgnLycpKSB8fCBbXTtcclxuICB2YXIgZnJvbVBhcnRzID0gKGZyb20gJiYgZnJvbS5zcGxpdCgnLycpKSB8fCBbXTtcclxuXHJcbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcclxuICB2YXIgaXNGcm9tQWJzID0gZnJvbSAmJiBpc0Fic29sdXRlKGZyb20pO1xyXG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XHJcblxyXG4gIGlmICh0byAmJiBpc0Fic29sdXRlKHRvKSkge1xyXG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcclxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XHJcbiAgfSBlbHNlIGlmICh0b1BhcnRzLmxlbmd0aCkge1xyXG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXHJcbiAgICBmcm9tUGFydHMucG9wKCk7XHJcbiAgICBmcm9tUGFydHMgPSBmcm9tUGFydHMuY29uY2F0KHRvUGFydHMpO1xyXG4gIH1cclxuXHJcbiAgaWYgKCFmcm9tUGFydHMubGVuZ3RoKSByZXR1cm4gJy8nO1xyXG5cclxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaDtcclxuICBpZiAoZnJvbVBhcnRzLmxlbmd0aCkge1xyXG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xyXG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICB2YXIgdXAgPSAwO1xyXG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xyXG4gICAgdmFyIHBhcnQgPSBmcm9tUGFydHNbaV07XHJcblxyXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xyXG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcclxuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xyXG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcclxuICAgICAgdXArKztcclxuICAgIH0gZWxzZSBpZiAodXApIHtcclxuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XHJcbiAgICAgIHVwLS07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XHJcblxyXG4gIGlmIChcclxuICAgIG11c3RFbmRBYnMgJiZcclxuICAgIGZyb21QYXJ0c1swXSAhPT0gJycgJiZcclxuICAgICghZnJvbVBhcnRzWzBdIHx8ICFpc0Fic29sdXRlKGZyb21QYXJ0c1swXSkpXHJcbiAgKVxyXG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xyXG5cclxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcclxuXHJcbiAgaWYgKGhhc1RyYWlsaW5nU2xhc2ggJiYgcmVzdWx0LnN1YnN0cigtMSkgIT09ICcvJykgcmVzdWx0ICs9ICcvJztcclxuXHJcbiAgcmV0dXJuIHJlc3VsdDtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lO1xyXG4iLCJmdW5jdGlvbiB2YWx1ZU9mKG9iaikge1xyXG4gIHJldHVybiBvYmoudmFsdWVPZiA/IG9iai52YWx1ZU9mKCkgOiBPYmplY3QucHJvdG90eXBlLnZhbHVlT2YuY2FsbChvYmopO1xyXG59XHJcblxyXG5mdW5jdGlvbiB2YWx1ZUVxdWFsKGEsIGIpIHtcclxuICAvLyBUZXN0IGZvciBzdHJpY3QgZXF1YWxpdHkgZmlyc3QuXHJcbiAgaWYgKGEgPT09IGIpIHJldHVybiB0cnVlO1xyXG5cclxuICAvLyBPdGhlcndpc2UsIGlmIGVpdGhlciBvZiB0aGVtID09IG51bGwgdGhleSBhcmUgbm90IGVxdWFsLlxyXG4gIGlmIChhID09IG51bGwgfHwgYiA9PSBudWxsKSByZXR1cm4gZmFsc2U7XHJcblxyXG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICBBcnJheS5pc0FycmF5KGIpICYmXHJcbiAgICAgIGEubGVuZ3RoID09PSBiLmxlbmd0aCAmJlxyXG4gICAgICBhLmV2ZXJ5KGZ1bmN0aW9uKGl0ZW0sIGluZGV4KSB7XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoaXRlbSwgYltpbmRleF0pO1xyXG4gICAgICB9KVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGlmICh0eXBlb2YgYSA9PT0gJ29iamVjdCcgfHwgdHlwZW9mIGIgPT09ICdvYmplY3QnKSB7XHJcbiAgICB2YXIgYVZhbHVlID0gdmFsdWVPZihhKTtcclxuICAgIHZhciBiVmFsdWUgPSB2YWx1ZU9mKGIpO1xyXG5cclxuICAgIGlmIChhVmFsdWUgIT09IGEgfHwgYlZhbHVlICE9PSBiKSByZXR1cm4gdmFsdWVFcXVhbChhVmFsdWUsIGJWYWx1ZSk7XHJcblxyXG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIGEsIGIpKS5ldmVyeShmdW5jdGlvbihrZXkpIHtcclxuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoYVtrZXldLCBiW2tleV0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gZmFsc2U7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHZhbHVlRXF1YWw7XHJcbiIsInZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xyXG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xyXG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBtZXNzYWdlKSB7XHJcbiAgICBpZiAoY29uZGl0aW9uKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKGlzUHJvZHVjdGlvbikge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xyXG4gICAgfVxyXG4gICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCArIFwiOiBcIiArIChtZXNzYWdlIHx8ICcnKSk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcclxuIiwiaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xyXG5pbXBvcnQgcmVzb2x2ZVBhdGhuYW1lIGZyb20gJ3Jlc29sdmUtcGF0aG5hbWUnO1xyXG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XHJcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XHJcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xyXG5cclxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcclxuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGggOiAnLycgKyBwYXRoO1xyXG59XHJcbmZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcclxuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcclxufVxyXG5mdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcclxuICByZXR1cm4gcGF0aC50b0xvd2VyQ2FzZSgpLmluZGV4T2YocHJlZml4LnRvTG93ZXJDYXNlKCkpID09PSAwICYmICcvPyMnLmluZGV4T2YocGF0aC5jaGFyQXQocHJlZml4Lmxlbmd0aCkpICE9PSAtMTtcclxufVxyXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xyXG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xyXG59XHJcbmZ1bmN0aW9uIHN0cmlwVHJhaWxpbmdTbGFzaChwYXRoKSB7XHJcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcclxufVxyXG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xyXG4gIHZhciBwYXRobmFtZSA9IHBhdGggfHwgJy8nO1xyXG4gIHZhciBzZWFyY2ggPSAnJztcclxuICB2YXIgaGFzaCA9ICcnO1xyXG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XHJcblxyXG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XHJcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyKGhhc2hJbmRleCk7XHJcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xyXG4gIH1cclxuXHJcbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xyXG5cclxuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XHJcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xyXG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcclxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcclxuICAgIGhhc2g6IGhhc2ggPT09ICcjJyA/ICcnIDogaGFzaFxyXG4gIH07XHJcbn1cclxuZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xyXG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxyXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXHJcbiAgICAgIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xyXG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xyXG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogXCI/XCIgKyBzZWFyY2g7XHJcbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogXCIjXCIgKyBoYXNoO1xyXG4gIHJldHVybiBwYXRoO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcclxuICB2YXIgbG9jYXRpb247XHJcblxyXG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcclxuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcclxuICAgIGxvY2F0aW9uID0gcGFyc2VQYXRoKHBhdGgpO1xyXG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcclxuICB9IGVsc2Uge1xyXG4gICAgLy8gT25lLWFyZyBmb3JtOiBwdXNoKGxvY2F0aW9uKVxyXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XHJcbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcclxuXHJcbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XHJcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XHJcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcclxuICAgIH1cclxuXHJcbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcclxuICB9IGNhdGNoIChlKSB7XHJcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XHJcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRocm93IGU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XHJcblxyXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcclxuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxyXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xyXG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcclxuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcclxuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSByZXNvbHZlUGF0aG5hbWUobG9jYXRpb24ucGF0aG5hbWUsIGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSk7XHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIC8vIFdoZW4gdGhlcmUgaXMgbm8gcHJpb3IgbG9jYXRpb24gYW5kIHBhdGhuYW1lIGlzIGVtcHR5LCBzZXQgaXQgdG8gL1xyXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xyXG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBsb2NhdGlvbjtcclxufVxyXG5mdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbChhLCBiKSB7XHJcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcclxuICB2YXIgcHJvbXB0ID0gbnVsbDtcclxuXHJcbiAgZnVuY3Rpb24gc2V0UHJvbXB0KG5leHRQcm9tcHQpIHtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpIDogdm9pZCAwO1xyXG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBjYWxsYmFjaykge1xyXG4gICAgLy8gVE9ETzogSWYgYW5vdGhlciB0cmFuc2l0aW9uIHN0YXJ0cyB3aGlsZSB3ZSdyZSBzdGlsbCBjb25maXJtaW5nXHJcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXHJcbiAgICAvLyBiZXN0IHdheSB0byBoYW5kbGUgdGhpcy5cclxuICAgIGlmIChwcm9tcHQgIT0gbnVsbCkge1xyXG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcclxuXHJcbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihyZXN1bHQsIGNhbGxiYWNrKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKSA6IHZvaWQgMDtcclxuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXHJcbiAgICAgICAgY2FsbGJhY2socmVzdWx0ICE9PSBmYWxzZSk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNhbGxiYWNrKHRydWUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xyXG5cclxuICBmdW5jdGlvbiBhcHBlbmRMaXN0ZW5lcihmbikge1xyXG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcclxuXHJcbiAgICBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcclxuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XHJcbiAgICB9XHJcblxyXG4gICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgaXNBY3RpdmUgPSBmYWxzZTtcclxuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xyXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XHJcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XHJcbiAgICB9XHJcblxyXG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XHJcbiAgICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh2b2lkIDAsIGFyZ3MpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4ge1xyXG4gICAgc2V0UHJvbXB0OiBzZXRQcm9tcHQsXHJcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxyXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxyXG4gICAgbm90aWZ5TGlzdGVuZXJzOiBub3RpZnlMaXN0ZW5lcnNcclxuICB9O1xyXG59XHJcblxyXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcclxuZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XHJcbiAgY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFsZXJ0XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xyXG4gKiBjaGFuZ2VkIHRvIGF2b2lkIGZhbHNlIG5lZ2F0aXZlcyBmb3IgV2luZG93cyBQaG9uZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xyXG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xyXG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xyXG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXHJcbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKSB7XHJcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSA9PT0gLTE7XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cclxuICovXHJcblxyXG5mdW5jdGlvbiBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpIHtcclxuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXHJcbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcclxuICogY29udGFpbmluZyB1bmRlZmluZWQgc3RhdGUgd2hlbiBwcmVzc2luZyB0aGUgYmFjayBidXR0b24uXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkge1xyXG4gIHJldHVybiBldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQ3JpT1MnKSA9PT0gLTE7XHJcbn1cclxuXHJcbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcclxudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcclxuXHJcbmZ1bmN0aW9uIGdldEhpc3RvcnlTdGF0ZSgpIHtcclxuICB0cnkge1xyXG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcclxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XHJcbiAgICByZXR1cm4ge307XHJcbiAgfVxyXG59XHJcbi8qKlxyXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcclxuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXHJcbiAqL1xyXG5cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KHByb3BzKSB7XHJcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcclxuICAgIHByb3BzID0ge307XHJcbiAgfVxyXG5cclxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xyXG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XHJcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcclxuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xyXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcclxuICAgICAgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IF9wcm9wcy5mb3JjZVJlZnJlc2gsXHJcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcclxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXHJcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcclxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXHJcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xyXG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XHJcblxyXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKGhpc3RvcnlTdGF0ZSkge1xyXG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXHJcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXHJcbiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlO1xyXG5cclxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxyXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcclxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcclxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xyXG4gICAgdmFyIHBhdGggPSBwYXRobmFtZSArIHNlYXJjaCArIGhhc2g7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xyXG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XHJcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XHJcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XHJcbiAgfVxyXG5cclxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xyXG5cclxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcclxuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XHJcblxyXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xyXG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cclxuICAgIGlmIChpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSkgcmV0dXJuO1xyXG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xyXG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XHJcbiAgfVxyXG5cclxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XHJcblxyXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xyXG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xyXG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcclxuICAgICAgc2V0U3RhdGUoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcclxuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcclxuICAgICAgICBpZiAob2spIHtcclxuICAgICAgICAgIHNldFN0YXRlKHtcclxuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXHJcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcclxuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcclxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cclxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBrZXlzIHdlIGRvbid0IGtub3cuXHJcblxyXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xyXG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcclxuICAgIHZhciBmcm9tSW5kZXggPSBhbGxLZXlzLmluZGV4T2YoZnJvbUxvY2F0aW9uLmtleSk7XHJcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcclxuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XHJcblxyXG4gICAgaWYgKGRlbHRhKSB7XHJcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XHJcbiAgICAgIGdvKGRlbHRhKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XHJcbiAgdmFyIGFsbEtleXMgPSBbaW5pdGlhbExvY2F0aW9uLmtleV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcclxuXHJcbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xyXG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XHJcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xyXG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XHJcbiAgICAgIGlmICghb2spIHJldHVybjtcclxuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcclxuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcclxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XHJcblxyXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xyXG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHtcclxuICAgICAgICAgIGtleToga2V5LFxyXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXHJcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XHJcblxyXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcclxuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XHJcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xyXG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xyXG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xyXG4gICAgICAgICAgc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcclxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xyXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XHJcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xyXG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XHJcbiAgICAgIGlmICghb2spIHJldHVybjtcclxuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcclxuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcclxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XHJcblxyXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xyXG4gICAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKHtcclxuICAgICAgICAgIGtleToga2V5LFxyXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXHJcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XHJcblxyXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcclxuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcclxuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XHJcbiAgICAgICAgICBzZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxyXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XHJcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ28obikge1xyXG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcclxuICAgIGdvKC0xKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcclxuICAgIGdvKDEpO1xyXG4gIH1cclxuXHJcbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xyXG5cclxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xyXG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcclxuXHJcbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xyXG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XHJcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcclxuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xyXG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XHJcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcclxuXHJcbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XHJcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcclxuICAgICAgcHJvbXB0ID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcclxuXHJcbiAgICBpZiAoIWlzQmxvY2tlZCkge1xyXG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcclxuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XHJcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XHJcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xyXG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xyXG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XHJcbiAgICAgIHVubGlzdGVuKCk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgdmFyIGhpc3RvcnkgPSB7XHJcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxyXG4gICAgYWN0aW9uOiAnUE9QJyxcclxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXHJcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxyXG4gICAgcHVzaDogcHVzaCxcclxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXHJcbiAgICBnbzogZ28sXHJcbiAgICBnb0JhY2s6IGdvQmFjayxcclxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxyXG4gICAgYmxvY2s6IGJsb2NrLFxyXG4gICAgbGlzdGVuOiBsaXN0ZW5cclxuICB9O1xyXG4gIHJldHVybiBoaXN0b3J5O1xyXG59XHJcblxyXG52YXIgSGFzaENoYW5nZUV2ZW50JDEgPSAnaGFzaGNoYW5nZSc7XHJcbnZhciBIYXNoUGF0aENvZGVycyA9IHtcclxuICBoYXNoYmFuZzoge1xyXG4gICAgZW5jb2RlUGF0aDogZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKSB7XHJcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcclxuICAgIH0sXHJcbiAgICBkZWNvZGVQYXRoOiBmdW5jdGlvbiBkZWNvZGVQYXRoKHBhdGgpIHtcclxuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XHJcbiAgICB9XHJcbiAgfSxcclxuICBub3NsYXNoOiB7XHJcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcclxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxyXG4gIH0sXHJcbiAgc2xhc2g6IHtcclxuICAgIGVuY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaCxcclxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxyXG4gIH1cclxufTtcclxuXHJcbmZ1bmN0aW9uIHN0cmlwSGFzaCh1cmwpIHtcclxuICB2YXIgaGFzaEluZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcclxuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/IHVybCA6IHVybC5zbGljZSgwLCBoYXNoSW5kZXgpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcclxuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XHJcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcclxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xyXG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcclxuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/ICcnIDogaHJlZi5zdWJzdHJpbmcoaGFzaEluZGV4ICsgMSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XHJcbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xyXG59XHJcblxyXG5mdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xyXG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZikgKyAnIycgKyBwYXRoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3RvcnkocHJvcHMpIHtcclxuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xyXG4gICAgcHJvcHMgPSB7fTtcclxuICB9XHJcblxyXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdIYXNoIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XHJcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcclxuICB2YXIgY2FuR29XaXRob3V0UmVsb2FkID0gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKTtcclxuICB2YXIgX3Byb3BzID0gcHJvcHMsXHJcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxyXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXHJcbiAgICAgIF9wcm9wcyRoYXNoVHlwZSA9IF9wcm9wcy5oYXNoVHlwZSxcclxuICAgICAgaGFzaFR5cGUgPSBfcHJvcHMkaGFzaFR5cGUgPT09IHZvaWQgMCA/ICdzbGFzaCcgOiBfcHJvcHMkaGFzaFR5cGU7XHJcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcclxuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxyXG4gICAgICBlbmNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmVuY29kZVBhdGgsXHJcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcclxuXHJcbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oKSB7XHJcbiAgICB2YXIgcGF0aCA9IGRlY29kZVBhdGgoZ2V0SGFzaFBhdGgoKSk7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xyXG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XHJcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCk7XHJcbiAgfVxyXG5cclxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xyXG5cclxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcclxuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XHJcblxyXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XHJcbiAgfVxyXG5cclxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XHJcbiAgdmFyIGlnbm9yZVBhdGggPSBudWxsO1xyXG5cclxuICBmdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbCQkMShhLCBiKSB7XHJcbiAgICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2g7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xyXG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xyXG4gICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcclxuXHJcbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcclxuICAgICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBoYXZlIGEgcHJvcGVybHktZW5jb2RlZCBoYXNoLlxyXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcclxuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XHJcbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsJCQxKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXHJcblxyXG4gICAgICBpZiAoaWdub3JlUGF0aCA9PT0gY3JlYXRlUGF0aChsb2NhdGlvbikpIHJldHVybjsgLy8gSWdub3JlIHRoaXMgY2hhbmdlOyB3ZSBhbHJlYWR5IHNldFN0YXRlIGluIHB1c2gvcmVwbGFjZS5cclxuXHJcbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xyXG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XHJcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XHJcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xyXG4gICAgICBzZXRTdGF0ZSgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xyXG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xyXG4gICAgICAgIGlmIChvaykge1xyXG4gICAgICAgICAgc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcclxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xyXG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxyXG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2YgcGF0aHMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cclxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxyXG5cclxuICAgIHZhciB0b0luZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aCh0b0xvY2F0aW9uKSk7XHJcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xyXG4gICAgdmFyIGZyb21JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoZnJvbUxvY2F0aW9uKSk7XHJcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcclxuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XHJcblxyXG4gICAgaWYgKGRlbHRhKSB7XHJcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XHJcbiAgICAgIGdvKGRlbHRhKTtcclxuICAgIH1cclxuICB9IC8vIEVuc3VyZSB0aGUgaGFzaCBpcyBlbmNvZGVkIHByb3Blcmx5IGJlZm9yZSBkb2luZyBhbnl0aGluZyBlbHNlLlxyXG5cclxuXHJcbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xyXG4gIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XHJcbiAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xyXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xyXG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildOyAvLyBQdWJsaWMgaW50ZXJmYWNlXHJcblxyXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcclxuICAgIHZhciBiYXNlVGFnID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYmFzZScpO1xyXG4gICAgdmFyIGhyZWYgPSAnJztcclxuXHJcbiAgICBpZiAoYmFzZVRhZyAmJiBiYXNlVGFnLmdldEF0dHJpYnV0ZSgnaHJlZicpKSB7XHJcbiAgICAgIGhyZWYgPSBzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBocmVmICsgJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xyXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcclxuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XHJcbiAgICAgIGlmICghb2spIHJldHVybjtcclxuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcclxuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xyXG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcclxuXHJcbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xyXG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxyXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxyXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cclxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcclxuICAgICAgICBwdXNoSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xyXG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcclxuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XHJcbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XHJcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XHJcbiAgICAgICAgc2V0U3RhdGUoe1xyXG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXHJcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cclxuICAgICAgICB9KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBQVVNIIHRoZSBzYW1lIHBhdGg7IGEgbmV3IGVudHJ5IHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrJykgOiB2b2lkIDA7XHJcbiAgICAgICAgc2V0U3RhdGUoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcclxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XHJcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XHJcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xyXG4gICAgICBpZiAoIW9rKSByZXR1cm47XHJcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XHJcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcclxuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XHJcblxyXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcclxuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcclxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcclxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXHJcbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XHJcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XHJcbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcclxuICAgICAgc2V0U3RhdGUoe1xyXG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxyXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ28obikge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKSA6IHZvaWQgMDtcclxuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnb0JhY2soKSB7XHJcbiAgICBnbygtMSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XHJcbiAgICBnbygxKTtcclxuICB9XHJcblxyXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcclxuXHJcbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcclxuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XHJcblxyXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcclxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xyXG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XHJcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcclxuXHJcbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XHJcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcclxuICAgICAgcHJvbXB0ID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcclxuXHJcbiAgICBpZiAoIWlzQmxvY2tlZCkge1xyXG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcclxuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XHJcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XHJcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xyXG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xyXG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XHJcbiAgICAgIHVubGlzdGVuKCk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgdmFyIGhpc3RvcnkgPSB7XHJcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxyXG4gICAgYWN0aW9uOiAnUE9QJyxcclxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXHJcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxyXG4gICAgcHVzaDogcHVzaCxcclxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXHJcbiAgICBnbzogZ28sXHJcbiAgICBnb0JhY2s6IGdvQmFjayxcclxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxyXG4gICAgYmxvY2s6IGJsb2NrLFxyXG4gICAgbGlzdGVuOiBsaXN0ZW5cclxuICB9O1xyXG4gIHJldHVybiBoaXN0b3J5O1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XHJcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcclxufVxyXG4vKipcclxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXHJcbiAqL1xyXG5cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3RvcnkocHJvcHMpIHtcclxuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xyXG4gICAgcHJvcHMgPSB7fTtcclxuICB9XHJcblxyXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcclxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxyXG4gICAgICBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMuaW5pdGlhbEVudHJpZXMsXHJcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX3Byb3BzJGluaXRpYWxFbnRyaWVzID09PSB2b2lkIDAgPyBbJy8nXSA6IF9wcm9wcyRpbml0aWFsRW50cmllcyxcclxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IF9wcm9wcy5pbml0aWFsSW5kZXgsXHJcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHZvaWQgMCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxyXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcclxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XHJcbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcclxuXHJcbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XHJcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xyXG5cclxuICAgIGhpc3RvcnkubGVuZ3RoID0gaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XHJcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XHJcbiAgfVxyXG5cclxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xyXG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xyXG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycgPyBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBjcmVhdGVLZXkoKSkgOiBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xyXG4gIH0pOyAvLyBQdWJsaWMgaW50ZXJmYWNlXHJcblxyXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcclxuXHJcbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xyXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcclxuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XHJcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xyXG4gICAgICBpZiAoIW9rKSByZXR1cm47XHJcbiAgICAgIHZhciBwcmV2SW5kZXggPSBoaXN0b3J5LmluZGV4O1xyXG4gICAgICB2YXIgbmV4dEluZGV4ID0gcHJldkluZGV4ICsgMTtcclxuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xyXG5cclxuICAgICAgaWYgKG5leHRFbnRyaWVzLmxlbmd0aCA+IG5leHRJbmRleCkge1xyXG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIG5leHRFbnRyaWVzLnB1c2gobG9jYXRpb24pO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBzZXRTdGF0ZSh7XHJcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXHJcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxyXG4gICAgICAgIGluZGV4OiBuZXh0SW5kZXgsXHJcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcclxuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XHJcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xyXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcclxuICAgICAgaWYgKCFvaykgcmV0dXJuO1xyXG4gICAgICBoaXN0b3J5LmVudHJpZXNbaGlzdG9yeS5pbmRleF0gPSBsb2NhdGlvbjtcclxuICAgICAgc2V0U3RhdGUoe1xyXG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxyXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ28obikge1xyXG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGhpc3RvcnkuaW5kZXggKyBuLCAwLCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoIC0gMSk7XHJcbiAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XHJcbiAgICB2YXIgbG9jYXRpb24gPSBoaXN0b3J5LmVudHJpZXNbbmV4dEluZGV4XTtcclxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XHJcbiAgICAgIGlmIChvaykge1xyXG4gICAgICAgIHNldFN0YXRlKHtcclxuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxyXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxyXG4gICAgICAgICAgaW5kZXg6IG5leHRJbmRleFxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIE1pbWljIHRoZSBiZWhhdmlvciBvZiBET00gaGlzdG9yaWVzIGJ5XHJcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXHJcbiAgICAgICAgc2V0U3RhdGUoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnb0JhY2soKSB7XHJcbiAgICBnbygtMSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XHJcbiAgICBnbygxKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNhbkdvKG4pIHtcclxuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcclxuICAgIHJldHVybiBuZXh0SW5kZXggPj0gMCAmJiBuZXh0SW5kZXggPCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XHJcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcclxuICAgICAgcHJvbXB0ID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XHJcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xyXG4gIH1cclxuXHJcbiAgdmFyIGhpc3RvcnkgPSB7XHJcbiAgICBsZW5ndGg6IGVudHJpZXMubGVuZ3RoLFxyXG4gICAgYWN0aW9uOiAnUE9QJyxcclxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcclxuICAgIGluZGV4OiBpbmRleCxcclxuICAgIGVudHJpZXM6IGVudHJpZXMsXHJcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxyXG4gICAgcHVzaDogcHVzaCxcclxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXHJcbiAgICBnbzogZ28sXHJcbiAgICBnb0JhY2s6IGdvQmFjayxcclxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxyXG4gICAgY2FuR286IGNhbkdvLFxyXG4gICAgYmxvY2s6IGJsb2NrLFxyXG4gICAgbGlzdGVuOiBsaXN0ZW5cclxuICB9O1xyXG4gIHJldHVybiBoaXN0b3J5O1xyXG59XHJcblxyXG5leHBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgcGFyc2VQYXRoLCBjcmVhdGVQYXRoIH07XHJcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcclxuXHJcbnZhciBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgPSAxMDczNzQxODIzO1xyXG52YXIgY29tbW9uanNHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWxUaGlzIDogdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbCA6IHt9O1xyXG5cclxuZnVuY3Rpb24gZ2V0VW5pcXVlSWQoKSB7XHJcbiAgdmFyIGtleSA9ICdfX2dsb2JhbF91bmlxdWVfaWRfXyc7XHJcbiAgcmV0dXJuIGNvbW1vbmpzR2xvYmFsW2tleV0gPSAoY29tbW9uanNHbG9iYWxba2V5XSB8fCAwKSArIDE7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9iamVjdElzKHgsIHkpIHtcclxuICBpZiAoeCA9PT0geSkge1xyXG4gICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xyXG4gIH0gZWxzZSB7XHJcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlRXZlbnRFbWl0dGVyKHZhbHVlKSB7XHJcbiAgdmFyIGhhbmRsZXJzID0gW107XHJcbiAgcmV0dXJuIHtcclxuICAgIG9uOiBmdW5jdGlvbiBvbihoYW5kbGVyKSB7XHJcbiAgICAgIGhhbmRsZXJzLnB1c2goaGFuZGxlcik7XHJcbiAgICB9LFxyXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoaGFuZGxlcikge1xyXG4gICAgICBoYW5kbGVycyA9IGhhbmRsZXJzLmZpbHRlcihmdW5jdGlvbiAoaCkge1xyXG4gICAgICAgIHJldHVybiBoICE9PSBoYW5kbGVyO1xyXG4gICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcclxuICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgfSxcclxuICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xyXG4gICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xyXG4gICAgICBoYW5kbGVycy5mb3JFYWNoKGZ1bmN0aW9uIChoYW5kbGVyKSB7XHJcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIodmFsdWUsIGNoYW5nZWRCaXRzKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxufVxyXG5cclxuZnVuY3Rpb24gb25seUNoaWxkKGNoaWxkcmVuKSB7XHJcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW5bMF0gOiBjaGlsZHJlbjtcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlUmVhY3RDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpIHtcclxuICB2YXIgX1Byb3ZpZGVyJGNoaWxkQ29udGV4LCBfQ29uc3VtZXIkY29udGV4dFR5cGU7XHJcblxyXG4gIHZhciBjb250ZXh0UHJvcCA9ICdfX2NyZWF0ZS1yZWFjdC1jb250ZXh0LScgKyBnZXRVbmlxdWVJZCgpICsgJ19fJztcclxuXHJcbiAgdmFyIFByb3ZpZGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50KSB7XHJcbiAgICBfaW5oZXJpdHNMb29zZShQcm92aWRlciwgX0NvbXBvbmVudCk7XHJcblxyXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XHJcbiAgICAgIHZhciBfdGhpcztcclxuXHJcbiAgICAgIF90aGlzID0gX0NvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcbiAgICAgIF90aGlzLmVtaXR0ZXIgPSBjcmVhdGVFdmVudEVtaXR0ZXIoX3RoaXMucHJvcHMudmFsdWUpO1xyXG4gICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIF9wcm90byA9IFByb3ZpZGVyLnByb3RvdHlwZTtcclxuXHJcbiAgICBfcHJvdG8uZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xyXG4gICAgICB2YXIgX3JlZjtcclxuXHJcbiAgICAgIHJldHVybiBfcmVmID0ge30sIF9yZWZbY29udGV4dFByb3BdID0gdGhpcy5lbWl0dGVyLCBfcmVmO1xyXG4gICAgfTtcclxuXHJcbiAgICBfcHJvdG8uY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XHJcbiAgICAgIGlmICh0aGlzLnByb3BzLnZhbHVlICE9PSBuZXh0UHJvcHMudmFsdWUpIHtcclxuICAgICAgICB2YXIgb2xkVmFsdWUgPSB0aGlzLnByb3BzLnZhbHVlO1xyXG4gICAgICAgIHZhciBuZXdWYWx1ZSA9IG5leHRQcm9wcy52YWx1ZTtcclxuICAgICAgICB2YXIgY2hhbmdlZEJpdHM7XHJcblxyXG4gICAgICAgIGlmIChvYmplY3RJcyhvbGRWYWx1ZSwgbmV3VmFsdWUpKSB7XHJcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IDA7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNoYW5nZWRCaXRzID0gdHlwZW9mIGNhbGN1bGF0ZUNoYW5nZWRCaXRzID09PSAnZnVuY3Rpb24nID8gY2FsY3VsYXRlQ2hhbmdlZEJpdHMob2xkVmFsdWUsIG5ld1ZhbHVlKSA6IE1BWF9TSUdORURfMzFfQklUX0lOVDtcclxuXHJcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xyXG4gICAgICAgICAgICB3YXJuaW5nKChjaGFuZ2VkQml0cyAmIE1BWF9TSUdORURfMzFfQklUX0lOVCkgPT09IGNoYW5nZWRCaXRzLCAnY2FsY3VsYXRlQ2hhbmdlZEJpdHM6IEV4cGVjdGVkIHRoZSByZXR1cm4gdmFsdWUgdG8gYmUgYSAnICsgJzMxLWJpdCBpbnRlZ2VyLiBJbnN0ZWFkIHJlY2VpdmVkOiAnICsgY2hhbmdlZEJpdHMpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGNoYW5nZWRCaXRzIHw9IDA7XHJcblxyXG4gICAgICAgICAgaWYgKGNoYW5nZWRCaXRzICE9PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5zZXQobmV4dFByb3BzLnZhbHVlLCBjaGFuZ2VkQml0cyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4gUHJvdmlkZXI7XHJcbiAgfShDb21wb25lbnQpO1xyXG5cclxuICBQcm92aWRlci5jaGlsZENvbnRleHRUeXBlcyA9IChfUHJvdmlkZXIkY2hpbGRDb250ZXggPSB7fSwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4W2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4KTtcclxuXHJcbiAgdmFyIENvbnN1bWVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50Mikge1xyXG4gICAgX2luaGVyaXRzTG9vc2UoQ29uc3VtZXIsIF9Db21wb25lbnQyKTtcclxuXHJcbiAgICBmdW5jdGlvbiBDb25zdW1lcigpIHtcclxuICAgICAgdmFyIF90aGlzMjtcclxuXHJcbiAgICAgIF90aGlzMiA9IF9Db21wb25lbnQyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuICAgICAgX3RoaXMyLnN0YXRlID0ge1xyXG4gICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgX3RoaXMyLm9uVXBkYXRlID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xyXG4gICAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBfdGhpczIub2JzZXJ2ZWRCaXRzIHwgMDtcclxuXHJcbiAgICAgICAgaWYgKChvYnNlcnZlZEJpdHMgJiBjaGFuZ2VkQml0cykgIT09IDApIHtcclxuICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgcmV0dXJuIF90aGlzMjtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgX3Byb3RvMiA9IENvbnN1bWVyLnByb3RvdHlwZTtcclxuXHJcbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xyXG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gbmV4dFByb3BzLm9ic2VydmVkQml0cztcclxuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XHJcbiAgICB9O1xyXG5cclxuICAgIF9wcm90bzIuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcclxuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcclxuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9uKHRoaXMub25VcGRhdGUpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gdGhpcy5wcm9wcy5vYnNlcnZlZEJpdHM7XHJcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xyXG4gICAgfTtcclxuXHJcbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XHJcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vZmYodGhpcy5vblVwZGF0ZSk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgX3Byb3RvMi5nZXRWYWx1ZSA9IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xyXG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLmdldCgpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgX3Byb3RvMi5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICAgIHJldHVybiBvbmx5Q2hpbGQodGhpcy5wcm9wcy5jaGlsZHJlbikodGhpcy5zdGF0ZS52YWx1ZSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiBDb25zdW1lcjtcclxuICB9KENvbXBvbmVudCk7XHJcblxyXG4gIENvbnN1bWVyLmNvbnRleHRUeXBlcyA9IChfQ29uc3VtZXIkY29udGV4dFR5cGUgPSB7fSwgX0NvbnN1bWVyJGNvbnRleHRUeXBlW2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QsIF9Db25zdW1lciRjb250ZXh0VHlwZSk7XHJcbiAgcmV0dXJuIHtcclxuICAgIFByb3ZpZGVyOiBQcm92aWRlcixcclxuICAgIENvbnN1bWVyOiBDb25zdW1lclxyXG4gIH07XHJcbn1cclxuXHJcbnZhciBpbmRleCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQgfHwgY3JlYXRlUmVhY3RDb250ZXh0O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgaW5kZXg7XHJcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcclxuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcclxuICB2YXIgdGFyZ2V0ID0ge307XHJcbiAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xyXG4gIHZhciBrZXksIGk7XHJcblxyXG4gIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xyXG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcclxuICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XHJcbiAgfVxyXG5cclxuICByZXR1cm4gdGFyZ2V0O1xyXG59IiwiaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIGNyZWF0ZVBhdGggfSBmcm9tICdoaXN0b3J5JztcclxuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcclxuaW1wb3J0IGNyZWF0ZUNvbnRleHQgZnJvbSAnbWluaS1jcmVhdGUtcmVhY3QtY29udGV4dCc7XHJcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xyXG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XHJcbmltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSAncGF0aC10by1yZWdleHAnO1xyXG5pbXBvcnQgeyBpc1ZhbGlkRWxlbWVudFR5cGUgfSBmcm9tICdyZWFjdC1pcyc7XHJcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJztcclxuaW1wb3J0IGhvaXN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XHJcblxyXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXHJcblxyXG52YXIgY3JlYXRlTmFtZWRDb250ZXh0ID0gZnVuY3Rpb24gY3JlYXRlTmFtZWRDb250ZXh0KG5hbWUpIHtcclxuICB2YXIgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcclxuICBjb250ZXh0LmRpc3BsYXlOYW1lID0gbmFtZTtcclxuICByZXR1cm4gY29udGV4dDtcclxufTtcclxuXHJcbnZhciBoaXN0b3J5Q29udGV4dCA9IC8qI19fUFVSRV9fKi9jcmVhdGVOYW1lZENvbnRleHQoXCJSb3V0ZXItSGlzdG9yeVwiKTtcclxuXHJcbnZhciBjb250ZXh0ID0gLyojX19QVVJFX18qL2NyZWF0ZU5hbWVkQ29udGV4dChcIlJvdXRlclwiKTtcclxuXHJcbi8qKlxyXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXHJcbiAqL1xyXG5cclxudmFyIFJvdXRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xyXG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XHJcblxyXG4gIFJvdXRlci5jb21wdXRlUm9vdE1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZVJvb3RNYXRjaChwYXRobmFtZSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcGF0aDogXCIvXCIsXHJcbiAgICAgIHVybDogXCIvXCIsXHJcbiAgICAgIHBhcmFtczoge30sXHJcbiAgICAgIGlzRXhhY3Q6IHBhdGhuYW1lID09PSBcIi9cIlxyXG4gICAgfTtcclxuICB9O1xyXG5cclxuICBmdW5jdGlvbiBSb3V0ZXIocHJvcHMpIHtcclxuICAgIHZhciBfdGhpcztcclxuXHJcbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcclxuICAgIF90aGlzLnN0YXRlID0ge1xyXG4gICAgICBsb2NhdGlvbjogcHJvcHMuaGlzdG9yeS5sb2NhdGlvblxyXG4gICAgfTsgLy8gVGhpcyBpcyBhIGJpdCBvZiBhIGhhY2suIFdlIGhhdmUgdG8gc3RhcnQgbGlzdGVuaW5nIGZvciBsb2NhdGlvblxyXG4gICAgLy8gY2hhbmdlcyBoZXJlIGluIHRoZSBjb25zdHJ1Y3RvciBpbiBjYXNlIHRoZXJlIGFyZSBhbnkgPFJlZGlyZWN0PnNcclxuICAgIC8vIG9uIHRoZSBpbml0aWFsIHJlbmRlci4gSWYgdGhlcmUgYXJlLCB0aGV5IHdpbGwgcmVwbGFjZS9wdXNoIHdoZW5cclxuICAgIC8vIHRoZXkgbW91bnQgYW5kIHNpbmNlIGNETSBmaXJlcyBpbiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cywgd2UgbWF5XHJcbiAgICAvLyBnZXQgYSBuZXcgbG9jYXRpb24gYmVmb3JlIHRoZSA8Um91dGVyPiBpcyBtb3VudGVkLlxyXG5cclxuICAgIF90aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcclxuICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBudWxsO1xyXG5cclxuICAgIGlmICghcHJvcHMuc3RhdGljQ29udGV4dCkge1xyXG4gICAgICBfdGhpcy51bmxpc3RlbiA9IHByb3BzLmhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uIChsb2NhdGlvbikge1xyXG4gICAgICAgIGlmIChfdGhpcy5faXNNb3VudGVkKSB7XHJcbiAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBsb2NhdGlvbjtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBfdGhpcztcclxuICB9XHJcblxyXG4gIHZhciBfcHJvdG8gPSBSb3V0ZXIucHJvdG90eXBlO1xyXG5cclxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcclxuICAgIHRoaXMuX2lzTW91bnRlZCA9IHRydWU7XHJcblxyXG4gICAgaWYgKHRoaXMuX3BlbmRpbmdMb2NhdGlvbikge1xyXG4gICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICBsb2NhdGlvbjogdGhpcy5fcGVuZGluZ0xvY2F0aW9uXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xyXG4gICAgaWYgKHRoaXMudW5saXN0ZW4pIHtcclxuICAgICAgdGhpcy51bmxpc3RlbigpO1xyXG4gICAgICB0aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcclxuICAgICAgdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbnVsbDtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcclxuICAgICAgdmFsdWU6IHtcclxuICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXHJcbiAgICAgICAgbG9jYXRpb246IHRoaXMuc3RhdGUubG9jYXRpb24sXHJcbiAgICAgICAgbWF0Y2g6IFJvdXRlci5jb21wdXRlUm9vdE1hdGNoKHRoaXMuc3RhdGUubG9jYXRpb24ucGF0aG5hbWUpLFxyXG4gICAgICAgIHN0YXRpY0NvbnRleHQ6IHRoaXMucHJvcHMuc3RhdGljQ29udGV4dFxyXG4gICAgICB9XHJcbiAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChoaXN0b3J5Q29udGV4dC5Qcm92aWRlciwge1xyXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB8fCBudWxsLFxyXG4gICAgICB2YWx1ZTogdGhpcy5wcm9wcy5oaXN0b3J5XHJcbiAgICB9KSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIFJvdXRlcjtcclxufShSZWFjdC5Db21wb25lbnQpO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gIFJvdXRlci5wcm9wVHlwZXMgPSB7XHJcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXHJcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXHJcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XHJcbiAgfTtcclxuXHJcbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByZXZQcm9wcy5oaXN0b3J5ID09PSB0aGlzLnByb3BzLmhpc3RvcnksIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiKSA6IHZvaWQgMDtcclxuICB9O1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCBzdG9yZXMgbG9jYXRpb24gaW4gbWVtb3J5LlxyXG4gKi9cclxuXHJcbnZhciBNZW1vcnlSb3V0ZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcclxuICBfaW5oZXJpdHNMb29zZShNZW1vcnlSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xyXG5cclxuICBmdW5jdGlvbiBNZW1vcnlSb3V0ZXIoKSB7XHJcbiAgICB2YXIgX3RoaXM7XHJcblxyXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XHJcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XHJcbiAgICB9XHJcblxyXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcclxuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVNZW1vcnlIaXN0b3J5KF90aGlzLnByb3BzKTtcclxuICAgIHJldHVybiBfdGhpcztcclxuICB9XHJcblxyXG4gIHZhciBfcHJvdG8gPSBNZW1vcnlSb3V0ZXIucHJvdG90eXBlO1xyXG5cclxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xyXG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXHJcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gTWVtb3J5Um91dGVyO1xyXG59KFJlYWN0LkNvbXBvbmVudCk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgTWVtb3J5Um91dGVyLnByb3BUeXBlcyA9IHtcclxuICAgIGluaXRpYWxFbnRyaWVzOiBQcm9wVHlwZXMuYXJyYXksXHJcbiAgICBpbml0aWFsSW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXHJcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcclxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcclxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxyXG4gIH07XHJcblxyXG4gIE1lbW9yeVJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPE1lbW9yeVJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IE1lbW9yeVJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xyXG4gIH07XHJcbn1cclxuXHJcbnZhciBMaWZlY3ljbGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcclxuICBfaW5oZXJpdHNMb29zZShMaWZlY3ljbGUsIF9SZWFjdCRDb21wb25lbnQpO1xyXG5cclxuICBmdW5jdGlvbiBMaWZlY3ljbGUoKSB7XHJcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcbiAgfVxyXG5cclxuICB2YXIgX3Byb3RvID0gTGlmZWN5Y2xlLnByb3RvdHlwZTtcclxuXHJcbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICBpZiAodGhpcy5wcm9wcy5vbk1vdW50KSB0aGlzLnByb3BzLm9uTW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcclxuICB9O1xyXG5cclxuICBfcHJvdG8uY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xyXG4gICAgaWYgKHRoaXMucHJvcHMub25VcGRhdGUpIHRoaXMucHJvcHMub25VcGRhdGUuY2FsbCh0aGlzLCB0aGlzLCBwcmV2UHJvcHMpO1xyXG4gIH07XHJcblxyXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xyXG4gICAgaWYgKHRoaXMucHJvcHMub25Vbm1vdW50KSB0aGlzLnByb3BzLm9uVW5tb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xyXG4gIH07XHJcblxyXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9O1xyXG5cclxuICByZXR1cm4gTGlmZWN5Y2xlO1xyXG59KFJlYWN0LkNvbXBvbmVudCk7XHJcblxyXG4vKipcclxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHByb21wdGluZyB0aGUgdXNlciBiZWZvcmUgbmF2aWdhdGluZyBhd2F5IGZyb20gYSBzY3JlZW4uXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gUHJvbXB0KF9yZWYpIHtcclxuICB2YXIgbWVzc2FnZSA9IF9yZWYubWVzc2FnZSxcclxuICAgICAgX3JlZiR3aGVuID0gX3JlZi53aGVuLFxyXG4gICAgICB3aGVuID0gX3JlZiR3aGVuID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZiR3aGVuO1xyXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xyXG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxQcm9tcHQ+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XHJcbiAgICBpZiAoIXdoZW4gfHwgY29udGV4dC5zdGF0aWNDb250ZXh0KSByZXR1cm4gbnVsbDtcclxuICAgIHZhciBtZXRob2QgPSBjb250ZXh0Lmhpc3RvcnkuYmxvY2s7XHJcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XHJcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoc2VsZikge1xyXG4gICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcclxuICAgICAgfSxcclxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xyXG4gICAgICAgIGlmIChwcmV2UHJvcHMubWVzc2FnZSAhPT0gbWVzc2FnZSkge1xyXG4gICAgICAgICAgc2VsZi5yZWxlYXNlKCk7XHJcbiAgICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICBvblVubW91bnQ6IGZ1bmN0aW9uIG9uVW5tb3VudChzZWxmKSB7XHJcbiAgICAgICAgc2VsZi5yZWxlYXNlKCk7XHJcbiAgICAgIH0sXHJcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgdmFyIG1lc3NhZ2VUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKTtcclxuICBQcm9tcHQucHJvcFR5cGVzID0ge1xyXG4gICAgd2hlbjogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICBtZXNzYWdlOiBtZXNzYWdlVHlwZS5pc1JlcXVpcmVkXHJcbiAgfTtcclxufVxyXG5cclxudmFyIGNhY2hlID0ge307XHJcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XHJcbnZhciBjYWNoZUNvdW50ID0gMDtcclxuXHJcbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgpIHtcclxuICBpZiAoY2FjaGVbcGF0aF0pIHJldHVybiBjYWNoZVtwYXRoXTtcclxuICB2YXIgZ2VuZXJhdG9yID0gcGF0aFRvUmVnZXhwLmNvbXBpbGUocGF0aCk7XHJcblxyXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xyXG4gICAgY2FjaGVbcGF0aF0gPSBnZW5lcmF0b3I7XHJcbiAgICBjYWNoZUNvdW50Kys7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gZ2VuZXJhdG9yO1xyXG59XHJcbi8qKlxyXG4gKiBQdWJsaWMgQVBJIGZvciBnZW5lcmF0aW5nIGEgVVJMIHBhdGhuYW1lIGZyb20gYSBwYXRoIGFuZCBwYXJhbWV0ZXJzLlxyXG4gKi9cclxuXHJcblxyXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCwgcGFyYW1zKSB7XHJcbiAgaWYgKHBhdGggPT09IHZvaWQgMCkge1xyXG4gICAgcGF0aCA9IFwiL1wiO1xyXG4gIH1cclxuXHJcbiAgaWYgKHBhcmFtcyA9PT0gdm9pZCAwKSB7XHJcbiAgICBwYXJhbXMgPSB7fTtcclxuICB9XHJcblxyXG4gIHJldHVybiBwYXRoID09PSBcIi9cIiA/IHBhdGggOiBjb21waWxlUGF0aChwYXRoKShwYXJhbXMsIHtcclxuICAgIHByZXR0eTogdHJ1ZVxyXG4gIH0pO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG5hdmlnYXRpbmcgcHJvZ3JhbW1hdGljYWxseSB3aXRoIGEgY29tcG9uZW50LlxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIFJlZGlyZWN0KF9yZWYpIHtcclxuICB2YXIgY29tcHV0ZWRNYXRjaCA9IF9yZWYuY29tcHV0ZWRNYXRjaCxcclxuICAgICAgdG8gPSBfcmVmLnRvLFxyXG4gICAgICBfcmVmJHB1c2ggPSBfcmVmLnB1c2gsXHJcbiAgICAgIHB1c2ggPSBfcmVmJHB1c2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRwdXNoO1xyXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xyXG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSZWRpcmVjdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICAgIHZhciBoaXN0b3J5ID0gY29udGV4dC5oaXN0b3J5LFxyXG4gICAgICAgIHN0YXRpY0NvbnRleHQgPSBjb250ZXh0LnN0YXRpY0NvbnRleHQ7XHJcbiAgICB2YXIgbWV0aG9kID0gcHVzaCA/IGhpc3RvcnkucHVzaCA6IGhpc3RvcnkucmVwbGFjZTtcclxuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKGNvbXB1dGVkTWF0Y2ggPyB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBnZW5lcmF0ZVBhdGgodG8sIGNvbXB1dGVkTWF0Y2gucGFyYW1zKSA6IF9leHRlbmRzKHt9LCB0bywge1xyXG4gICAgICBwYXRobmFtZTogZ2VuZXJhdGVQYXRoKHRvLnBhdGhuYW1lLCBjb21wdXRlZE1hdGNoLnBhcmFtcylcclxuICAgIH0pIDogdG8pOyAvLyBXaGVuIHJlbmRlcmluZyBpbiBhIHN0YXRpYyBjb250ZXh0LFxyXG4gICAgLy8gc2V0IHRoZSBuZXcgbG9jYXRpb24gaW1tZWRpYXRlbHkuXHJcblxyXG4gICAgaWYgKHN0YXRpY0NvbnRleHQpIHtcclxuICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xyXG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KCkge1xyXG4gICAgICAgIG1ldGhvZChsb2NhdGlvbik7XHJcbiAgICAgIH0sXHJcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcclxuICAgICAgICB2YXIgcHJldkxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocHJldlByb3BzLnRvKTtcclxuXHJcbiAgICAgICAgaWYgKCFsb2NhdGlvbnNBcmVFcXVhbChwcmV2TG9jYXRpb24sIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xyXG4gICAgICAgICAga2V5OiBwcmV2TG9jYXRpb24ua2V5XHJcbiAgICAgICAgfSkpKSB7XHJcbiAgICAgICAgICBtZXRob2QobG9jYXRpb24pO1xyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgICAgdG86IHRvXHJcbiAgICB9KTtcclxuICB9KTtcclxufVxyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gIFJlZGlyZWN0LnByb3BUeXBlcyA9IHtcclxuICAgIHB1c2g6IFByb3BUeXBlcy5ib29sLFxyXG4gICAgZnJvbTogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZFxyXG4gIH07XHJcbn1cclxuXHJcbnZhciBjYWNoZSQxID0ge307XHJcbnZhciBjYWNoZUxpbWl0JDEgPSAxMDAwMDtcclxudmFyIGNhY2hlQ291bnQkMSA9IDA7XHJcblxyXG5mdW5jdGlvbiBjb21waWxlUGF0aCQxKHBhdGgsIG9wdGlvbnMpIHtcclxuICB2YXIgY2FjaGVLZXkgPSBcIlwiICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xyXG4gIHZhciBwYXRoQ2FjaGUgPSBjYWNoZSQxW2NhY2hlS2V5XSB8fCAoY2FjaGUkMVtjYWNoZUtleV0gPSB7fSk7XHJcbiAgaWYgKHBhdGhDYWNoZVtwYXRoXSkgcmV0dXJuIHBhdGhDYWNoZVtwYXRoXTtcclxuICB2YXIga2V5cyA9IFtdO1xyXG4gIHZhciByZWdleHAgPSBwYXRoVG9SZWdleHAocGF0aCwga2V5cywgb3B0aW9ucyk7XHJcbiAgdmFyIHJlc3VsdCA9IHtcclxuICAgIHJlZ2V4cDogcmVnZXhwLFxyXG4gICAga2V5czoga2V5c1xyXG4gIH07XHJcblxyXG4gIGlmIChjYWNoZUNvdW50JDEgPCBjYWNoZUxpbWl0JDEpIHtcclxuICAgIHBhdGhDYWNoZVtwYXRoXSA9IHJlc3VsdDtcclxuICAgIGNhY2hlQ291bnQkMSsrO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHJlc3VsdDtcclxufVxyXG4vKipcclxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoLlxyXG4gKi9cclxuXHJcblxyXG5mdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUsIG9wdGlvbnMpIHtcclxuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XHJcbiAgICBvcHRpb25zID0ge307XHJcbiAgfVxyXG5cclxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheShvcHRpb25zKSkge1xyXG4gICAgb3B0aW9ucyA9IHtcclxuICAgICAgcGF0aDogb3B0aW9uc1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXHJcbiAgICAgIHBhdGggPSBfb3B0aW9ucy5wYXRoLFxyXG4gICAgICBfb3B0aW9ucyRleGFjdCA9IF9vcHRpb25zLmV4YWN0LFxyXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxyXG4gICAgICBfb3B0aW9ucyRzdHJpY3QgPSBfb3B0aW9ucy5zdHJpY3QsXHJcbiAgICAgIHN0cmljdCA9IF9vcHRpb25zJHN0cmljdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzdHJpY3QsXHJcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcclxuICAgICAgc2Vuc2l0aXZlID0gX29wdGlvbnMkc2Vuc2l0aXZlID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHNlbnNpdGl2ZTtcclxuICB2YXIgcGF0aHMgPSBbXS5jb25jYXQocGF0aCk7XHJcbiAgcmV0dXJuIHBhdGhzLnJlZHVjZShmdW5jdGlvbiAobWF0Y2hlZCwgcGF0aCkge1xyXG4gICAgaWYgKCFwYXRoICYmIHBhdGggIT09IFwiXCIpIHJldHVybiBudWxsO1xyXG4gICAgaWYgKG1hdGNoZWQpIHJldHVybiBtYXRjaGVkO1xyXG5cclxuICAgIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aCQxKHBhdGgsIHtcclxuICAgICAgZW5kOiBleGFjdCxcclxuICAgICAgc3RyaWN0OiBzdHJpY3QsXHJcbiAgICAgIHNlbnNpdGl2ZTogc2Vuc2l0aXZlXHJcbiAgICB9KSxcclxuICAgICAgICByZWdleHAgPSBfY29tcGlsZVBhdGgucmVnZXhwLFxyXG4gICAgICAgIGtleXMgPSBfY29tcGlsZVBhdGgua2V5cztcclxuXHJcbiAgICB2YXIgbWF0Y2ggPSByZWdleHAuZXhlYyhwYXRobmFtZSk7XHJcbiAgICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcclxuICAgIHZhciB1cmwgPSBtYXRjaFswXSxcclxuICAgICAgICB2YWx1ZXMgPSBtYXRjaC5zbGljZSgxKTtcclxuICAgIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcclxuICAgIGlmIChleGFjdCAmJiAhaXNFeGFjdCkgcmV0dXJuIG51bGw7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBwYXRoOiBwYXRoLFxyXG4gICAgICAvLyB0aGUgcGF0aCB1c2VkIHRvIG1hdGNoXHJcbiAgICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsXHJcbiAgICAgIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxyXG4gICAgICBpc0V4YWN0OiBpc0V4YWN0LFxyXG4gICAgICAvLyB3aGV0aGVyIG9yIG5vdCB3ZSBtYXRjaGVkIGV4YWN0bHlcclxuICAgICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xyXG4gICAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcclxuICAgICAgICByZXR1cm4gbWVtbztcclxuICAgICAgfSwge30pXHJcbiAgICB9O1xyXG4gIH0sIG51bGwpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcclxuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xyXG59XHJcblxyXG5mdW5jdGlvbiBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBwYXRoKSB7XHJcbiAgdmFyIHZhbHVlID0gY2hpbGRyZW4ocHJvcHMpO1xyXG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcodmFsdWUgIT09IHVuZGVmaW5lZCwgXCJZb3UgcmV0dXJuZWQgYHVuZGVmaW5lZGAgZnJvbSB0aGUgYGNoaWxkcmVuYCBmdW5jdGlvbiBvZiBcIiArIChcIjxSb3V0ZVwiICsgKHBhdGggPyBcIiBwYXRoPVxcXCJcIiArIHBhdGggKyBcIlxcXCJcIiA6IFwiXCIpICsgXCI+LCBidXQgeW91IFwiKSArIFwic2hvdWxkIGhhdmUgcmV0dXJuZWQgYSBSZWFjdCBlbGVtZW50IG9yIGBudWxsYFwiKSA6IHZvaWQgMDtcclxuICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcclxufVxyXG4vKipcclxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cclxuICovXHJcblxyXG5cclxudmFyIFJvdXRlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XHJcbiAgX2luaGVyaXRzTG9vc2UoUm91dGUsIF9SZWFjdCRDb21wb25lbnQpO1xyXG5cclxuICBmdW5jdGlvbiBSb3V0ZSgpIHtcclxuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuICB9XHJcblxyXG4gIHZhciBfcHJvdG8gPSBSb3V0ZS5wcm90b3R5cGU7XHJcblxyXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQxKSB7XHJcbiAgICAgICFjb250ZXh0JDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dCQxLmxvY2F0aW9uO1xyXG4gICAgICB2YXIgbWF0Y2ggPSBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoID8gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcclxuICAgICAgOiBfdGhpcy5wcm9wcy5wYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfdGhpcy5wcm9wcykgOiBjb250ZXh0JDEubWF0Y2g7XHJcblxyXG4gICAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgY29udGV4dCQxLCB7XHJcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxyXG4gICAgICAgIG1hdGNoOiBtYXRjaFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxyXG4gICAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbixcclxuICAgICAgICAgIGNvbXBvbmVudCA9IF90aGlzJHByb3BzLmNvbXBvbmVudCxcclxuICAgICAgICAgIHJlbmRlciA9IF90aGlzJHByb3BzLnJlbmRlcjsgLy8gUHJlYWN0IHVzZXMgYW4gZW1wdHkgYXJyYXkgYXMgY2hpbGRyZW4gYnlcclxuICAgICAgLy8gZGVmYXVsdCwgc28gdXNlIG51bGwgaWYgdGhhdCdzIHRoZSBjYXNlLlxyXG5cclxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pICYmIGlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikpIHtcclxuICAgICAgICBjaGlsZHJlbiA9IG51bGw7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XHJcbiAgICAgICAgdmFsdWU6IHByb3BzXHJcbiAgICAgIH0sIHByb3BzLm1hdGNoID8gY2hpbGRyZW4gPyB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIF90aGlzLnByb3BzLnBhdGgpIDogY2hpbGRyZW4ocHJvcHMpIDogY2hpbGRyZW4gOiBjb21wb25lbnQgPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKSA6IHJlbmRlciA/IHJlbmRlcihwcm9wcykgOiBudWxsIDogdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBfdGhpcy5wcm9wcy5wYXRoKSA6IGNoaWxkcmVuKHByb3BzKSA6IG51bGwpO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIFJvdXRlO1xyXG59KFJlYWN0LkNvbXBvbmVudCk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgUm91dGUucHJvcFR5cGVzID0ge1xyXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pLFxyXG4gICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocHJvcHMsIHByb3BOYW1lKSB7XHJcbiAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gJiYgIWlzVmFsaWRFbGVtZW50VHlwZShwcm9wc1twcm9wTmFtZV0pKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcIkludmFsaWQgcHJvcCAnY29tcG9uZW50JyBzdXBwbGllZCB0byAnUm91dGUnOiB0aGUgcHJvcCBpcyBub3QgYSB2YWxpZCBSZWFjdCBjb21wb25lbnRcIik7XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcclxuICAgIHBhdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpXSksXHJcbiAgICByZW5kZXI6IFByb3BUeXBlcy5mdW5jLFxyXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcclxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2xcclxuICB9O1xyXG5cclxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmIHRoaXMucHJvcHMuY29tcG9uZW50KSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjb21wb25lbnQ+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XHJcbiAgfTtcclxuXHJcbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcclxuICB9O1xyXG59XHJcblxyXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xyXG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gXCIvXCIgPyBwYXRoIDogXCIvXCIgKyBwYXRoO1xyXG59XHJcblxyXG5mdW5jdGlvbiBhZGRCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcclxuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XHJcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xyXG4gICAgcGF0aG5hbWU6IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSkgKyBsb2NhdGlvbi5wYXRobmFtZVxyXG4gIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xyXG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcclxuICB2YXIgYmFzZSA9IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSk7XHJcbiAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoYmFzZSkgIT09IDApIHJldHVybiBsb2NhdGlvbjtcclxuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XHJcbiAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUuc3Vic3RyKGJhc2UubGVuZ3RoKVxyXG4gIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcclxuICByZXR1cm4gdHlwZW9mIGxvY2F0aW9uID09PSBcInN0cmluZ1wiID8gbG9jYXRpb24gOiBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc3RhdGljSGFuZGxlcihtZXRob2ROYW1lKSB7XHJcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IGNhbm5vdCAlcyB3aXRoIDxTdGF0aWNSb3V0ZXI+XCIsIG1ldGhvZE5hbWUpIDogaW52YXJpYW50KGZhbHNlKSA7XHJcbiAgfTtcclxufVxyXG5cclxuZnVuY3Rpb24gbm9vcCgpIHt9XHJcbi8qKlxyXG4gKiBUaGUgcHVibGljIHRvcC1sZXZlbCBBUEkgZm9yIGEgXCJzdGF0aWNcIiA8Um91dGVyPiwgc28tY2FsbGVkIGJlY2F1c2UgaXRcclxuICogY2FuJ3QgYWN0dWFsbHkgY2hhbmdlIHRoZSBjdXJyZW50IGxvY2F0aW9uLiBJbnN0ZWFkLCBpdCBqdXN0IHJlY29yZHNcclxuICogbG9jYXRpb24gY2hhbmdlcyBpbiBhIGNvbnRleHQgb2JqZWN0LiBVc2VmdWwgbWFpbmx5IGluIHRlc3RpbmcgYW5kXHJcbiAqIHNlcnZlci1yZW5kZXJpbmcgc2NlbmFyaW9zLlxyXG4gKi9cclxuXHJcblxyXG52YXIgU3RhdGljUm91dGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XHJcbiAgX2luaGVyaXRzTG9vc2UoU3RhdGljUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcclxuXHJcbiAgZnVuY3Rpb24gU3RhdGljUm91dGVyKCkge1xyXG4gICAgdmFyIF90aGlzO1xyXG5cclxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xyXG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xyXG4gICAgfVxyXG5cclxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XHJcblxyXG4gICAgX3RoaXMuaGFuZGxlUHVzaCA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xyXG4gICAgICByZXR1cm4gX3RoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJQVVNIXCIpO1xyXG4gICAgfTtcclxuXHJcbiAgICBfdGhpcy5oYW5kbGVSZXBsYWNlID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XHJcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlJFUExBQ0VcIik7XHJcbiAgICB9O1xyXG5cclxuICAgIF90aGlzLmhhbmRsZUxpc3RlbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgcmV0dXJuIG5vb3A7XHJcbiAgICB9O1xyXG5cclxuICAgIF90aGlzLmhhbmRsZUJsb2NrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICByZXR1cm4gbm9vcDtcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIF90aGlzO1xyXG4gIH1cclxuXHJcbiAgdmFyIF9wcm90byA9IFN0YXRpY1JvdXRlci5wcm90b3R5cGU7XHJcblxyXG4gIF9wcm90by5uYXZpZ2F0ZVRvID0gZnVuY3Rpb24gbmF2aWdhdGVUbyhsb2NhdGlvbiwgYWN0aW9uKSB7XHJcbiAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxyXG4gICAgICAgIF90aGlzJHByb3BzJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMuYmFzZW5hbWUsXHJcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzJGJhc2VuYW1lLFxyXG4gICAgICAgIF90aGlzJHByb3BzJGNvbnRleHQgPSBfdGhpcyRwcm9wcy5jb250ZXh0LFxyXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wcyRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzJGNvbnRleHQ7XHJcbiAgICBjb250ZXh0LmFjdGlvbiA9IGFjdGlvbjtcclxuICAgIGNvbnRleHQubG9jYXRpb24gPSBhZGRCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKTtcclxuICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xyXG4gIH07XHJcblxyXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcclxuICAgICAgICBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIuYmFzZW5hbWUsXHJcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wczIkYmFzZW5hbWUsXHJcbiAgICAgICAgX3RoaXMkcHJvcHMyJGNvbnRleHQgPSBfdGhpcyRwcm9wczIuY29udGV4dCxcclxuICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMyJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMyJGNvbnRleHQsXHJcbiAgICAgICAgX3RoaXMkcHJvcHMyJGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyLmxvY2F0aW9uLFxyXG4gICAgICAgIGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyJGxvY2F0aW9uID09PSB2b2lkIDAgPyBcIi9cIiA6IF90aGlzJHByb3BzMiRsb2NhdGlvbixcclxuICAgICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMyLCBbXCJiYXNlbmFtZVwiLCBcImNvbnRleHRcIiwgXCJsb2NhdGlvblwiXSk7XHJcblxyXG4gICAgdmFyIGhpc3RvcnkgPSB7XHJcbiAgICAgIGNyZWF0ZUhyZWY6IGZ1bmN0aW9uIGNyZWF0ZUhyZWYocGF0aCkge1xyXG4gICAgICAgIHJldHVybiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUgKyBjcmVhdGVVUkwocGF0aCkpO1xyXG4gICAgICB9LFxyXG4gICAgICBhY3Rpb246IFwiUE9QXCIsXHJcbiAgICAgIGxvY2F0aW9uOiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpLFxyXG4gICAgICBwdXNoOiB0aGlzLmhhbmRsZVB1c2gsXHJcbiAgICAgIHJlcGxhY2U6IHRoaXMuaGFuZGxlUmVwbGFjZSxcclxuICAgICAgZ286IHN0YXRpY0hhbmRsZXIoXCJnb1wiKSxcclxuICAgICAgZ29CYWNrOiBzdGF0aWNIYW5kbGVyKFwiZ29CYWNrXCIpLFxyXG4gICAgICBnb0ZvcndhcmQ6IHN0YXRpY0hhbmRsZXIoXCJnb0ZvcndhcmRcIiksXHJcbiAgICAgIGxpc3RlbjogdGhpcy5oYW5kbGVMaXN0ZW4sXHJcbiAgICAgIGJsb2NrOiB0aGlzLmhhbmRsZUJsb2NrXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgX2V4dGVuZHMoe30sIHJlc3QsIHtcclxuICAgICAgaGlzdG9yeTogaGlzdG9yeSxcclxuICAgICAgc3RhdGljQ29udGV4dDogY29udGV4dFxyXG4gICAgfSkpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBTdGF0aWNSb3V0ZXI7XHJcbn0oUmVhY3QuQ29tcG9uZW50KTtcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICBTdGF0aWNSb3V0ZXIucHJvcFR5cGVzID0ge1xyXG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICBjb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0LFxyXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKVxyXG4gIH07XHJcblxyXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPFN0YXRpY1JvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IFN0YXRpY1JvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xyXG4gIH07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cclxuICovXHJcblxyXG52YXIgU3dpdGNoID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XHJcbiAgX2luaGVyaXRzTG9vc2UoU3dpdGNoLCBfUmVhY3QkQ29tcG9uZW50KTtcclxuXHJcbiAgZnVuY3Rpb24gU3dpdGNoKCkge1xyXG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xyXG4gIH1cclxuXHJcbiAgdmFyIF9wcm90byA9IFN3aXRjaC5wcm90b3R5cGU7XHJcblxyXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xyXG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dC5sb2NhdGlvbjtcclxuICAgICAgdmFyIGVsZW1lbnQsIG1hdGNoOyAvLyBXZSB1c2UgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaCBpbnN0ZWFkIG9mIFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoKS5maW5kKClcclxuICAgICAgLy8gaGVyZSBiZWNhdXNlIHRvQXJyYXkgYWRkcyBrZXlzIHRvIGFsbCBjaGlsZCBlbGVtZW50cyBhbmQgd2UgZG8gbm90IHdhbnRcclxuICAgICAgLy8gdG8gdHJpZ2dlciBhbiB1bm1vdW50L3JlbW91bnQgZm9yIHR3byA8Um91dGU+cyB0aGF0IHJlbmRlciB0aGUgc2FtZVxyXG4gICAgICAvLyBjb21wb25lbnQgYXQgZGlmZmVyZW50IFVSTHMuXHJcblxyXG4gICAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKF90aGlzLnByb3BzLmNoaWxkcmVuLCBmdW5jdGlvbiAoY2hpbGQpIHtcclxuICAgICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiAvKiNfX1BVUkVfXyovUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XHJcbiAgICAgICAgICBlbGVtZW50ID0gY2hpbGQ7XHJcbiAgICAgICAgICB2YXIgcGF0aCA9IGNoaWxkLnByb3BzLnBhdGggfHwgY2hpbGQucHJvcHMuZnJvbTtcclxuICAgICAgICAgIG1hdGNoID0gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX2V4dGVuZHMoe30sIGNoaWxkLnByb3BzLCB7XHJcbiAgICAgICAgICAgIHBhdGg6IHBhdGhcclxuICAgICAgICAgIH0pKSA6IGNvbnRleHQubWF0Y2g7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgcmV0dXJuIG1hdGNoID8gLyojX19QVVJFX18qL1JlYWN0LmNsb25lRWxlbWVudChlbGVtZW50LCB7XHJcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxyXG4gICAgICAgIGNvbXB1dGVkTWF0Y2g6IG1hdGNoXHJcbiAgICAgIH0pIDogbnVsbDtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBTd2l0Y2g7XHJcbn0oUmVhY3QuQ29tcG9uZW50KTtcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICBTd2l0Y2gucHJvcFR5cGVzID0ge1xyXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxyXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3RcclxuICB9O1xyXG5cclxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcclxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xyXG4gIH07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBIHB1YmxpYyBoaWdoZXItb3JkZXIgY29tcG9uZW50IHRvIGFjY2VzcyB0aGUgaW1wZXJhdGl2ZSBBUElcclxuICovXHJcblxyXG5mdW5jdGlvbiB3aXRoUm91dGVyKENvbXBvbmVudCkge1xyXG4gIHZhciBkaXNwbGF5TmFtZSA9IFwid2l0aFJvdXRlcihcIiArIChDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWUpICsgXCIpXCI7XHJcblxyXG4gIHZhciBDID0gZnVuY3Rpb24gQyhwcm9wcykge1xyXG4gICAgdmFyIHdyYXBwZWRDb21wb25lbnRSZWYgPSBwcm9wcy53cmFwcGVkQ29tcG9uZW50UmVmLFxyXG4gICAgICAgIHJlbWFpbmluZ1Byb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIFtcIndyYXBwZWRDb21wb25lbnRSZWZcIl0pO1xyXG5cclxuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xyXG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFwiICsgZGlzcGxheU5hbWUgKyBcIiAvPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xyXG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcmVtYWluaW5nUHJvcHMsIGNvbnRleHQsIHtcclxuICAgICAgICByZWY6IHdyYXBwZWRDb21wb25lbnRSZWZcclxuICAgICAgfSkpO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgQy5kaXNwbGF5TmFtZSA9IGRpc3BsYXlOYW1lO1xyXG4gIEMuV3JhcHBlZENvbXBvbmVudCA9IENvbXBvbmVudDtcclxuXHJcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gICAgQy5wcm9wVHlwZXMgPSB7XHJcbiAgICAgIHdyYXBwZWRDb21wb25lbnRSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSlcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICByZXR1cm4gaG9pc3RTdGF0aWNzKEMsIENvbXBvbmVudCk7XHJcbn1cclxuXHJcbnZhciB1c2VDb250ZXh0ID0gUmVhY3QudXNlQ29udGV4dDtcclxuZnVuY3Rpb24gdXNlSGlzdG9yeSgpIHtcclxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VIaXN0b3J5KClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHVzZUNvbnRleHQoaGlzdG9yeUNvbnRleHQpO1xyXG59XHJcbmZ1bmN0aW9uIHVzZUxvY2F0aW9uKCkge1xyXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUxvY2F0aW9uKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHVzZUNvbnRleHQoY29udGV4dCkubG9jYXRpb247XHJcbn1cclxuZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xyXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVBhcmFtcygpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICB9XHJcblxyXG4gIHZhciBtYXRjaCA9IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XHJcbiAgcmV0dXJuIG1hdGNoID8gbWF0Y2gucGFyYW1zIDoge307XHJcbn1cclxuZnVuY3Rpb24gdXNlUm91dGVNYXRjaChwYXRoKSB7XHJcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUm91dGVNYXRjaCgpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICB9XHJcblxyXG4gIHZhciBsb2NhdGlvbiA9IHVzZUxvY2F0aW9uKCk7XHJcbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcclxuICByZXR1cm4gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgcGF0aCkgOiBtYXRjaDtcclxufVxyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICB2YXIgZ2xvYmFsID0gd2luZG93O1xyXG4gICAgdmFyIGtleSA9IFwiX19yZWFjdF9yb3V0ZXJfYnVpbGRfX1wiO1xyXG4gICAgdmFyIGJ1aWxkTmFtZXMgPSB7XHJcbiAgICAgIGNqczogXCJDb21tb25KU1wiLFxyXG4gICAgICBlc206IFwiRVMgbW9kdWxlc1wiLFxyXG4gICAgICB1bWQ6IFwiVU1EXCJcclxuICAgIH07XHJcblxyXG4gICAgaWYgKGdsb2JhbFtrZXldICYmIGdsb2JhbFtrZXldICE9PSBcImVzbVwiKSB7XHJcbiAgICAgIHZhciBpbml0aWFsQnVpbGROYW1lID0gYnVpbGROYW1lc1tnbG9iYWxba2V5XV07XHJcbiAgICAgIHZhciBzZWNvbmRhcnlCdWlsZE5hbWUgPSBidWlsZE5hbWVzW1wiZXNtXCJdOyAvLyBUT0RPOiBBZGQgbGluayB0byBhcnRpY2xlIHRoYXQgZXhwbGFpbnMgaW4gZGV0YWlsIGhvdyB0byBhdm9pZFxyXG4gICAgICAvLyBsb2FkaW5nIDIgZGlmZmVyZW50IGJ1aWxkcy5cclxuXHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIllvdSBhcmUgbG9hZGluZyB0aGUgXCIgKyBzZWNvbmRhcnlCdWlsZE5hbWUgKyBcIiBidWlsZCBvZiBSZWFjdCBSb3V0ZXIgXCIgKyAoXCJvbiBhIHBhZ2UgdGhhdCBpcyBhbHJlYWR5IHJ1bm5pbmcgdGhlIFwiICsgaW5pdGlhbEJ1aWxkTmFtZSArIFwiIFwiKSArIFwiYnVpbGQsIHNvIHRoaW5ncyB3b24ndCB3b3JrIHJpZ2h0LlwiKTtcclxuICAgIH1cclxuXHJcbiAgICBnbG9iYWxba2V5XSA9IFwiZXNtXCI7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBoaXN0b3J5Q29udGV4dCBhcyBfX0hpc3RvcnlDb250ZXh0LCBjb250ZXh0IGFzIF9fUm91dGVyQ29udGV4dCwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIHVzZUhpc3RvcnksIHVzZUxvY2F0aW9uLCB1c2VQYXJhbXMsIHVzZVJvdXRlTWF0Y2gsIHdpdGhSb3V0ZXIgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhY3Qtcm91dGVyLmpzLm1hcFxyXG4iLCJpbXBvcnQgeyBSb3V0ZXIsIF9fUm91dGVyQ29udGV4dCwgbWF0Y2hQYXRoIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcclxuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBQcm9tcHQsIFJlZGlyZWN0LCBSb3V0ZSwgUm91dGVyLCBTdGF0aWNSb3V0ZXIsIFN3aXRjaCwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIHVzZUhpc3RvcnksIHVzZUxvY2F0aW9uLCB1c2VQYXJhbXMsIHVzZVJvdXRlTWF0Y2gsIHdpdGhSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xyXG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGNyZWF0ZVBhdGggfSBmcm9tICdoaXN0b3J5JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcclxuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xyXG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XHJcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xyXG5cclxuLyoqXHJcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyBIVE1MNSBoaXN0b3J5LlxyXG4gKi9cclxuXHJcbnZhciBCcm93c2VyUm91dGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XHJcbiAgX2luaGVyaXRzTG9vc2UoQnJvd3NlclJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XHJcblxyXG4gIGZ1bmN0aW9uIEJyb3dzZXJSb3V0ZXIoKSB7XHJcbiAgICB2YXIgX3RoaXM7XHJcblxyXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XHJcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XHJcbiAgICB9XHJcblxyXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcclxuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVCcm93c2VySGlzdG9yeShfdGhpcy5wcm9wcyk7XHJcbiAgICByZXR1cm4gX3RoaXM7XHJcbiAgfVxyXG5cclxuICB2YXIgX3Byb3RvID0gQnJvd3NlclJvdXRlci5wcm90b3R5cGU7XHJcblxyXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XHJcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcclxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xyXG59KFJlYWN0LkNvbXBvbmVudCk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgQnJvd3NlclJvdXRlci5wcm9wVHlwZXMgPSB7XHJcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcclxuICAgIGZvcmNlUmVmcmVzaDogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcclxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlclxyXG4gIH07XHJcblxyXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxCcm93c2VyUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xyXG4gIH07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgd2luZG93LmxvY2F0aW9uLmhhc2guXHJcbiAqL1xyXG5cclxudmFyIEhhc2hSb3V0ZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcclxuICBfaW5oZXJpdHNMb29zZShIYXNoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcclxuXHJcbiAgZnVuY3Rpb24gSGFzaFJvdXRlcigpIHtcclxuICAgIHZhciBfdGhpcztcclxuXHJcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcclxuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcclxuICAgIH1cclxuXHJcbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xyXG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhhc2hIaXN0b3J5KF90aGlzLnByb3BzKTtcclxuICAgIHJldHVybiBfdGhpcztcclxuICB9XHJcblxyXG4gIHZhciBfcHJvdG8gPSBIYXNoUm91dGVyLnByb3RvdHlwZTtcclxuXHJcbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcclxuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcclxuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxyXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIEhhc2hSb3V0ZXI7XHJcbn0oUmVhY3QuQ29tcG9uZW50KTtcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICBIYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcclxuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxyXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgICBoYXNoVHlwZTogUHJvcFR5cGVzLm9uZU9mKFtcImhhc2hiYW5nXCIsIFwibm9zbGFzaFwiLCBcInNsYXNoXCJdKVxyXG4gIH07XHJcblxyXG4gIEhhc2hSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxIYXNoUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgSGFzaFJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xyXG4gIH07XHJcbn1cclxuXHJcbnZhciByZXNvbHZlVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pIHtcclxuICByZXR1cm4gdHlwZW9mIHRvID09PSBcImZ1bmN0aW9uXCIgPyB0byhjdXJyZW50TG9jYXRpb24pIDogdG87XHJcbn07XHJcbnZhciBub3JtYWxpemVUb0xvY2F0aW9uID0gZnVuY3Rpb24gbm9ybWFsaXplVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XHJcbiAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGNyZWF0ZUxvY2F0aW9uKHRvLCBudWxsLCBudWxsLCBjdXJyZW50TG9jYXRpb24pIDogdG87XHJcbn07XHJcblxyXG52YXIgZm9yd2FyZFJlZlNoaW0gPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XHJcbiAgcmV0dXJuIEM7XHJcbn07XHJcblxyXG52YXIgZm9yd2FyZFJlZiA9IFJlYWN0LmZvcndhcmRSZWY7XHJcblxyXG5pZiAodHlwZW9mIGZvcndhcmRSZWYgPT09IFwidW5kZWZpbmVkXCIpIHtcclxuICBmb3J3YXJkUmVmID0gZm9yd2FyZFJlZlNoaW07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xyXG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcclxufVxyXG5cclxudmFyIExpbmtBbmNob3IgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcclxuICB2YXIgaW5uZXJSZWYgPSBfcmVmLmlubmVyUmVmLFxyXG4gICAgICBuYXZpZ2F0ZSA9IF9yZWYubmF2aWdhdGUsXHJcbiAgICAgIF9vbkNsaWNrID0gX3JlZi5vbkNsaWNrLFxyXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiaW5uZXJSZWZcIiwgXCJuYXZpZ2F0ZVwiLCBcIm9uQ2xpY2tcIl0pO1xyXG5cclxuICB2YXIgdGFyZ2V0ID0gcmVzdC50YXJnZXQ7XHJcblxyXG4gIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XHJcbiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50KSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgaWYgKF9vbkNsaWNrKSBfb25DbGljayhldmVudCk7XHJcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB0aHJvdyBleDtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIC8vIG9uQ2xpY2sgcHJldmVudGVkIGRlZmF1bHRcclxuICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmICggLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXHJcbiAgICAgICF0YXJnZXQgfHwgdGFyZ2V0ID09PSBcIl9zZWxmXCIpICYmIC8vIGxldCBicm93c2VyIGhhbmRsZSBcInRhcmdldD1fYmxhbmtcIiBldGMuXHJcbiAgICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIGlnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXHJcbiAgICAgICkge1xyXG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgIG5hdmlnYXRlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcclxuXHJcblxyXG4gIGlmIChmb3J3YXJkUmVmU2hpbSAhPT0gZm9yd2FyZFJlZikge1xyXG4gICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBwcm9wcy5yZWYgPSBpbm5lclJlZjtcclxuICB9XHJcbiAgLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGpzeC1hMTF5L2FuY2hvci1oYXMtY29udGVudCAqL1xyXG5cclxuXHJcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBwcm9wcyk7XHJcbn0pO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gIExpbmtBbmNob3IuZGlzcGxheU5hbWUgPSBcIkxpbmtBbmNob3JcIjtcclxufVxyXG4vKipcclxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyBhIGhpc3RvcnktYXdhcmUgPGE+LlxyXG4gKi9cclxuXHJcblxyXG52YXIgTGluayA9IGZvcndhcmRSZWYoZnVuY3Rpb24gKF9yZWYyLCBmb3J3YXJkZWRSZWYpIHtcclxuICB2YXIgX3JlZjIkY29tcG9uZW50ID0gX3JlZjIuY29tcG9uZW50LFxyXG4gICAgICBjb21wb25lbnQgPSBfcmVmMiRjb21wb25lbnQgPT09IHZvaWQgMCA/IExpbmtBbmNob3IgOiBfcmVmMiRjb21wb25lbnQsXHJcbiAgICAgIHJlcGxhY2UgPSBfcmVmMi5yZXBsYWNlLFxyXG4gICAgICB0byA9IF9yZWYyLnRvLFxyXG4gICAgICBpbm5lclJlZiA9IF9yZWYyLmlubmVyUmVmLFxyXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjIsIFtcImNvbXBvbmVudFwiLCBcInJlcGxhY2VcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTtcclxuXHJcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcclxuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICAgIHZhciBoaXN0b3J5ID0gY29udGV4dC5oaXN0b3J5O1xyXG4gICAgdmFyIGxvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbiksIGNvbnRleHQubG9jYXRpb24pO1xyXG4gICAgdmFyIGhyZWYgPSBsb2NhdGlvbiA/IGhpc3RvcnkuY3JlYXRlSHJlZihsb2NhdGlvbikgOiBcIlwiO1xyXG5cclxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XHJcbiAgICAgIGhyZWY6IGhyZWYsXHJcbiAgICAgIG5hdmlnYXRlOiBmdW5jdGlvbiBuYXZpZ2F0ZSgpIHtcclxuICAgICAgICB2YXIgbG9jYXRpb24gPSByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbik7XHJcbiAgICAgICAgdmFyIGlzRHVwbGljYXRlTmF2aWdhdGlvbiA9IGNyZWF0ZVBhdGgoY29udGV4dC5sb2NhdGlvbikgPT09IGNyZWF0ZVBhdGgobm9ybWFsaXplVG9Mb2NhdGlvbihsb2NhdGlvbikpO1xyXG4gICAgICAgIHZhciBtZXRob2QgPSByZXBsYWNlIHx8IGlzRHVwbGljYXRlTmF2aWdhdGlvbiA/IGhpc3RvcnkucmVwbGFjZSA6IGhpc3RvcnkucHVzaDtcclxuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xyXG4gICAgICB9XHJcbiAgICB9KTsgLy8gUmVhY3QgMTUgY29tcGF0XHJcblxyXG5cclxuICAgIGlmIChmb3J3YXJkUmVmU2hpbSAhPT0gZm9yd2FyZFJlZikge1xyXG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKTtcclxuICB9KTtcclxufSk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgdmFyIHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSk7XHJcbiAgdmFyIHJlZlR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnNoYXBlKHtcclxuICAgIGN1cnJlbnQ6IFByb3BUeXBlcy5hbnlcclxuICB9KV0pO1xyXG4gIExpbmsuZGlzcGxheU5hbWUgPSBcIkxpbmtcIjtcclxuICBMaW5rLnByb3BUeXBlcyA9IHtcclxuICAgIGlubmVyUmVmOiByZWZUeXBlLFxyXG4gICAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgICByZXBsYWNlOiBQcm9wVHlwZXMuYm9vbCxcclxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcclxuICAgIHRvOiB0b1R5cGUuaXNSZXF1aXJlZFxyXG4gIH07XHJcbn1cclxuXHJcbnZhciBmb3J3YXJkUmVmU2hpbSQxID0gZnVuY3Rpb24gZm9yd2FyZFJlZlNoaW0oQykge1xyXG4gIHJldHVybiBDO1xyXG59O1xyXG5cclxudmFyIGZvcndhcmRSZWYkMSA9IFJlYWN0LmZvcndhcmRSZWY7XHJcblxyXG5pZiAodHlwZW9mIGZvcndhcmRSZWYkMSA9PT0gXCJ1bmRlZmluZWRcIikge1xyXG4gIGZvcndhcmRSZWYkMSA9IGZvcndhcmRSZWZTaGltJDE7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKCkge1xyXG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBjbGFzc25hbWVzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xyXG4gICAgY2xhc3NuYW1lc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcclxuICB9XHJcblxyXG4gIHJldHVybiBjbGFzc25hbWVzLmZpbHRlcihmdW5jdGlvbiAoaSkge1xyXG4gICAgcmV0dXJuIGk7XHJcbiAgfSkuam9pbihcIiBcIik7XHJcbn1cclxuLyoqXHJcbiAqIEEgPExpbms+IHdyYXBwZXIgdGhhdCBrbm93cyBpZiBpdCdzIFwiYWN0aXZlXCIgb3Igbm90LlxyXG4gKi9cclxuXHJcblxyXG52YXIgTmF2TGluayA9IGZvcndhcmRSZWYkMShmdW5jdGlvbiAoX3JlZiwgZm9yd2FyZGVkUmVmKSB7XHJcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxyXG4gICAgICBhcmlhQ3VycmVudCA9IF9yZWYkYXJpYUN1cnJlbnQgPT09IHZvaWQgMCA/IFwicGFnZVwiIDogX3JlZiRhcmlhQ3VycmVudCxcclxuICAgICAgX3JlZiRhY3RpdmVDbGFzc05hbWUgPSBfcmVmLmFjdGl2ZUNsYXNzTmFtZSxcclxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcclxuICAgICAgYWN0aXZlU3R5bGUgPSBfcmVmLmFjdGl2ZVN0eWxlLFxyXG4gICAgICBjbGFzc05hbWVQcm9wID0gX3JlZi5jbGFzc05hbWUsXHJcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcclxuICAgICAgaXNBY3RpdmVQcm9wID0gX3JlZi5pc0FjdGl2ZSxcclxuICAgICAgbG9jYXRpb25Qcm9wID0gX3JlZi5sb2NhdGlvbixcclxuICAgICAgc2Vuc2l0aXZlID0gX3JlZi5zZW5zaXRpdmUsXHJcbiAgICAgIHN0cmljdCA9IF9yZWYuc3RyaWN0LFxyXG4gICAgICBzdHlsZVByb3AgPSBfcmVmLnN0eWxlLFxyXG4gICAgICB0byA9IF9yZWYudG8sXHJcbiAgICAgIGlubmVyUmVmID0gX3JlZi5pbm5lclJlZixcclxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImFyaWEtY3VycmVudFwiLCBcImFjdGl2ZUNsYXNzTmFtZVwiLCBcImFjdGl2ZVN0eWxlXCIsIFwiY2xhc3NOYW1lXCIsIFwiZXhhY3RcIiwgXCJpc0FjdGl2ZVwiLCBcImxvY2F0aW9uXCIsIFwic2Vuc2l0aXZlXCIsIFwic3RyaWN0XCIsIFwic3R5bGVcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTtcclxuXHJcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcclxuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8TmF2TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcclxuICAgIHZhciBjdXJyZW50TG9jYXRpb24gPSBsb2NhdGlvblByb3AgfHwgY29udGV4dC5sb2NhdGlvbjtcclxuICAgIHZhciB0b0xvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSwgY3VycmVudExvY2F0aW9uKTtcclxuICAgIHZhciBwYXRoID0gdG9Mb2NhdGlvbi5wYXRobmFtZTsgLy8gUmVnZXggdGFrZW4gZnJvbTogaHR0cHM6Ly9naXRodWIuY29tL3BpbGxhcmpzL3BhdGgtdG8tcmVnZXhwL2Jsb2IvbWFzdGVyL2luZGV4LmpzI0wyMDJcclxuXHJcbiAgICB2YXIgZXNjYXBlZFBhdGggPSBwYXRoICYmIHBhdGgucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xyXG4gICAgdmFyIG1hdGNoID0gZXNjYXBlZFBhdGggPyBtYXRjaFBhdGgoY3VycmVudExvY2F0aW9uLnBhdGhuYW1lLCB7XHJcbiAgICAgIHBhdGg6IGVzY2FwZWRQYXRoLFxyXG4gICAgICBleGFjdDogZXhhY3QsXHJcbiAgICAgIHNlbnNpdGl2ZTogc2Vuc2l0aXZlLFxyXG4gICAgICBzdHJpY3Q6IHN0cmljdFxyXG4gICAgfSkgOiBudWxsO1xyXG4gICAgdmFyIGlzQWN0aXZlID0gISEoaXNBY3RpdmVQcm9wID8gaXNBY3RpdmVQcm9wKG1hdGNoLCBjdXJyZW50TG9jYXRpb24pIDogbWF0Y2gpO1xyXG4gICAgdmFyIGNsYXNzTmFtZSA9IHR5cGVvZiBjbGFzc05hbWVQcm9wID09PSBcImZ1bmN0aW9uXCIgPyBjbGFzc05hbWVQcm9wKGlzQWN0aXZlKSA6IGNsYXNzTmFtZVByb3A7XHJcbiAgICB2YXIgc3R5bGUgPSB0eXBlb2Ygc3R5bGVQcm9wID09PSBcImZ1bmN0aW9uXCIgPyBzdHlsZVByb3AoaXNBY3RpdmUpIDogc3R5bGVQcm9wO1xyXG5cclxuICAgIGlmIChpc0FjdGl2ZSkge1xyXG4gICAgICBjbGFzc05hbWUgPSBqb2luQ2xhc3NuYW1lcyhjbGFzc05hbWUsIGFjdGl2ZUNsYXNzTmFtZSk7XHJcbiAgICAgIHN0eWxlID0gX2V4dGVuZHMoe30sIHN0eWxlLCBhY3RpdmVTdHlsZSk7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe1xyXG4gICAgICBcImFyaWEtY3VycmVudFwiOiBpc0FjdGl2ZSAmJiBhcmlhQ3VycmVudCB8fCBudWxsLFxyXG4gICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcclxuICAgICAgc3R5bGU6IHN0eWxlLFxyXG4gICAgICB0bzogdG9Mb2NhdGlvblxyXG4gICAgfSwgcmVzdCk7IC8vIFJlYWN0IDE1IGNvbXBhdFxyXG5cclxuXHJcbiAgICBpZiAoZm9yd2FyZFJlZlNoaW0kMSAhPT0gZm9yd2FyZFJlZiQxKSB7XHJcbiAgICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHByb3BzKTtcclxuICB9KTtcclxufSk7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgTmF2TGluay5kaXNwbGF5TmFtZSA9IFwiTmF2TGlua1wiO1xyXG4gIHZhciBhcmlhQ3VycmVudFR5cGUgPSBQcm9wVHlwZXMub25lT2YoW1wicGFnZVwiLCBcInN0ZXBcIiwgXCJsb2NhdGlvblwiLCBcImRhdGVcIiwgXCJ0aW1lXCIsIFwidHJ1ZVwiLCBcImZhbHNlXCJdKTtcclxuICBOYXZMaW5rLnByb3BUeXBlcyA9IF9leHRlbmRzKHt9LCBMaW5rLnByb3BUeXBlcywge1xyXG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxyXG4gICAgYWN0aXZlQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gICAgYWN0aXZlU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXHJcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jXSksXHJcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICBpc0FjdGl2ZTogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcclxuICAgIHNlbnNpdGl2ZTogUHJvcFR5cGVzLmJvb2wsXHJcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sLFxyXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSlcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IHsgQnJvd3NlclJvdXRlciwgSGFzaFJvdXRlciwgTGluaywgTmF2TGluayB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1yb3V0ZXItZG9tLmpzLm1hcFxyXG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjguMFxyXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xyXG4gKlxyXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXHJcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cclxuICovXHJcblxyXG4ndXNlIHN0cmljdCc7dmFyIGs9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSx5PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHo9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsYWE9bj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcclxuNjAxMTUsYmE9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBjYShhLGIsZCxjLGUsZyxoLGYpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBsPVtkLGMsZSxnLGgsZl0sbT0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGxbbSsrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cclxuZnVuY3Rpb24gQihhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGQ9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWQrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2NhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZCl9dmFyIEM9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEQ9e307XHJcbmZ1bmN0aW9uIEUoYSxiLGQpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9ZHx8Q31FLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0UucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7XCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YT9CKFwiODVcIik6dm9pZCAwO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07RS5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07ZnVuY3Rpb24gRigpe31GLnByb3RvdHlwZT1FLnByb3RvdHlwZTtmdW5jdGlvbiBHKGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWR8fEN9dmFyIEg9Ry5wcm90b3R5cGU9bmV3IEY7XHJcbkguY29uc3RydWN0b3I9RztrKEgsRS5wcm90b3R5cGUpO0guaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEk9e2N1cnJlbnQ6bnVsbH0sSj17Y3VycmVudDpudWxsfSxLPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xyXG5mdW5jdGlvbiBNKGEsYixkKXt2YXIgYz12b2lkIDAsZT17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZVtjXSYmKGVbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmUsX293bmVyOkouY3VycmVudH19XHJcbmZ1bmN0aW9uIGRhKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBOKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE89L1xcLysvZyxQPVtdO2Z1bmN0aW9uIFEoYSxiLGQsYyl7aWYoUC5sZW5ndGgpe3ZhciBlPVAucG9wKCk7ZS5yZXN1bHQ9YTtlLmtleVByZWZpeD1iO2UuZnVuYz1kO2UuY29udGV4dD1jO2UuY291bnQ9MDtyZXR1cm4gZX1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzpkLGNvbnRleHQ6Yyxjb3VudDowfX1cclxuZnVuY3Rpb24gUihhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlAubGVuZ3RoJiZQLnB1c2goYSl9XHJcbmZ1bmN0aW9uIFMoYSxiLGQsYyl7dmFyIGU9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWV8fFwiYm9vbGVhblwiPT09ZSlhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChlKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGQoYyxhLFwiXCI9PT1iP1wiLlwiK1QoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZT1hW2hdO3ZhciBmPWIrVChlLGgpO2crPVMoZSxmLGQsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1BJiZhW0FdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XHJcbjA7IShlPWEubmV4dCgpKS5kb25lOyllPWUudmFsdWUsZj1iK1QoZSxoKyspLGcrPVMoZSxmLGQsYyk7ZWxzZVwib2JqZWN0XCI9PT1lJiYoZD1cIlwiK2EsQihcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PWQ/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6ZCxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVShhLGIsZCl7cmV0dXJuIG51bGw9PWE/MDpTKGEsXCJcIixiLGQpfWZ1bmN0aW9uIFQoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIGVhKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cclxuZnVuY3Rpb24gZmEoYSxiLGQpe3ZhciBjPWEucmVzdWx0LGU9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/VihhLGMsZCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihOKGEpJiYoYT1kYShhLGUrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpK2QpKSxjLnB1c2goYSkpfWZ1bmN0aW9uIFYoYSxiLGQsYyxlKXt2YXIgZz1cIlwiO251bGwhPWQmJihnPShcIlwiK2QpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIik7Yj1RKGIsZyxjLGUpO1UoYSxmYSxiKTtSKGIpfWZ1bmN0aW9uIFcoKXt2YXIgYT1JLmN1cnJlbnQ7bnVsbD09PWE/QihcIjMwN1wiKTp2b2lkIDA7cmV0dXJuIGF9XHJcbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1YoYSxjLG51bGwsYixkKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZCl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVEobnVsbCxudWxsLGIsZCk7VShhLGVhLGIpO1IoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBVKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107VihhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe04oYSk/dm9pZCAwOkIoXCIxNDNcIik7cmV0dXJuIGF9fSxjcmVhdGVSZWY6ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX0sQ29tcG9uZW50OkUsUHVyZUNvbXBvbmVudDpHLGNyZWF0ZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLFxyXG5fY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX0sZm9yd2FyZFJlZjpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eSxyZW5kZXI6YX19LGxhenk6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOmJhLF9jdG9yOmEsX3N0YXR1czotMSxfcmVzdWx0Om51bGx9fSxtZW1vOmZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOmFhLHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUNhbGxiYWNrKGEsYil9LHVzZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUNvbnRleHQoYSxiKX0sdXNlRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VFZmZlY3QoYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLFxyXG5iLGQpe3JldHVybiBXKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsZCl9LHVzZURlYnVnVmFsdWU6ZnVuY3Rpb24oKXt9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZU1lbW8oYSxiKX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsZCl7cmV0dXJuIFcoKS51c2VSZWR1Y2VyKGEsYixkKX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlUmVmKGEpfSx1c2VTdGF0ZTpmdW5jdGlvbihhKXtyZXR1cm4gVygpLnVzZVN0YXRlKGEpfSxGcmFnbWVudDpyLFN0cmljdE1vZGU6dCxTdXNwZW5zZTp6LGNyZWF0ZUVsZW1lbnQ6TSxjbG9uZUVsZW1lbnQ6ZnVuY3Rpb24oYSxiLGQpe251bGw9PT1hfHx2b2lkIDA9PT1hP0IoXCIyNjdcIixhKTp2b2lkIDA7dmFyIGM9dm9pZCAwLGU9ayh7fSxhLnByb3BzKSxnPWEua2V5LGg9YS5yZWYsZj1hLl9vd25lcjtpZihudWxsIT1cclxuYil7dm9pZCAwIT09Yi5yZWYmJihoPWIucmVmLGY9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSk7dmFyIGw9dm9pZCAwO2EudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyYmKGw9YS50eXBlLmRlZmF1bHRQcm9wcyk7Zm9yKGMgaW4gYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPXZvaWQgMD09PWJbY10mJnZvaWQgMCE9PWw/bFtjXTpiW2NdKX1jPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09YyllLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGMpe2w9QXJyYXkoYyk7Zm9yKHZhciBtPTA7bTxjO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZyxyZWY6aCxwcm9wczplLF9vd25lcjpmfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0saXNWYWxpZEVsZW1lbnQ6Tix2ZXJzaW9uOlwiMTYuOC4wXCIsXHJcbnVuc3RhYmxlX0NvbmN1cnJlbnRNb2RlOngsdW5zdGFibGVfUHJvZmlsZXI6dSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpJLFJlYWN0Q3VycmVudE93bmVyOkosYXNzaWduOmt9fSxZPXtkZWZhdWx0Olh9LFo9WSYmWHx8WTttb2R1bGUuZXhwb3J0cz1aLmRlZmF1bHR8fFo7XHJcbiIsIid1c2Ugc3RyaWN0JztcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xyXG59IGVsc2Uge1xyXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcclxufVxyXG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTMuNlxyXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcclxuICpcclxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBkPW51bGwsZT0hMSxnPTMsaz0tMSxsPS0xLG09ITEsbj0hMTtmdW5jdGlvbiBwKCl7aWYoIW0pe3ZhciBhPWQuZXhwaXJhdGlvblRpbWU7bj9xKCk6bj0hMDtyKHQsYSl9fVxyXG5mdW5jdGlvbiB1KCl7dmFyIGE9ZCxiPWQubmV4dDtpZihkPT09YilkPW51bGw7ZWxzZXt2YXIgYz1kLnByZXZpb3VzO2Q9Yy5uZXh0PWI7Yi5wcmV2aW91cz1jfWEubmV4dD1hLnByZXZpb3VzPW51bGw7Yz1hLmNhbGxiYWNrO2I9YS5leHBpcmF0aW9uVGltZTthPWEucHJpb3JpdHlMZXZlbDt2YXIgZj1nLFE9bDtnPWE7bD1iO3RyeXt2YXIgaD1jKCl9ZmluYWxseXtnPWYsbD1RfWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBoKWlmKGg9e2NhbGxiYWNrOmgscHJpb3JpdHlMZXZlbDphLGV4cGlyYXRpb25UaW1lOmIsbmV4dDpudWxsLHByZXZpb3VzOm51bGx9LG51bGw9PT1kKWQ9aC5uZXh0PWgucHJldmlvdXM9aDtlbHNle2M9bnVsbDthPWQ7ZG97aWYoYS5leHBpcmF0aW9uVGltZT49Yil7Yz1hO2JyZWFrfWE9YS5uZXh0fXdoaWxlKGEhPT1kKTtudWxsPT09Yz9jPWQ6Yz09PWQmJihkPWgscCgpKTtiPWMucHJldmlvdXM7Yi5uZXh0PWMucHJldmlvdXM9aDtoLm5leHQ9YztoLnByZXZpb3VzPVxyXG5ifX1mdW5jdGlvbiB2KCl7aWYoLTE9PT1rJiZudWxsIT09ZCYmMT09PWQucHJpb3JpdHlMZXZlbCl7bT0hMDt0cnl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiYxPT09ZC5wcmlvcml0eUxldmVsKX1maW5hbGx5e209ITEsbnVsbCE9PWQ/cCgpOm49ITF9fX1mdW5jdGlvbiB0KGEpe209ITA7dmFyIGI9ZTtlPWE7dHJ5e2lmKGEpZm9yKDtudWxsIT09ZDspe3ZhciBjPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoZC5leHBpcmF0aW9uVGltZTw9Yyl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiZkLmV4cGlyYXRpb25UaW1lPD1jKX1lbHNlIGJyZWFrfWVsc2UgaWYobnVsbCE9PWQpe2RvIHUoKTt3aGlsZShudWxsIT09ZCYmIXcoKSl9fWZpbmFsbHl7bT0hMSxlPWIsbnVsbCE9PWQ/cCgpOm49ITEsdigpfX1cclxudmFyIHg9RGF0ZSx5PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZT9yZXF1ZXN0QW5pbWF0aW9uRnJhbWU6dm9pZCAwLEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNhbmNlbEFuaW1hdGlvbkZyYW1lP2NhbmNlbEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxDLEQ7ZnVuY3Rpb24gRShhKXtDPUEoZnVuY3Rpb24oYil7eihEKTthKGIpfSk7RD15KGZ1bmN0aW9uKCl7QihDKTthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSwxMDApfVxyXG5pZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgRj1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBGLm5vdygpfX1lbHNlIGV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHgubm93KCl9O3ZhciByLHEsdyxHPW51bGw7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiB3aW5kb3c/Rz13aW5kb3c6XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBnbG9iYWwmJihHPWdsb2JhbCk7XHJcbmlmKEcmJkcuX3NjaGVkTW9jayl7dmFyIEg9Ry5fc2NoZWRNb2NrO3I9SFswXTtxPUhbMV07dz1IWzJdO2V4cG9ydHMudW5zdGFibGVfbm93PUhbM119ZWxzZSBpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgST1udWxsLEo9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUkpdHJ5e0koYSl9ZmluYWxseXtJPW51bGx9fTtyPWZ1bmN0aW9uKGEpe251bGwhPT1JP3NldFRpbWVvdXQociwwLGEpOihJPWEsc2V0VGltZW91dChKLDAsITEpKX07cT1mdW5jdGlvbigpe0k9bnVsbH07dz1mdW5jdGlvbigpe3JldHVybiExfX1lbHNle1widW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSYmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpLFxyXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgQiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpKTt2YXIgSz1udWxsLEw9ITEsTT0tMSxOPSExLE89ITEsUD0wLFI9MzMsUz0zMzt3PWZ1bmN0aW9uKCl7cmV0dXJuIFA8PWV4cG9ydHMudW5zdGFibGVfbm93KCl9O3ZhciBUPW5ldyBNZXNzYWdlQ2hhbm5lbCxVPVQucG9ydDI7VC5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtMPSExO3ZhciBhPUssYj1NO0s9bnVsbDtNPS0xO3ZhciBjPWV4cG9ydHMudW5zdGFibGVfbm93KCksZj0hMTtpZigwPj1QLWMpaWYoLTEhPT1iJiZiPD1jKWY9ITA7ZWxzZXtOfHwoTj0hMCxFKFYpKTtLPWE7TT1iO3JldHVybn1pZihudWxsIT09YSl7Tz0hMDt0cnl7YShmKX1maW5hbGx5e089ITF9fX07XHJcbnZhciBWPWZ1bmN0aW9uKGEpe2lmKG51bGwhPT1LKXtFKFYpO3ZhciBiPWEtUCtTO2I8UyYmUjxTPyg4PmImJihiPTgpLFM9YjxSP1I6Yik6Uj1iO1A9YStTO0x8fChMPSEwLFUucG9zdE1lc3NhZ2Uodm9pZCAwKSl9ZWxzZSBOPSExfTtyPWZ1bmN0aW9uKGEsYil7Sz1hO009YjtPfHwwPmI/VS5wb3N0TWVzc2FnZSh2b2lkIDApOk58fChOPSEwLEUoVikpfTtxPWZ1bmN0aW9uKCl7Sz1udWxsO0w9ITE7TT0tMX19ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7XHJcbmV4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9ZyxmPWs7Zz1hO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e2c9YyxrPWYsdigpfX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChnKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1nfXZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtnPWMsaz1mLHYoKX19O1xyXG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXt2YXIgYz0tMSE9PWs/azpleHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWImJlwibnVtYmVyXCI9PT10eXBlb2YgYi50aW1lb3V0KWI9YytiLnRpbWVvdXQ7ZWxzZSBzd2l0Y2goZyl7Y2FzZSAxOmI9YystMTticmVhaztjYXNlIDI6Yj1jKzI1MDticmVhaztjYXNlIDU6Yj1jKzEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmI9YysxRTQ7YnJlYWs7ZGVmYXVsdDpiPWMrNUUzfWE9e2NhbGxiYWNrOmEscHJpb3JpdHlMZXZlbDpnLGV4cGlyYXRpb25UaW1lOmIsbmV4dDpudWxsLHByZXZpb3VzOm51bGx9O2lmKG51bGw9PT1kKWQ9YS5uZXh0PWEucHJldmlvdXM9YSxwKCk7ZWxzZXtjPW51bGw7dmFyIGY9ZDtkb3tpZihmLmV4cGlyYXRpb25UaW1lPmIpe2M9ZjticmVha31mPWYubmV4dH13aGlsZShmIT09ZCk7bnVsbD09PWM/Yz1kOmM9PT1kJiYoZD1hLHAoKSk7XHJcbmI9Yy5wcmV2aW91cztiLm5leHQ9Yy5wcmV2aW91cz1hO2EubmV4dD1jO2EucHJldmlvdXM9Yn1yZXR1cm4gYX07ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1hLm5leHQ7aWYobnVsbCE9PWIpe2lmKGI9PT1hKWQ9bnVsbDtlbHNle2E9PT1kJiYoZD1iKTt2YXIgYz1hLnByZXZpb3VzO2MubmV4dD1iO2IucHJldmlvdXM9Y31hLm5leHQ9YS5wcmV2aW91cz1udWxsfX07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9ZztyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1nLGY9aztnPWI7az1leHBvcnRzLnVuc3RhYmxlX25vdygpO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtnPWMsaz1mLHYoKX19fTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIGd9O1xyXG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIWUmJihudWxsIT09ZCYmZC5leHBpcmF0aW9uVGltZTxsfHx3KCkpfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7bnVsbCE9PWQmJnAoKX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBkfTtcclxuIiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xyXG59IGVsc2Uge1xyXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XHJcbn1cclxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XHJcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcclxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH07XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufTtcclxudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XHJcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cclxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxyXG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcclxuICAgIH0pO1xyXG59O1xyXG52YXIgX19nZW5lcmF0b3IgPSAodGhpcyAmJiB0aGlzLl9fZ2VuZXJhdG9yKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgYm9keSkge1xyXG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcclxuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xyXG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IHJldHVybiBmdW5jdGlvbiAodikgeyByZXR1cm4gc3RlcChbbiwgdl0pOyB9OyB9XHJcbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XHJcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xyXG4gICAgICAgIHdoaWxlIChfKSB0cnkge1xyXG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XHJcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcclxuICAgICAgICAgICAgc3dpdGNoIChvcFswXSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xyXG4gICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcclxuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XHJcbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07XHJcbiAgICB9XHJcbn07XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxudmFyIFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xyXG52YXIgcmVhY3RfMSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcclxudmFyIHJlYWN0X3JvdXRlcl9kb21fMSA9IHJlcXVpcmUoXCJyZWFjdC1yb3V0ZXItZG9tXCIpO1xyXG52YXIgbmF2XzEgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL25hdlwiKTtcclxudmFyIGRhaWx5XzEgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL2RhaWx5XCIpO1xyXG52YXIgaG91cmx5XzEgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL2hvdXJseVwiKTtcclxudmFyIHRvZGF5XzEgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL3RvZGF5XCIpO1xyXG52YXIgQXBwID0gZnVuY3Rpb24gKCkge1xyXG4gICAgLy9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L2ZvcmVjYXN0P3E9cmFsZWlnaCZhcHBpZD00OWNjOGM4MjFjZDJhZmY5YWYwNGM5Zjk4YzM2ZWI3NFxyXG4gICAgdmFyIF9hID0gKDAsIHJlYWN0XzEudXNlU3RhdGUpKCdDaGljYWdvJyksIGNpdHlOYW1lID0gX2FbMF0sIHNldENpdHlOYW1lID0gX2FbMV07XHJcbiAgICB2YXIgX2IgPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkoJycpLCBzZWFyY2hlZENpdHkgPSBfYlswXSwgc2V0U2VhcmNoZWRDaXR5ID0gX2JbMV07XHJcbiAgICAvL3Byb3BzIHNlbnQgdG8gVG9kYXkgY29tcG9uZW50XHJcbiAgICB2YXIgX2MgPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkoKSwgdGVtcCA9IF9jWzBdLCBzZXRUZW1wID0gX2NbMV07XHJcbiAgICB2YXIgX2QgPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkoKSwgZmVlbHNMaWtlID0gX2RbMF0sIHNldEZlZWxzTGlrZSA9IF9kWzFdO1xyXG4gICAgdmFyIF9lID0gKDAsIHJlYWN0XzEudXNlU3RhdGUpKCcnKSwgZGVzY3JpcHRpb24gPSBfZVswXSwgc2V0RGVzY3JpcHRpb24gPSBfZVsxXTtcclxuICAgIHZhciBfZiA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKSgpLCBodW1pZGl0eSA9IF9mWzBdLCBzZXRIdW1pZGl0eSA9IF9mWzFdO1xyXG4gICAgdmFyIF9nID0gKDAsIHJlYWN0XzEudXNlU3RhdGUpKCksIHdpbmRTcGVlZCA9IF9nWzBdLCBzZXRXaW5kU3BlZWQgPSBfZ1sxXTtcclxuICAgIHZhciBfaCA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKSgpLCB3aW5kRGVnID0gX2hbMF0sIHNldFdpbmREZWcgPSBfaFsxXTtcclxuICAgIHZhciBfaiA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKSgpLCB3aW5kR3VzdCA9IF9qWzBdLCBzZXRXaW5kR3VzdCA9IF9qWzFdO1xyXG4gICAgdmFyIF9rID0gKDAsIHJlYWN0XzEudXNlU3RhdGUpKCksIGxhdHRpdHVkZSA9IF9rWzBdLCBzZXRMYXR0aXR1ZGUgPSBfa1sxXTtcclxuICAgIHZhciBfbCA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKSgpLCBsb25naXR1ZGUgPSBfbFswXSwgc2V0TG9uZ2l0dWRlID0gX2xbMV07XHJcbiAgICAvL3Byb3BzIHNlbnQgdG8gSG91cmx5IGNvbXBvbmVudFxyXG4gICAgdmFyIF9tID0gKDAsIHJlYWN0XzEudXNlU3RhdGUpKFtdKSwgaG91cmx5VGVtcHMgPSBfbVswXSwgc2V0SG91cmx5VGVtcHMgPSBfbVsxXTtcclxuICAgIHZhciBfbyA9ICgwLCByZWFjdF8xLnVzZVN0YXRlKShbXSksIGhvdXJseUhvdXJzID0gX29bMF0sIHNldEhvdXJseUhvdXJzID0gX29bMV07XHJcbiAgICAvL3Byb3BzIHNlbmQgdG8gRGFpbHkgY29tcG9uZW50XHJcbiAgICB2YXIgX3AgPSAoMCwgcmVhY3RfMS51c2VTdGF0ZSkoW10pLCBkYWlseVRlbXBzID0gX3BbMF0sIHNldERhaWx5VGVtcHMgPSBfcFsxXTtcclxuICAgIHZhciBBUElrZXkgPSAnNDljYzhjODIxY2QyYWZmOWFmMDRjOWY5OGMzNmViNzQnO1xyXG4gICAgdmFyIHVuaXRzID0gJ2ltcGVyaWFsJzsgLy9tZXRyaWMsIGltcGVyaWFsIG9yIHN0YW5kYXJkXHJcbiAgICB2YXIgdXJsQ29vcmRzID0gXCJodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj9xPVwiICsgY2l0eU5hbWUgKyBcIiZhcHBpZD1cIiArIEFQSWtleTtcclxuICAgIGZ1bmN0aW9uIEFwaVNlYXJjaCgpIHtcclxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBGZXRjaENvb3JkcztcclxuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xyXG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgZmV0Y2godXJsQ29vcmRzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlcykgeyByZXR1cm4gcmVzLmpzb24oKTsgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsYXQgPSByZXMuY29vcmQubGF0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxvbiA9IHJlcy5jb29yZC5sb247XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdXJsT25lQ2FsbCA9IFwiaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L29uZWNhbGw/bGF0PVwiICsgbGF0ICsgXCImbG9uPVwiICsgbG9uICsgXCImdW5pdHM9XCIgKyB1bml0cyArIFwiJmV4Y2x1ZGU9bWludXRlbHkmYXBwaWQ9XCIgKyBBUElrZXk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgRmV0Y2hXZWF0aGVyID0gZmV0Y2godXJsT25lQ2FsbClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7IHJldHVybiByZXN1bHQuanNvbigpOyB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vcHV0cyBlaWdodCBkYWlseSB0ZW1wcyBpbiBhbiBhcnJheVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkYWlseV9hcnJheSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgODsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhaWx5X2FycmF5LnB1c2gocmVzdWx0LmRhaWx5W2ldLnRlbXAubWF4KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9wdXRzIDI0IGhvdXJseSB0ZW1wcyBhbmQgaG91cnMgaW4gYXJyYXlzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGhvdXJseV90ZW1wc19hcnJheSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBob3VybHlfaG91cnNfYXJyYXkgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IDIzOyBqKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaG91cmx5X3RlbXBzX2FycmF5LnB1c2gocmVzdWx0LmhvdXJseVtqXS50ZW1wKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGV4YWN0X2hvdXIgPSBJbnRsLkRhdGVUaW1lRm9ybWF0KCdlbi1VUycsIHsgaG91cjogJ251bWVyaWMnIH0pLmZvcm1hdChyZXN1bHQuaG91cmx5W2pdLmR0ICogMTAwMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhvdXJseV9ob3Vyc19hcnJheS5wdXNoKGV4YWN0X2hvdXIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2luc2lkZSBhIHJldHVybiBzbyBlYWNoIHN0YXRlIHVwZGF0ZXMgYXQgdGhlIHNhbWUgdGltZSBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKHNldExhdHRpdHVkZShsYXQpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRMb25naXR1ZGUobG9uKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGVtcChyZXN1bHQuY3VycmVudC50ZW1wKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0RmVlbHNMaWtlKHJlc3VsdC5jdXJyZW50LmZlZWxzX2xpa2UpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXREZXNjcmlwdGlvbihyZXN1bHQuY3VycmVudC53ZWF0aGVyWzBdLmRlc2NyaXB0aW9uKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0SHVtaWRpdHkocmVzLm1haW4uaHVtaWRpdHkpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRXaW5kU3BlZWQocmVzLndpbmQuc3BlZWQpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRXaW5kRGVnKHJlcy53aW5kLmRlZyksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFdpbmRHdXN0KHJlcy53aW5kLmd1c3QpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRIb3VybHlUZW1wcyhob3VybHlfdGVtcHNfYXJyYXkpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRIb3VybHlIb3Vycyhob3VybHlfaG91cnNfYXJyYXkpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXREYWlseVRlbXBzKGRhaWx5X2FycmF5KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSldO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgRmV0Y2hDb29yZHMgPSBfYS5zZW50KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvL2ZldGNoZXMgcmFsZWlnaCBvbiBwYWdlIGxvYWQsIHNvIHBhZ2UgZG9lc24ndCBsb29rIGJhcnJlblxyXG4gICAgKDAsIHJlYWN0XzEudXNlRWZmZWN0KShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgQXBpU2VhcmNoKCk7XHJcbiAgICB9LCBbXSk7XHJcbiAgICAvL29ubHkgZmV0Y2ggaWYgZW50ZXIga2V5IGlzIHByZXNzZWRcclxuICAgIHZhciBTZWFyY2hDaXR5ID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gJ0VudGVyJykge1xyXG4gICAgICAgICAgICBBcGlTZWFyY2goKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KHJlYWN0X3JvdXRlcl9kb21fMS5IYXNoUm91dGVyLCBudWxsLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQobmF2XzEuZGVmYXVsdCwgeyBuYW1lOiBjaXR5TmFtZSwgYWdlOiAyMiB9KSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwgeyB0eXBlOiAndGV4dCcsIG9uQ2hhbmdlOiBmdW5jdGlvbiAoZXZlbnQpIHsgcmV0dXJuIHNldENpdHlOYW1lKGV2ZW50LnRhcmdldC52YWx1ZSk7IH0sIHZhbHVlOiBjaXR5TmFtZSwgb25LZXlQcmVzczogU2VhcmNoQ2l0eSB9KSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnYm9keS1jb250YWluZXInIH0sXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLlN3aXRjaCwgbnVsbCxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLlJvdXRlLCB7IGV4YWN0OiB0cnVlLCBwYXRoOiAnLycsIHJlbmRlcjogZnVuY3Rpb24gKHByb3BzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KHRvZGF5XzEuZGVmYXVsdCwgX19hc3NpZ24oe30sIHByb3BzLCB7IHRlbXBlcmF0dXJlOiB0ZW1wLCB0ZW1wX2ZlZWxzX2xpa2U6IGZlZWxzTGlrZSwgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLCBodW1pZGl0eTogaHVtaWRpdHksIHdpbmRfc3BlZWQ6IHdpbmRTcGVlZCwgd2luZF9kZWdyZWVzOiB3aW5kRGVnLCB3aW5kX2d1c3Q6IHdpbmRHdXN0IH0pKTtcclxuICAgICAgICAgICAgICAgICAgICB9IH0pLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9yb3V0ZXJfZG9tXzEuUm91dGUsIHsgcGF0aDogJy9ob3VybHknLCByZW5kZXI6IGZ1bmN0aW9uIChwcm9wcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChob3VybHlfMS5kZWZhdWx0LCBfX2Fzc2lnbih7fSwgcHJvcHMsIHsgaG91cmx5X3RlbXBzOiBob3VybHlUZW1wcywgaG91cmx5X2hvdXJzOiBob3VybHlIb3VycyB9KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSB9KSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLlJvdXRlLCB7IHBhdGg6ICcvZGFpbHknLCByZW5kZXI6IGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChkYWlseV8xLmRlZmF1bHQsIF9fYXNzaWduKHt9LCBwcm9wcywgeyBkYWlseURhdGE6IGRhaWx5VGVtcHMgfSkpOyB9IH0pKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImgxXCIsIG51bGwsIHNlYXJjaGVkQ2l0eSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMVwiLCBudWxsLFxyXG4gICAgICAgICAgICAgICAgXCJsYXQgPSBcIixcclxuICAgICAgICAgICAgICAgIGxhdHRpdHVkZSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMVwiLCBudWxsLFxyXG4gICAgICAgICAgICAgICAgXCJsb24gPSBcIixcclxuICAgICAgICAgICAgICAgIGxvbmdpdHVkZSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBudWxsLFxyXG4gICAgICAgICAgICAgICAgXCJ0ZW1wID0gXCIsXHJcbiAgICAgICAgICAgICAgICB0ZW1wKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImgzXCIsIG51bGwsXHJcbiAgICAgICAgICAgICAgICBcImRhaWx5IG1heCA9IFwiLFxyXG4gICAgICAgICAgICAgICAgZGFpbHlUZW1wcykpKSk7XHJcbn07XHJcbmV4cG9ydHMuZGVmYXVsdCA9IEFwcDtcclxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxudmFyIFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xyXG52YXIgRGFpbHkgPSBmdW5jdGlvbiAocHJvcHMpIHtcclxuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogJ2RhaWx5LWNvbnRhaW5lcicgfSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDFcIiwgbnVsbCwgXCJEQUlMWVwiKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgcHJvcHMuZGFpbHlEYXRhWzBdKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgcHJvcHMuZGFpbHlEYXRhWzFdKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgcHJvcHMuZGFpbHlEYXRhWzJdKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgcHJvcHMuZGFpbHlEYXRhWzNdKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgcHJvcHMuZGFpbHlEYXRhWzRdKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgcHJvcHMuZGFpbHlEYXRhWzVdKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgcHJvcHMuZGFpbHlEYXRhWzZdKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgcHJvcHMuZGFpbHlEYXRhWzddKSkpO1xyXG59O1xyXG5leHBvcnRzLmRlZmF1bHQgPSBEYWlseTtcclxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxudmFyIFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xyXG52YXIgSG91cmx5ID0gZnVuY3Rpb24gKHByb3BzKSB7XHJcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICdob3VybHktY29udGFpbmVyJyB9LFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMVwiLCBudWxsLFxyXG4gICAgICAgICAgICBcIlRISVMgSE9VUiBJUyBcIixcclxuICAgICAgICAgICAgcHJvcHMuaG91cmx5X2hvdXJzWzBdKSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDFcIiwgbnVsbCxcclxuICAgICAgICAgICAgXCJORVhUIEhPVVIgSVMgXCIsXHJcbiAgICAgICAgICAgIHByb3BzLmhvdXJseV9ob3Vyc1sxXSksXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImgxXCIsIG51bGwsXHJcbiAgICAgICAgICAgIFwiTkVYVCBIT1VSIElTIFwiLFxyXG4gICAgICAgICAgICBwcm9wcy5ob3VybHlfaG91cnNbMl0pLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMVwiLCBudWxsLFxyXG4gICAgICAgICAgICBcIkhPVVJMWSBcIixcclxuICAgICAgICAgICAgcHJvcHMuaG91cmx5X3RlbXBzWzVdKSkpO1xyXG59O1xyXG5leHBvcnRzLmRlZmF1bHQgPSBIb3VybHk7XHJcbiIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcclxudmFyIHJlYWN0X3JvdXRlcl9kb21fMSA9IHJlcXVpcmUoXCJyZWFjdC1yb3V0ZXItZG9tXCIpO1xyXG52YXIgTmF2aWdhdGlvbiA9IGZ1bmN0aW9uIChwcm9wcykge1xyXG4gICAgdmFyIHRlc3R0dCA9IHByb3BzLm5hbWU7XHJcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJuYXZcIiwgbnVsbCxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwidWxcIiwgbnVsbCxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChyZWFjdF9yb3V0ZXJfZG9tXzEuTmF2TGluaywgeyBleGFjdDogdHJ1ZSwgYWN0aXZlQ2xhc3NuYW1lOiAnYWN0aXZlJywgdG86ICcvJyB9LFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIG51bGwsIFwiVG9kYXlcIikpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KHJlYWN0X3JvdXRlcl9kb21fMS5OYXZMaW5rLCB7IGFjdGl2ZUNsYXNzbmFtZTogJ2FjdGl2ZScsIHRvOiAnL2hvdXJseScgfSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCBudWxsLCBcIkhvdXJseVwiKSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQocmVhY3Rfcm91dGVyX2RvbV8xLk5hdkxpbmssIHsgYWN0aXZlQ2xhc3NuYW1lOiAnYWN0aXZlJywgdG86ICcvZGFpbHknIH0sXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgbnVsbCwgXCJEYWlseVwiKSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCBudWxsLFxyXG4gICAgICAgICAgICAgICAgXCJSYWRhclwiLFxyXG4gICAgICAgICAgICAgICAgdGVzdHR0KSkpKTtcclxufTtcclxuZXhwb3J0cy5kZWZhdWx0ID0gTmF2aWdhdGlvbjtcclxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxudmFyIFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xyXG52YXIgVG9kYXkgPSBmdW5jdGlvbiAocHJvcHMpIHtcclxuICAgIC8vPGgxPlRvZGF5e3Byb3BzLnRvZGF5RGF0YX08L2gxPlxyXG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAndG9kYXktY29udGFpbmVyJyB9LFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICd0b2RheS1sZWZ0JyB9LFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGlkOiAnY3VycmVudC13ZWF0aGVyJyB9LCBcIkN1cnJlbnQgV2VhdGhlclwiKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBpZDogJ3RpbWUnIH0sIEludGwuRGF0ZVRpbWVGb3JtYXQoJ2VuLVVTJywgeyBob3VyOiAnbnVtZXJpYycsIG1pbnV0ZTogJzItZGlnaXQnIH0pLmZvcm1hdChEYXRlLm5vdygpKSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIiwgeyBpZDogJ3dlYXRoZXItaW1nJywgc3JjOiAnLi4vaW1nL3Rlc3QucG5nJyB9KSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBpZDogJ3RlbXAnIH0sXHJcbiAgICAgICAgICAgICAgICBwcm9wcy50ZW1wZXJhdHVyZSxcclxuICAgICAgICAgICAgICAgIFwiXFx1MDBCMFwiKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBpZDogJ3JlYWwtZmVlbCcgfSxcclxuICAgICAgICAgICAgICAgIFwiRmVlbHMgTGlrZSBcIixcclxuICAgICAgICAgICAgICAgIHByb3BzLnRlbXBfZmVlbHNfbGlrZSxcclxuICAgICAgICAgICAgICAgIFwiXFx1MDBCMFwiKSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBpZDogJ292ZXJjYXN0JyB9LCBwcm9wcy5kZXNjcmlwdGlvbikpLFxyXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6ICd0b2RheS1yaWdodCcgfSxcclxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBpZDogJ2Fpci1xdWFsaXR5JyB9LCBcIkh1bWlkaXR5XCIpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGlkOiAnYWlyLXF1YWxpdHktZGF0YScgfSwgcHJvcHMuaHVtaWRpdHkpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGlkOiAnd2luZCcgfSwgXCJXaW5kXCIpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGlkOiAnd2luZC1kYXRhJyB9LFxyXG4gICAgICAgICAgICAgICAgXCJESVJFQ1RJT04gXCIsXHJcbiAgICAgICAgICAgICAgICBwcm9wcy53aW5kX3NwZWVkLFxyXG4gICAgICAgICAgICAgICAgXCIgbXBoXCIpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGlkOiAnd2luZC1ndXN0cycgfSwgXCJXaW5kIEd1c3RzXCIpLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGlkOiAnd2luZC1ndXN0cy1kYXRhJyB9LFxyXG4gICAgICAgICAgICAgICAgcHJvcHMud2luZF9ndXN0LFxyXG4gICAgICAgICAgICAgICAgXCIgbXBoXCIpKSkpO1xyXG59O1xyXG5leHBvcnRzLmRlZmF1bHQgPSBUb2RheTtcclxuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxudmFyIFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xyXG52YXIgUmVhY3RET00gPSByZXF1aXJlKFwicmVhY3QtZG9tXCIpO1xyXG52YXIgYXBwXzEgPSByZXF1aXJlKFwiLi9hcHBcIik7XHJcblJlYWN0RE9NLnJlbmRlcihSZWFjdC5jcmVhdGVFbGVtZW50KGFwcF8xLmRlZmF1bHQsIG51bGwpLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcm9vdCcpKTtcclxuIl0sIm5hbWVzIjpbInJlYWN0SXMiLCJSRUFDVF9TVEFUSUNTIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb250ZXh0VHlwZSIsImNvbnRleHRUeXBlcyIsImRlZmF1bHRQcm9wcyIsImRpc3BsYXlOYW1lIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwibWl4aW5zIiwicHJvcFR5cGVzIiwidHlwZSIsIktOT1dOX1NUQVRJQ1MiLCJuYW1lIiwibGVuZ3RoIiwicHJvdG90eXBlIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJndW1lbnRzIiwiYXJpdHkiLCJNRU1PX1NUQVRJQ1MiLCJjb21wYXJlIiwiVFlQRV9TVEFUSUNTIiwiZ2V0U3RhdGljcyIsImNvbXBvbmVudCIsImlzTWVtbyIsIkZvcndhcmRSZWYiLCJyZW5kZXIiLCJNZW1vIiwiZGVmaW5lUHJvcGVydHkiLCJPYmplY3QiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0UHJvdG90eXBlT2YiLCJvYmplY3RQcm90b3R5cGUiLCJtb2R1bGUiLCJleHBvcnRzIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJrZXlzIiwiY29uY2F0IiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJpIiwia2V5IiwiZGVzY3JpcHRvciIsImUiLCJBcnJheSIsImlzQXJyYXkiLCJhcnIiLCJ0b1N0cmluZyIsImNhbGwiLCJoYXNPd25Qcm9wZXJ0eSIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwiVHlwZUVycm9yIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsIm1hcCIsIm4iLCJqb2luIiwidGVzdDMiLCJzcGxpdCIsImZvckVhY2giLCJsZXR0ZXIiLCJlcnIiLCJzaG91bGRVc2VOYXRpdmUiLCJ0YXJnZXQiLCJzb3VyY2UiLCJmcm9tIiwic3ltYm9scyIsInRvIiwicyIsImlzYXJyYXkiLCJwYXRoVG9SZWdleHAiLCJwYXRoIiwib3B0aW9ucyIsIlJlZ0V4cCIsImdyb3VwcyIsIm1hdGNoIiwicHVzaCIsInByZWZpeCIsImRlbGltaXRlciIsIm9wdGlvbmFsIiwicmVwZWF0IiwicGFydGlhbCIsImFzdGVyaXNrIiwicGF0dGVybiIsImF0dGFjaEtleXMiLCJyZWdleHBUb1JlZ2V4cCIsInBhcnRzIiwiZmxhZ3MiLCJhcnJheVRvUmVnZXhwIiwidG9rZW5zVG9SZWdFeHAiLCJwYXJzZSIsInN0cmluZ1RvUmVnZXhwIiwiY29tcGlsZSIsInN0ciIsInRva2Vuc1RvRnVuY3Rpb24iLCJQQVRIX1JFR0VYUCIsInJlcyIsInRva2VucyIsImluZGV4IiwiZGVmYXVsdERlbGltaXRlciIsImV4ZWMiLCJtIiwiZXNjYXBlZCIsIm9mZnNldCIsInNsaWNlIiwibmV4dCIsImNhcHR1cmUiLCJncm91cCIsIm1vZGlmaWVyIiwiZXNjYXBlR3JvdXAiLCJlc2NhcGVTdHJpbmciLCJzdWJzdHIiLCJlbmNvZGVVUklDb21wb25lbnRQcmV0dHkiLCJlbmNvZGVVUkkiLCJyZXBsYWNlIiwiYyIsImNoYXJDb2RlQXQiLCJ0b1VwcGVyQ2FzZSIsIm1hdGNoZXMiLCJvYmoiLCJvcHRzIiwiZGF0YSIsImVuY29kZSIsInByZXR0eSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRva2VuIiwic2VnbWVudCIsInZhbHVlIiwiSlNPTiIsInN0cmluZ2lmeSIsImoiLCJ0ZXN0IiwicmUiLCJzZW5zaXRpdmUiLCJzdHJpY3QiLCJlbmQiLCJyb3V0ZSIsImVuZHNXaXRoRGVsaW1pdGVyIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwiZW1wdHlGdW5jdGlvbldpdGhSZXNldCIsInJlc2V0V2FybmluZ0NhY2hlIiwic2hpbSIsInByb3BzIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwibG9jYXRpb24iLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJFcnJvciIsImdldFNoaW0iLCJpc1JlcXVpcmVkIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJvb2wiLCJmdW5jIiwibnVtYmVyIiwib2JqZWN0Iiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImVsZW1lbnQiLCJlbGVtZW50VHlwZSIsImluc3RhbmNlT2YiLCJub2RlIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsImFhIiwicCIsImJhIiwiY2EiLCJhIiwiYiIsImQiLCJmIiwiZyIsImgiLCJsIiwiayIsImZyYW1lc1RvUG9wIiwidCIsImRhIiwiYXBwbHkiLCJ0aGlzIiwib25FcnJvciIsImVhIiwiZmEiLCJoYSIsImlhIiwiamEiLCJrYSIsIm1hIiwibmEiLCJvYSIsImluZGV4T2YiLCJwYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwicmEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInNhIiwicmVnaXN0cmF0aW9uTmFtZSIsInRhIiwidWEiLCJkZXBlbmRlbmNpZXMiLCJ2YSIsIndhIiwieGEiLCJ5YSIsImN1cnJlbnRUYXJnZXQiLCJsYSIsInphIiwiQWEiLCJCYSIsIkNhIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJjb25zdHJ1Y3RvciIsInJlbGVhc2UiLCJEYSIsImluamVjdEV2ZW50UGx1Z2luT3JkZXIiLCJpbmplY3RFdmVudFBsdWdpbnNCeU5hbWUiLCJFYSIsInN0YXRlTm9kZSIsImRpc2FibGVkIiwiRmEiLCJHYSIsIk1hdGgiLCJyYW5kb20iLCJIYSIsIklhIiwiSmEiLCJwYXJlbnROb2RlIiwidGFnIiwiS2EiLCJMYSIsIk1hIiwiTmEiLCJyZXR1cm4iLCJPYSIsImRpc3BhdGNoQ29uZmlnIiwiUGEiLCJfdGFyZ2V0SW5zdCIsIlFhIiwiUmEiLCJTYSIsIlRhIiwid2luZG93IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiVWEiLCJ0b0xvd2VyQ2FzZSIsIlZhIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiV2EiLCJYYSIsIllhIiwic3R5bGUiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWmEiLCIkYSIsImFiIiwiYmIiLCJjYiIsImRiIiwiZWIiLCJmYiIsImdiIiwidGV4dENvbnRlbnQiLCJoYiIsImliIiwiQSIsIm5hdGl2ZUV2ZW50IiwiSW50ZXJmYWNlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwia2IiLCJldmVudFBvb2wiLCJwb3AiLCJsYiIsImRlc3RydWN0b3IiLCJqYiIsImdldFBvb2xlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJleHRlbmQiLCJtYiIsIm5iIiwib2IiLCJwYiIsInFiIiwiZG9jdW1lbnRNb2RlIiwicmIiLCJzYiIsInRiIiwidmIiLCJiZWZvcmVJbnB1dCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwid2IiLCJ4YiIsImtleUNvZGUiLCJ5YiIsImRldGFpbCIsInpiIiwiQ2IiLCJsb2NhbGUiLCJ3aGljaCIsIkFiIiwiY3RybEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJjaGFyIiwiQmIiLCJEYiIsIkViIiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJNYiIsIk5iIiwiT2IiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwiUGIiLCJub2RlTmFtZSIsIlFiIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50Iiwibm9kZVR5cGUiLCJTYiIsInNldEF0dHJpYnV0ZSIsIlRiIiwiVmIiLCJfdmFsdWVUcmFja2VyIiwiZ2V0Iiwic2V0IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJVYiIsIldiIiwiY2hlY2tlZCIsIlhiIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJZYiIsIkQiLCJTeW1ib2wiLCJmb3IiLCJaYiIsIiRiIiwiYWMiLCJiYyIsImNjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsIml0ZXJhdG9yIiwibGMiLCJtYyIsIiQkdHlwZW9mIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJuYyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwib2MiLCJwYyIsInFjIiwicmMiLCJGIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsIkciLCJ2YyIsIndjIiwieGMiLCJ0YyIsImlzTmFOIiwidWMiLCJzYyIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwieWMiLCJ6YyIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiQWMiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJvd25lckRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsInRhYkluZGV4IiwiRmMiLCJjaGFuZ2UiLCJHYyIsIkhjIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiZGV0YWNoRXZlbnQiLCJPYyIsIlBjIiwiYXR0YWNoRXZlbnQiLCJRYyIsIlJjIiwiU2MiLCJUYyIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJVYyIsInZpZXciLCJWYyIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJXYyIsImdldE1vZGlmaWVyU3RhdGUiLCJYYyIsIlljIiwiWmMiLCIkYyIsImFkIiwiYmQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsImNkIiwicG9pbnRlcklkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiZGQiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsImVkIiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCJhbHRlcm5hdGUiLCJmZCIsImdkIiwiaGQiLCJrZCIsImVmZmVjdFRhZyIsImxkIiwibmQiLCJjaGlsZCIsInNpYmxpbmciLCJjdXJyZW50IiwibWQiLCJvZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJwZCIsImNsaXBib2FyZERhdGEiLCJxZCIsInJkIiwiY2hhckNvZGUiLCJzZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJ0ZCIsInVkIiwidmQiLCJkYXRhVHJhbnNmZXIiLCJ3ZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJ4ZCIsInlkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ6ZCIsIkFkIiwiQmQiLCJDZCIsImlzSW50ZXJhY3RpdmUiLCJEZCIsImlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSIsIkVkIiwiRmQiLCJHZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJjb250YWluZXJJbmZvIiwidG9wTGV2ZWxUeXBlIiwiSGQiLCJIIiwiSWQiLCJKZCIsImJpbmQiLCJhZGRFdmVudExpc3RlbmVyIiwiS2QiLCJMZCIsIk1kIiwiTmQiLCJPZCIsIlBkIiwiYm9keSIsIlFkIiwiZmlyc3RDaGlsZCIsIlJkIiwibmV4dFNpYmxpbmciLCJTZCIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJUZCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiVWQiLCJjb250ZW50RWRpdGFibGUiLCJWZCIsIldkIiwic2VsZWN0IiwiWGQiLCJZZCIsIlpkIiwiJGQiLCJhZSIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJiZSIsIm9uU2VsZWN0IiwiZGUiLCJjaGlsZHJlbiIsIkNoaWxkcmVuIiwiY2UiLCJlZSIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZmUiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImdlIiwiaGUiLCJpZSIsIlNpbXBsZUV2ZW50UGx1Z2luIiwiRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIiwiQ2hhbmdlRXZlbnRQbHVnaW4iLCJTZWxlY3RFdmVudFBsdWdpbiIsIkJlZm9yZUlucHV0RXZlbnRQbHVnaW4iLCJqZSIsImtlIiwibGUiLCJtZSIsIm5lIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJvZSIsImxhc3RDaGlsZCIsIm5vZGVWYWx1ZSIsInBlIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJxZSIsInRyaW0iLCJzZSIsInNldFByb3BlcnR5IiwiY2hhckF0Iiwic3Vic3RyaW5nIiwidGUiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJ1ZSIsInZlIiwiaXMiLCJ3ZSIsImJsdXIiLCJmb2N1cyIsInhlIiwieWUiLCJ6ZSIsIkFlIiwiYXV0b0ZvY3VzIiwiQmUiLCJfX2h0bWwiLCJDZSIsInNldFRpbWVvdXQiLCJEZSIsImNsZWFyVGltZW91dCIsIkVlIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsIkZlIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJIZSIsIkllIiwiU2V0IiwiSmUiLCJLZSIsIkkiLCJKIiwiTGUiLCJLIiwiTCIsIk1lIiwiT2UiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJNIiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJnZXRDaGlsZENvbnRleHQiLCJUZSIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiVWUiLCJWZSIsIldlIiwiWGUiLCJaZSIsInJlZiIsInBlbmRpbmdQcm9wcyIsImNvbnRleHREZXBlbmRlbmNpZXMiLCJtZW1vaXplZFN0YXRlIiwidXBkYXRlUXVldWUiLCJtZW1vaXplZFByb3BzIiwibW9kZSIsImxhc3RFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJjaGlsZEV4cGlyYXRpb25UaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJOIiwiJGUiLCJpc1JlYWN0Q29tcG9uZW50IiwiYmYiLCJjZiIsImRmIiwiZWYiLCJmZiIsImdmIiwicGVuZGluZ0NoaWxkcmVuIiwiaW1wbGVtZW50YXRpb24iLCJoZiIsImRpZEVycm9yIiwiZWFybGllc3RQZW5kaW5nVGltZSIsImxhdGVzdFBlbmRpbmdUaW1lIiwiamYiLCJrZiIsImxhdGVzdFBpbmdlZFRpbWUiLCJlYXJsaWVzdFN1c3BlbmRlZFRpbWUiLCJsYXRlc3RTdXNwZW5kZWRUaW1lIiwibGYiLCJuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbiIsIlAiLCJuZiIsIkNvbXBvbmVudCIsInJlZnMiLCJvZiIsImJhc2VTdGF0ZSIsInhmIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsImVucXVldWVTZXRTdGF0ZSIsInBmIiwicmYiLCJxZiIsInBheWxvYWQiLCJjYWxsYmFjayIsInNmIiwidGYiLCJ1ZiIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJ2ZiIsImVucXVldWVGb3JjZVVwZGF0ZSIsIndmIiwieWYiLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsInpmIiwiQWYiLCJzdGF0ZSIsInVwZGF0ZXIiLCJCZiIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIkNmIiwiY29udGV4dCIsIkRmIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJFZiIsIkZmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsIkdmIiwiSGYiLCJNYXAiLCJxIiwieCIsIkMiLCJ3IiwidSIsInIiLCJ2IiwiZGVsZXRlIiwiRSIsImRvbmUiLCJ6IiwiSWYiLCJKZiIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsImRvY3VtZW50RWxlbWVudCIsInRhZ05hbWUiLCJRZiIsIlJmIiwiU2YiLCJhZyIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJiZyIsImNnIiwiUSIsImRnIiwiZWciLCJSIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwibGciLCJtZyIsIm5nIiwib2ciLCJwZyIsInFnIiwicmciLCJzZyIsInRnIiwicXVldWUiLCJiYXNlVXBkYXRlIiwidWciLCJ2ZyIsIndnIiwiZGlzcGF0Y2giLCJhY3Rpb24iLCJ4ZyIsImxhc3QiLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwieWciLCJjcmVhdGUiLCJkZXN0cm95IiwiZGVwcyIsInpnIiwiQmciLCJDZyIsIkRnIiwiRWciLCJyZWFkQ29udGV4dCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwidXNlRGVidWdWYWx1ZSIsIiRmIiwiVmYiLCJGZyIsIkdnIiwiSGciLCJJZyIsIkpnIiwiS2ciLCJMZyIsIk1nIiwiTmciLCJPZyIsIlJlYWN0Q3VycmVudE93bmVyIiwiUyIsIlBnIiwiUWciLCJSZyIsIlNnIiwiVGciLCJVZyIsIlZnIiwiV2ciLCJYZyIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsIllnIiwiWmciLCJwZW5kaW5nQ29udGV4dCIsIiRnIiwidGltZWRPdXRBdCIsImZhbGxiYWNrIiwiY2giLCJkaCIsImVoIiwiZmgiLCJiaCIsIl9jb250ZXh0IiwiX2N1cnJlbnRWYWx1ZSIsImdoIiwib2JzZXJ2ZWRCaXRzIiwiZmlyc3QiLCJ3aCIsInloIiwiemgiLCJqaCIsImZpcnN0VXBkYXRlIiwibGFzdFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRVcGRhdGUiLCJsYXN0Q2FwdHVyZWRVcGRhdGUiLCJmaXJzdENhcHR1cmVkRWZmZWN0IiwibGFzdENhcHR1cmVkRWZmZWN0Iiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsInBoIiwicWgiLCJyaCIsInN0YWNrIiwic2giLCJvbkNsaWNrIiwib25jbGljayIsIkFoIiwiV2Vha1NldCIsIkJoIiwiY29uc29sZSIsImVycm9yIiwiQ2giLCJEaCIsIkVoIiwiR2giLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIkhoIiwiSWgiLCJKaCIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJLaCIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJHZSIsImRpc3BsYXkiLCJGaCIsIkxoIiwiaGFzIiwiYWRkIiwidGhlbiIsIk1oIiwiV2Vha01hcCIsIk5oIiwiT2giLCJQaCIsImNvbXBvbmVudERpZENhdGNoIiwiUWgiLCJjb21wb25lbnRTdGFjayIsIlJoIiwiU2giLCJUaCIsIlVoIiwiVmgiLCJXaCIsIlQiLCJYaCIsIlUiLCJZaCIsIlpoIiwiViIsIiRoIiwiYWkiLCJiaSIsImNpIiwiZGkiLCJlaSIsIlciLCJmaSIsImdpIiwiY3JlYXRlRWxlbWVudE5TIiwiY3JlYXRlVGV4dE5vZGUiLCJoaSIsIl9jdG9yIiwiZGVmYXVsdCIsIm1mIiwiYWYiLCJoeWRyYXRlIiwiaGlkZGVuIiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiYWgiLCJpaSIsInBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZSIsImppIiwibWF4RHVyYXRpb24iLCJwaW5nQ2FjaGUiLCJraSIsImZpbmlzaGVkV29yayIsImxpIiwibWkiLCJuaSIsIm9pIiwicGkiLCJxaSIsInJpIiwic2kiLCJYIiwidGkiLCJ1aSIsInZpIiwiWSIsIndpIiwieGkiLCJaIiwieWkiLCJ6aSIsIkFpIiwidW5zdGFibGVfbm93IiwiQmkiLCJDaSIsIkRpIiwiRWkiLCJGaSIsIkdpIiwidGltZW91dCIsInRpbWVvdXRIYW5kbGUiLCJIaSIsIklpIiwiSmkiLCJuZXh0U2NoZWR1bGVkUm9vdCIsIktpIiwiTGkiLCJNaSIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiX29uQ29tcGxldGUiLCJPaSIsImZpcnN0QmF0Y2giLCJfZXhwaXJhdGlvblRpbWUiLCJfZGVmZXIiLCJyYW5nZUNvdW50IiwidWIiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiQWciLCJOaSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwieSIsIkIiLCJPIiwibWluIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJxYSIsIlJiIiwiaWQiLCJkaiIsInRoIiwidWgiLCJlaiIsImpkIiwidmgiLCJOZSIsIlBpIiwiUWkiLCJSaSIsIlNpIiwiVGkiLCJVaSIsIlZpIiwiV2kiLCJfcm9vdCIsIl9jYWxsYmFja3MiLCJfbmV4dCIsIl9oYXNDaGlsZHJlbiIsIl9kaWRDb21wbGV0ZSIsIl9jaGlsZHJlbiIsIlhpIiwiX2RpZENvbW1pdCIsIl9vbkNvbW1pdCIsIllpIiwiX2ludGVybmFsUm9vdCIsIlppIiwiYWoiLCJsZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJoYXNBdHRyaWJ1dGUiLCIkaSIsImJqIiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJmaiIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwidW5zdGFibGVfZmx1c2hDb250cm9sbGVkIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJZZSIsIm92ZXJyaWRlUHJvcHMiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiYnVuZGxlVHlwZSIsInZlcnNpb24iLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiZ2oiLCJoaiIsImNoZWNrRENFIiwiQXN5bmNNb2RlIiwiQ29uY3VycmVudE1vZGUiLCJDb250ZXh0Q29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJFbGVtZW50IiwiRnJhZ21lbnQiLCJMYXp5IiwiUG9ydGFsIiwiUHJvZmlsZXIiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJ0eXBlT2YiLCJfc2V0UHJvdG90eXBlT2YiLCJvIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJfaW5oZXJpdHNMb29zZSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsIl9leHRlbmRzIiwiaXNBYnNvbHV0ZSIsInBhdGhuYW1lIiwic3BsaWNlT25lIiwibGlzdCIsInZhbHVlT2YiLCJ2YWx1ZUVxdWFsIiwiZXZlcnkiLCJpdGVtIiwiYVZhbHVlIiwiYlZhbHVlIiwiY29uZGl0aW9uIiwibWVzc2FnZSIsImFkZExlYWRpbmdTbGFzaCIsInN0cmlwTGVhZGluZ1NsYXNoIiwic3RyaXBCYXNlbmFtZSIsImhhc0Jhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImhhc2giLCJjcmVhdGVMb2NhdGlvbiIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwidW5kZWZpbmVkIiwiZGVjb2RlVVJJIiwiVVJJRXJyb3IiLCJoYXNUcmFpbGluZ1NsYXNoIiwidG9QYXJ0cyIsImZyb21QYXJ0cyIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwidXAiLCJwYXJ0IiwidW5zaGlmdCIsInJlc3VsdCIsImNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIiwicHJvbXB0IiwibGlzdGVuZXJzIiwic2V0UHJvbXB0IiwibmV4dFByb21wdCIsImNvbmZpcm1UcmFuc2l0aW9uVG8iLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwiYXBwZW5kTGlzdGVuZXIiLCJmbiIsImlzQWN0aXZlIiwibGlzdGVuZXIiLCJmaWx0ZXIiLCJub3RpZnlMaXN0ZW5lcnMiLCJfbGVuIiwiYXJncyIsIl9rZXkiLCJjYW5Vc2VET00iLCJnZXRDb25maXJtYXRpb24iLCJjb25maXJtIiwiUG9wU3RhdGVFdmVudCIsIkhhc2hDaGFuZ2VFdmVudCIsImdldEhpc3RvcnlTdGF0ZSIsImhpc3RvcnkiLCJjcmVhdGVCcm93c2VySGlzdG9yeSIsImdsb2JhbEhpc3RvcnkiLCJjYW5Vc2VIaXN0b3J5IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwibmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIiLCJfcHJvcHMiLCJfcHJvcHMkZm9yY2VSZWZyZXNoIiwiZm9yY2VSZWZyZXNoIiwiX3Byb3BzJGdldFVzZXJDb25maXJtIiwiX3Byb3BzJGtleUxlbmd0aCIsImtleUxlbmd0aCIsImJhc2VuYW1lIiwiZ2V0RE9NTG9jYXRpb24iLCJoaXN0b3J5U3RhdGUiLCJfcmVmIiwiX3dpbmRvdyRsb2NhdGlvbiIsImNyZWF0ZUtleSIsInRyYW5zaXRpb25NYW5hZ2VyIiwic2V0U3RhdGUiLCJuZXh0U3RhdGUiLCJoYW5kbGVQb3BTdGF0ZSIsImV2ZW50IiwiaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCIsImhhbmRsZVBvcCIsImhhbmRsZUhhc2hDaGFuZ2UiLCJmb3JjZU5leHRQb3AiLCJvayIsImZyb21Mb2NhdGlvbiIsInRvTG9jYXRpb24iLCJ0b0luZGV4IiwiYWxsS2V5cyIsImZyb21JbmRleCIsImRlbHRhIiwiZ28iLCJyZXZlcnRQb3AiLCJpbml0aWFsTG9jYXRpb24iLCJjcmVhdGVIcmVmIiwibGlzdGVuZXJDb3VudCIsImNoZWNrRE9NTGlzdGVuZXJzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlzQmxvY2tlZCIsImhyZWYiLCJwdXNoU3RhdGUiLCJwcmV2SW5kZXgiLCJuZXh0S2V5cyIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiSGFzaENoYW5nZUV2ZW50JDEiLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJzdHJpcEhhc2giLCJnZXRIYXNoUGF0aCIsInJlcGxhY2VIYXNoUGF0aCIsImNyZWF0ZUhhc2hIaXN0b3J5IiwiX3Byb3BzJGhhc2hUeXBlIiwiaGFzaFR5cGUiLCJfSGFzaFBhdGhDb2RlcnMkaGFzaFQiLCJpZ25vcmVQYXRoIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJhbGxQYXRocyIsImxhc3RJbmRleE9mIiwiYmFzZVRhZyIsInF1ZXJ5U2VsZWN0b3IiLCJnZXRBdHRyaWJ1dGUiLCJwdXNoSGFzaFBhdGgiLCJuZXh0UGF0aHMiLCJjbGFtcCIsImxvd2VyQm91bmQiLCJ1cHBlckJvdW5kIiwibWF4IiwiY3JlYXRlTWVtb3J5SGlzdG9yeSIsIl9wcm9wcyRpbml0aWFsRW50cmllcyIsImluaXRpYWxFbnRyaWVzIiwiX3Byb3BzJGluaXRpYWxJbmRleCIsImluaXRpYWxJbmRleCIsImVudHJpZXMiLCJlbnRyeSIsIm5leHRJbmRleCIsIm5leHRFbnRyaWVzIiwic3BsaWNlIiwiY2FuR28iLCJNQVhfU0lHTkVEXzMxX0JJVF9JTlQiLCJjb21tb25qc0dsb2JhbCIsImdsb2JhbFRoaXMiLCJjcmVhdGVFdmVudEVtaXR0ZXIiLCJoYW5kbGVycyIsIm9uIiwiaGFuZGxlciIsIm9mZiIsIm5ld1ZhbHVlIiwiY2hhbmdlZEJpdHMiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiUHJvdmlkZXIiLCJfQ29tcG9uZW50IiwiX3RoaXMiLCJlbWl0dGVyIiwiX3Byb3RvIiwibmV4dFByb3BzIiwib2xkVmFsdWUiLCJDb25zdW1lciIsIl9Db21wb25lbnQyIiwiX3RoaXMyIiwib25VcGRhdGUiLCJfcHJvdG8yIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJjcmVhdGVOYW1lZENvbnRleHQiLCJoaXN0b3J5Q29udGV4dCIsIlJvdXRlciIsIl9SZWFjdCRDb21wb25lbnQiLCJfaXNNb3VudGVkIiwiX3BlbmRpbmdMb2NhdGlvbiIsInN0YXRpY0NvbnRleHQiLCJjb21wdXRlUm9vdE1hdGNoIiwicGFyYW1zIiwiaXNFeGFjdCIsIk1lbW9yeVJvdXRlciIsIkxpZmVjeWNsZSIsIm9uTW91bnQiLCJwcmV2UHJvcHMiLCJvblVubW91bnQiLCJQcm9tcHQiLCJfcmVmJHdoZW4iLCJ3aGVuIiwibWV0aG9kIiwic2VsZiIsImNhY2hlIiwiY2FjaGVDb3VudCIsImdlbmVyYXRlUGF0aCIsImdlbmVyYXRvciIsImNvbXBpbGVQYXRoIiwiUmVkaXJlY3QiLCJjb21wdXRlZE1hdGNoIiwiX3JlZiRwdXNoIiwiY2FjaGUkMSIsImNhY2hlQ291bnQkMSIsIm1hdGNoUGF0aCIsIl9vcHRpb25zIiwiX29wdGlvbnMkZXhhY3QiLCJfb3B0aW9ucyRzdHJpY3QiLCJfb3B0aW9ucyRzZW5zaXRpdmUiLCJyZWR1Y2UiLCJtYXRjaGVkIiwiX2NvbXBpbGVQYXRoIiwiY2FjaGVLZXkiLCJwYXRoQ2FjaGUiLCJyZWdleHAiLCJjb21waWxlUGF0aCQxIiwidmFsdWVzIiwibWVtbyIsIlJvdXRlIiwiY29udGV4dCQxIiwiX3RoaXMkcHJvcHMiLCJpc0VtcHR5Q2hpbGRyZW4iLCJjcmVhdGVVUkwiLCJzdGF0aWNIYW5kbGVyIiwibWV0aG9kTmFtZSIsIm5vb3AiLCJTdGF0aWNSb3V0ZXIiLCJoYW5kbGVQdXNoIiwibmF2aWdhdGVUbyIsImhhbmRsZVJlcGxhY2UiLCJoYW5kbGVMaXN0ZW4iLCJoYW5kbGVCbG9jayIsIl90aGlzJHByb3BzJGJhc2VuYW1lIiwiX3RoaXMkcHJvcHMkY29udGV4dCIsImFkZEJhc2VuYW1lIiwiX3RoaXMkcHJvcHMyIiwiX3RoaXMkcHJvcHMyJGJhc2VuYW1lIiwiX3RoaXMkcHJvcHMyJGNvbnRleHQiLCJfdGhpcyRwcm9wczIkbG9jYXRpb24iLCJyZXN0IiwiU3dpdGNoIiwid2l0aFJvdXRlciIsIndyYXBwZWRDb21wb25lbnRSZWYiLCJyZW1haW5pbmdQcm9wcyIsIldyYXBwZWRDb21wb25lbnQiLCJ1c2VIaXN0b3J5IiwidXNlTG9jYXRpb24iLCJ1c2VQYXJhbXMiLCJ1c2VSb3V0ZU1hdGNoIiwiQnJvd3NlclJvdXRlciIsIkhhc2hSb3V0ZXIiLCJyZXNvbHZlVG9Mb2NhdGlvbiIsIm5vcm1hbGl6ZVRvTG9jYXRpb24iLCJmb3J3YXJkUmVmU2hpbSIsImZvcndhcmRSZWYiLCJMaW5rQW5jaG9yIiwiZm9yd2FyZGVkUmVmIiwiaW5uZXJSZWYiLCJuYXZpZ2F0ZSIsIl9vbkNsaWNrIiwiZXgiLCJpc01vZGlmaWVkRXZlbnQiLCJMaW5rIiwiX3JlZjIiLCJfcmVmMiRjb21wb25lbnQiLCJpc0R1cGxpY2F0ZU5hdmlnYXRpb24iLCJmb3J3YXJkUmVmU2hpbSQxIiwiZm9yd2FyZFJlZiQxIiwiTmF2TGluayIsIl9yZWYkYXJpYUN1cnJlbnQiLCJhcmlhQ3VycmVudCIsIl9yZWYkYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiY2xhc3NOYW1lIiwiaXNBY3RpdmVQcm9wIiwibG9jYXRpb25Qcm9wIiwic3R5bGVQcm9wIiwiZXNjYXBlZFBhdGgiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJmb3JjZVVwZGF0ZSIsIl9fc2VsZiIsIl9fc291cmNlIiwia2V5UHJlZml4IiwiY291bnQiLCJlc2NhcGUiLCJ0b0FycmF5Iiwib25seSIsImNyZWF0ZVJlZiIsIlB1cmVDb21wb25lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJsYXp5IiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlRmFjdG9yeSIsImlzVmFsaWRFbGVtZW50IiwidW5zdGFibGVfQ29uY3VycmVudE1vZGUiLCJ1bnN0YWJsZV9Qcm9maWxlciIsInByZXZpb3VzIiwicHJpb3JpdHlMZXZlbCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicGVyZm9ybWFuY2UiLCJfc2NoZWRNb2NrIiwiTWVzc2FnZUNoYW5uZWwiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsIl9fYXNzaWduIiwiX19hd2FpdGVyIiwidGhpc0FyZyIsIl9hcmd1bWVudHMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJyZWplY3RlZCIsIl9fZ2VuZXJhdG9yIiwiXyIsImxhYmVsIiwic2VudCIsInRyeXMiLCJvcHMiLCJ2ZXJiIiwib3AiLCJSZWFjdCIsInJlYWN0XzEiLCJyZWFjdF9yb3V0ZXJfZG9tXzEiLCJuYXZfMSIsImRhaWx5XzEiLCJob3VybHlfMSIsInRvZGF5XzEiLCJfYSIsImNpdHlOYW1lIiwic2V0Q2l0eU5hbWUiLCJfYiIsInNlYXJjaGVkQ2l0eSIsIl9jIiwidGVtcCIsInNldFRlbXAiLCJfZCIsImZlZWxzTGlrZSIsInNldEZlZWxzTGlrZSIsIl9lIiwiZGVzY3JpcHRpb24iLCJzZXREZXNjcmlwdGlvbiIsIl9mIiwiaHVtaWRpdHkiLCJzZXRIdW1pZGl0eSIsIl9nIiwid2luZFNwZWVkIiwic2V0V2luZFNwZWVkIiwiX2giLCJ3aW5kRGVnIiwic2V0V2luZERlZyIsIl9qIiwid2luZEd1c3QiLCJzZXRXaW5kR3VzdCIsIl9rIiwibGF0dGl0dWRlIiwic2V0TGF0dGl0dWRlIiwiX2wiLCJsb25naXR1ZGUiLCJzZXRMb25naXR1ZGUiLCJfbSIsImhvdXJseVRlbXBzIiwic2V0SG91cmx5VGVtcHMiLCJfbyIsImhvdXJseUhvdXJzIiwic2V0SG91cmx5SG91cnMiLCJfcCIsImRhaWx5VGVtcHMiLCJzZXREYWlseVRlbXBzIiwiQVBJa2V5IiwidXJsQ29vcmRzIiwiQXBpU2VhcmNoIiwiZmV0Y2giLCJqc29uIiwibGF0IiwiY29vcmQiLCJsb24iLCJsb2ciLCJkYWlseV9hcnJheSIsImRhaWx5IiwiaG91cmx5X3RlbXBzX2FycmF5IiwiaG91cmx5X2hvdXJzX2FycmF5IiwiaG91cmx5IiwiZXhhY3RfaG91ciIsIkludGwiLCJEYXRlVGltZUZvcm1hdCIsImhvdXIiLCJmb3JtYXQiLCJkdCIsImZlZWxzX2xpa2UiLCJ3ZWF0aGVyIiwibWFpbiIsIndpbmQiLCJzcGVlZCIsImRlZyIsImd1c3QiLCJhZ2UiLCJvbkNoYW5nZSIsIm9uS2V5UHJlc3MiLCJ0ZW1wZXJhdHVyZSIsInRlbXBfZmVlbHNfbGlrZSIsIndpbmRfc3BlZWQiLCJ3aW5kX2RlZ3JlZXMiLCJ3aW5kX2d1c3QiLCJob3VybHlfdGVtcHMiLCJob3VybHlfaG91cnMiLCJkYWlseURhdGEiLCJ0ZXN0dHQiLCJhY3RpdmVDbGFzc25hbWUiLCJtaW51dGUiLCJzcmMiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImRlZmluaXRpb24iLCJGdW5jdGlvbiIsInByb3AiLCJ0b1N0cmluZ1RhZyIsIlJlYWN0RE9NIiwiYXBwXzEiXSwic291cmNlUm9vdCI6IiJ9